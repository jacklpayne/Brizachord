ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Brizachord.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN10Brizachord14audio_callbackEPKPKfPPfj,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN10Brizachord14audio_callbackEPKPKfPPfj
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN10Brizachord14audio_callbackEPKPKfPPfj:
  27              	.LVL0:
  28              	.LFB5611:
  29              		.file 1 "Brizachord.cpp"
   1:Brizachord.cpp **** /*
   2:Brizachord.cpp **** GNU General Public License v3.0
   3:Brizachord.cpp **** Author: Jack Payne
   4:Brizachord.cpp **** 
   5:Brizachord.cpp ****  _______             __                                __                                  __ 
   6:Brizachord.cpp **** /       \           /  |                              /  |                                /  |
   7:Brizachord.cpp **** BBBBBBB  |  ______  BB/  ________   ______    _______ BB |____    ______    ______    ____BB |
   8:Brizachord.cpp **** BB |__BB | /      \ /  |/        | /      \  /       |BB      \  /      \  /      \  /    BB |
   9:Brizachord.cpp **** BB    BB< /BBBBBB  |BB |BBBBBBBB/  BBBBBB  |/BBBBBBB/ BBBBBBB  |/BBBBBB  |/BBBBBB  |/BBBBBBB |
  10:Brizachord.cpp **** BBBBBBB  |BB |  BB/ BB |  /  BB/   /    BB |BB |      BB |  BB |BB |  BB |BB |  BB/ BB |  BB |
  11:Brizachord.cpp **** BB |__BB |BB |      BB | /BBBB/__ /BBBBBBB |BB \_____ BB |  BB |BB \__BB |BB |      BB \__BB |
  12:Brizachord.cpp **** BB    BB/ BB |      BB |/BB      |BB    BB |BB       |BB |  BB |BB    BB/ BB |      BB    BB |
  13:Brizachord.cpp **** BBBBBBB/  BB/       BB/ BBBBBBBB/  BBBBBBB/  BBBBBBB/ BB/   BB/  BBBBBB/  BB/        BBBBBBB/	v1.0
  14:Brizachord.cpp **** */
  15:Brizachord.cpp **** 
  16:Brizachord.cpp **** #include "Brizachord.h"
  17:Brizachord.cpp **** Brizachord* Brizachord::instance = nullptr;
  18:Brizachord.cpp **** 
  19:Brizachord.cpp **** Brizachord::Brizachord() 
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
  21:Brizachord.cpp **** {
  22:Brizachord.cpp ****     Brizachord::instance = this;
  23:Brizachord.cpp **** 
  24:Brizachord.cpp **** 	// Hardware init
  25:Brizachord.cpp **** 	hw.Configure();
  26:Brizachord.cpp **** 	hw.Init();
  27:Brizachord.cpp **** 	hw.SetAudioBlockSize(4);
  28:Brizachord.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
  29:Brizachord.cpp **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 2


  30:Brizachord.cpp **** 	// Analog inputs init
  31:Brizachord.cpp **** 	AdcChannelConfig adc_config[4];
  32:Brizachord.cpp **** 	adc_config[0].InitSingle(hw.GetPin(15)); // A0 (Strum vol)
  33:Brizachord.cpp ****     adc_config[1].InitSingle(hw.GetPin(16)); // A1 (Chord vol)
  34:Brizachord.cpp ****     adc_config[2].InitSingle(hw.GetPin(17)); // A2 (Drums vol)
  35:Brizachord.cpp ****     adc_config[3].InitSingle(hw.GetPin(18)); // A3 (BPM)
  36:Brizachord.cpp **** 	hw.adc.Init(adc_config, 4);
  37:Brizachord.cpp **** 	hw.adc.Start();
  38:Brizachord.cpp **** 
  39:Brizachord.cpp **** 
  40:Brizachord.cpp **** 	gpio_state.init();
  41:Brizachord.cpp **** 
  42:Brizachord.cpp **** 	// Instrument state and oscillators init
  43:Brizachord.cpp **** 	instrument_state.chord.root = "Bb";
  44:Brizachord.cpp **** 	instrument_state.chord.quality = ChordQuality::MAJOR;
  45:Brizachord.cpp **** 	instrument_state.chord.extension = ChordExtension::TRIAD;
  46:Brizachord.cpp **** 	instrument_state.queued_extension = ChordExtension::TRIAD;
  47:Brizachord.cpp **** 	instrument_state.queued_quality = ChordQuality::MAJOR;
  48:Brizachord.cpp **** 	instrument_state.bpm = 80;
  49:Brizachord.cpp **** 
  50:Brizachord.cpp **** 	auto midi_notes = chord_to_midi(instrument_state.chord);
  51:Brizachord.cpp **** 	chord_synth.set_chord(instrument_state.chord);
  52:Brizachord.cpp **** 	//strum_synth.set_arpeggio(midi_notes);
  53:Brizachord.cpp **** 
  54:Brizachord.cpp **** 	// Trill sensor setup
  55:Brizachord.cpp ****     int i2cBus = 1;
  56:Brizachord.cpp ****     trill_bar.setup(i2cBus, Trill::BAR);
  57:Brizachord.cpp **** 
  58:Brizachord.cpp **** 
  59:Brizachord.cpp **** 	poll_trill_bar();
  60:Brizachord.cpp **** 	gpio_state.debounce_all();
  61:Brizachord.cpp **** 	poll_chord_qual();
  62:Brizachord.cpp **** 	poll_chord_ext();
  63:Brizachord.cpp **** 	poll_chord_root();
  64:Brizachord.cpp **** 	poll_pots();
  65:Brizachord.cpp **** 	poll_pattern_controls();
  66:Brizachord.cpp **** 
  67:Brizachord.cpp **** 	sequencer.set_bpm(instrument_state.bpm);
  68:Brizachord.cpp **** 
  69:Brizachord.cpp **** 	hw.StartAudio(audio_callback);
  70:Brizachord.cpp **** }
  71:Brizachord.cpp **** 
  72:Brizachord.cpp **** Brizachord::~Brizachord(){
  73:Brizachord.cpp **** 
  74:Brizachord.cpp **** }
  75:Brizachord.cpp **** 
  76:Brizachord.cpp **** void Brizachord::main_loop() {
  77:Brizachord.cpp **** 	while(1) {
  78:Brizachord.cpp **** 		poll_trill_bar();
  79:Brizachord.cpp **** 		gpio_state.debounce_all();
  80:Brizachord.cpp **** 		poll_chord_qual();
  81:Brizachord.cpp **** 		poll_chord_ext();
  82:Brizachord.cpp **** 		poll_chord_root();
  83:Brizachord.cpp **** 		poll_pots();
  84:Brizachord.cpp **** 		poll_pattern_controls();
  85:Brizachord.cpp **** 
  86:Brizachord.cpp **** 		sequencer.set_bpm(instrument_state.bpm);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 3


  87:Brizachord.cpp **** 	}    
  88:Brizachord.cpp **** }
  89:Brizachord.cpp **** 
  90:Brizachord.cpp **** //======================================================================
  91:Brizachord.cpp **** // Main callback
  92:Brizachord.cpp **** //======================================================================
  93:Brizachord.cpp **** /* 
  94:Brizachord.cpp **** This callback is called every sample and:
  95:Brizachord.cpp **** 1. Ticks the sequencer forward in time
  96:Brizachord.cpp **** 2. Collects a sample from each of the three sound sources (chord synth, strum synth, and drums)
  97:Brizachord.cpp **** 3. Scales them in proportion to user-set volumes and adds them together
  98:Brizachord.cpp **** 4. Sends the resulting sample to Daisy Seed's audio output pin
  99:Brizachord.cpp **** */
 100:Brizachord.cpp **** void Brizachord::audio_callback(AudioHandle::InputBuffer  in,
 101:Brizachord.cpp ****                                 AudioHandle::OutputBuffer out,
 102:Brizachord.cpp ****                                 size_t                    size) {
  30              		.loc 1 102 65 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 103:Brizachord.cpp **** 	
 104:Brizachord.cpp **** 	for (size_t i = 0; i < size; i++)
  34              		.loc 1 104 2 view .LVU1
  35              	.LBB2965:
  36              		.loc 1 104 23 view .LVU2
  37 0000 002A     		cmp	r2, #0
  38 0002 47D0     		beq	.L6
  39              	.LBE2965:
 102:Brizachord.cpp **** 	
  40              		.loc 1 102 65 is_stmt 0 view .LVU3
  41 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  42              		.cfi_def_cfa_offset 24
  43              		.cfi_offset 3, -24
  44              		.cfi_offset 4, -20
  45              		.cfi_offset 5, -16
  46              		.cfi_offset 6, -12
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49              	.LBB2970:
  50              	.LBB2966:
 105:Brizachord.cpp **** 	{	
 106:Brizachord.cpp **** 		instance->sequencer.tick();
  51              		.loc 1 106 13 view .LVU4
  52 0006 244D     		ldr	r5, .L10
  53 0008 0F46     		mov	r7, r1
  54 000a 1646     		mov	r6, r2
  55              	.LBE2966:
 104:Brizachord.cpp **** 	{	
  56              		.loc 1 104 14 view .LVU5
  57 000c 0024     		movs	r4, #0
  58              	.LBB2967:
  59              		.loc 1 106 13 view .LVU6
  60 000e 2868     		ldr	r0, [r5]
  61              	.LVL1:
  62              		.loc 1 106 13 view .LVU7
  63              	.LBE2967:
  64              	.LBE2970:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 4


 102:Brizachord.cpp **** 	
  65              		.loc 1 102 65 view .LVU8
  66 0010 2DED028B 		vpush.64	{d8}
  67              		.cfi_def_cfa_offset 32
  68              		.cfi_offset 80, -32
  69              		.cfi_offset 81, -28
  70              	.LVL2:
  71              	.L4:
  72              	.LBB2971:
  73              	.LBB2968:
  74              		.loc 1 106 3 is_stmt 1 discriminator 2 view .LVU9
  75              		.loc 1 106 27 is_stmt 0 discriminator 2 view .LVU10
  76 0014 00F6C800 		addw	r0, r0, #2248
  77 0018 FFF7FEFF 		bl	_ZN9Sequencer4tickEv
  78              	.LVL3:
 107:Brizachord.cpp **** 		float sample = 0.f;
  79              		.loc 1 107 3 is_stmt 1 discriminator 2 view .LVU11
 108:Brizachord.cpp **** 		
 109:Brizachord.cpp **** 		float chord_sample = instance->chord_synth.process();
  80              		.loc 1 109 3 discriminator 2 view .LVU12
  81              		.loc 1 109 53 is_stmt 0 discriminator 2 view .LVU13
  82 001c 2868     		ldr	r0, [r5]
  83 001e 00F5D760 		add	r0, r0, #1720
  84 0022 FFF7FEFF 		bl	_ZN10ChordSynth7processEv
  85              	.LVL4:
 110:Brizachord.cpp **** 		float drums_sample = instance->drum_synth.process();
  86              		.loc 1 110 52 discriminator 2 view .LVU14
  87 0026 2868     		ldr	r0, [r5]
 109:Brizachord.cpp **** 		float drums_sample = instance->drum_synth.process();
  88              		.loc 1 109 53 discriminator 2 view .LVU15
  89 0028 B0EE408A 		vmov.f32	s16, s0
  90              	.LVL5:
  91              		.loc 1 110 3 is_stmt 1 discriminator 2 view .LVU16
  92              		.loc 1 110 52 is_stmt 0 discriminator 2 view .LVU17
  93 002c 00F28C40 		addw	r0, r0, #1164
  94 0030 FFF7FEFF 		bl	_ZN9DrumSynth7processEv
  95              	.LVL6:
 111:Brizachord.cpp **** 		float strum_sample = instance->strum_synth.process();
  96              		.loc 1 111 53 discriminator 2 view .LVU18
  97 0034 2868     		ldr	r0, [r5]
 110:Brizachord.cpp **** 		float drums_sample = instance->drum_synth.process();
  98              		.loc 1 110 52 discriminator 2 view .LVU19
  99 0036 F0EE408A 		vmov.f32	s17, s0
 100              	.LVL7:
 101              		.loc 1 111 3 is_stmt 1 discriminator 2 view .LVU20
 102              		.loc 1 111 53 is_stmt 0 discriminator 2 view .LVU21
 103 003a 00F5FE60 		add	r0, r0, #2032
 104 003e FFF7FEFF 		bl	_ZN10StrumSynth7processEv
 105              	.LVL8:
 112:Brizachord.cpp **** 
 113:Brizachord.cpp **** 
 114:Brizachord.cpp **** 		sample += drums_sample * 0.2f * instance->drum_vol;
 106              		.loc 1 114 3 is_stmt 1 discriminator 2 view .LVU22
 107              		.loc 1 114 26 is_stmt 0 discriminator 2 view .LVU23
 108 0042 9FED167A 		vldr.32	s14, .L10+4
 109              		.loc 1 114 45 discriminator 2 view .LVU24
 110 0046 2868     		ldr	r0, [r5]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 5


 111              		.loc 1 114 26 discriminator 2 view .LVU25
 112 0048 68EE878A 		vmul.f32	s17, s17, s14
 113              	.LVL9:
 114              		.loc 1 114 10 discriminator 2 view .LVU26
 115 004c DFED147A 		vldr.32	s15, .L10+8
 116 0050 90ED026A 		vldr.32	s12, [r0, #8]
 115:Brizachord.cpp **** 		sample += chord_sample * 0.2f * instance->chord_vol;
 117              		.loc 1 115 26 discriminator 2 view .LVU27
 118 0054 28EE078A 		vmul.f32	s16, s16, s14
 119              	.LVL10:
 120              		.loc 1 115 10 discriminator 2 view .LVU28
 121 0058 D0ED016A 		vldr.32	s13, [r0, #4]
 114:Brizachord.cpp **** 		sample += chord_sample * 0.2f * instance->chord_vol;
 122              		.loc 1 114 10 discriminator 2 view .LVU29
 123 005c E8EE867A 		vfma.f32	s15, s17, s12
 124              	.LVL11:
 125              		.loc 1 115 3 is_stmt 1 discriminator 2 view .LVU30
 116:Brizachord.cpp **** 		sample += strum_sample * 0.6f * instance->strum_vol;
 126              		.loc 1 116 26 is_stmt 0 discriminator 2 view .LVU31
 127 0060 DFED105A 		vldr.32	s11, .L10+12
 128              		.loc 1 116 10 discriminator 2 view .LVU32
 129 0064 90ED007A 		vldr.32	s14, [r0]
 130              		.loc 1 116 26 discriminator 2 view .LVU33
 131 0068 20EE250A 		vmul.f32	s0, s0, s11
 132              	.LVL12:
 117:Brizachord.cpp **** 
 118:Brizachord.cpp **** 		out[0][i] = sample;
 133              		.loc 1 118 13 discriminator 2 view .LVU34
 134 006c D7E90023 		ldrd	r2, r3, [r7]
 115:Brizachord.cpp **** 		sample += strum_sample * 0.6f * instance->strum_vol;
 135              		.loc 1 115 10 discriminator 2 view .LVU35
 136 0070 E8EE267A 		vfma.f32	s15, s16, s13
 137              	.LVL13:
 116:Brizachord.cpp **** 		sample += strum_sample * 0.6f * instance->strum_vol;
 138              		.loc 1 116 3 is_stmt 1 discriminator 2 view .LVU36
 139              		.loc 1 118 13 is_stmt 0 discriminator 2 view .LVU37
 140 0074 02EB840C 		add	ip, r2, r4, lsl #2
 119:Brizachord.cpp **** 		out[1][i] = sample;
 141              		.loc 1 119 13 discriminator 2 view .LVU38
 142 0078 03EB8403 		add	r3, r3, r4, lsl #2
 143              	.LBE2968:
 104:Brizachord.cpp **** 	{	
 144              		.loc 1 104 2 discriminator 2 view .LVU39
 145 007c 0134     		adds	r4, r4, #1
 146              	.LVL14:
 104:Brizachord.cpp **** 	{	
 147              		.loc 1 104 23 discriminator 2 view .LVU40
 148 007e A642     		cmp	r6, r4
 149              	.LBB2969:
 116:Brizachord.cpp **** 
 150              		.loc 1 116 10 discriminator 2 view .LVU41
 151 0080 E0EE077A 		vfma.f32	s15, s0, s14
 152              	.LVL15:
 118:Brizachord.cpp **** 		out[1][i] = sample;
 153              		.loc 1 118 3 is_stmt 1 discriminator 2 view .LVU42
 118:Brizachord.cpp **** 		out[1][i] = sample;
 154              		.loc 1 118 13 is_stmt 0 discriminator 2 view .LVU43
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 6


 155 0084 CCED007A 		vstr.32	s15, [ip]
 156              		.loc 1 119 3 is_stmt 1 discriminator 2 view .LVU44
 157              		.loc 1 119 13 is_stmt 0 discriminator 2 view .LVU45
 158 0088 C3ED007A 		vstr.32	s15, [r3]
 159              	.LBE2969:
 104:Brizachord.cpp **** 	{	
 160              		.loc 1 104 2 is_stmt 1 discriminator 2 view .LVU46
 161              	.LVL16:
 104:Brizachord.cpp **** 	{	
 162              		.loc 1 104 23 discriminator 2 view .LVU47
 163 008c C2D1     		bne	.L4
 164              	.LBE2971:
 120:Brizachord.cpp **** 	}
 121:Brizachord.cpp **** }
 165              		.loc 1 121 1 is_stmt 0 view .LVU48
 166 008e BDEC028B 		vldm	sp!, {d8}
 167              		.cfi_restore 80
 168              		.cfi_restore 81
 169              		.cfi_def_cfa_offset 24
 170 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 171              	.LVL17:
 172              	.L6:
 173              		.cfi_def_cfa_offset 0
 174              		.cfi_restore 3
 175              		.cfi_restore 4
 176              		.cfi_restore 5
 177              		.cfi_restore 6
 178              		.cfi_restore 7
 179              		.cfi_restore 14
 180              		.loc 1 121 1 view .LVU49
 181 0094 7047     		bx	lr
 182              	.L11:
 183 0096 00BF     		.align	2
 184              	.L10:
 185 0098 00000000 		.word	.LANCHOR0
 186 009c CDCC4C3E 		.word	1045220557
 187 00a0 00000000 		.word	0
 188 00a4 9A99193F 		.word	1058642330
 189              		.cfi_endproc
 190              	.LFE5611:
 192              		.section	.text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS
 193              		.align	1
 194              		.p2align 2,,3
 195              		.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv5-d16
 201              	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS
 202              	.LVL18:
 203              	.LFB5445:
 204              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\unordered_m
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // unordered_map implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 7


   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** /** @file bits/unordered_map.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  Do not attempt to use it directly. @headername{unordered_map}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #ifndef _UNORDERED_MAP_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define _UNORDERED_MAP_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** {
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_map.
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_traits = __detail::_Hashtable_traits<_Cache, false, true>;
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __umap_traits<__cache_default<_Key, _Hash>::value>>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                         _Alloc, __detail::_Select1st,
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        _Pred, _Hash,
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Mod_range_hashing,
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Default_ranged_hash,
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Prime_rehash_policy, _Tr>;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_multimap.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_traits = __detail::_Hashtable_traits<_Cache, false, false>;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 8


  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __ummap_traits<__cache_default<_Key, _Hash>::value>>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Alloc, __detail::_Select1st,
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Pred, _Hash,
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Mod_range_hashing,
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Default_ranged_hash,
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Prime_rehash_policy, _Tr>;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_multimap;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /**
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @brief A standard container composed of unique keys (containing
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  at most one of each key value) that associates values of another type
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  with the keys.
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @ingroup unordered_associative_containers
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Key    Type of key objects.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Tp     Type of mapped objects.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Pred   Predicate function object type, defaults
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   to equal_to<_Value>.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Alloc  Allocator type, defaults to 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   std::allocator<std::pair<const _Key, _Tp>>.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, and
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  <a href="tables.html#xx">unordered associative container</a>
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    * The resulting value type of the container is std::pair<const _Key, _Tp>.
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Base is _Hashtable, dispatched at compile time via template
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  alias __umap_hashtable.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key, typename _Tp,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = equal_to<_Key>,
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = allocator<std::pair<const _Key, _Tp>>>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_map
 205              		.loc 2 102 11 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		.loc 2 102 11 is_stmt 0 view .LVU51
 210 0000 70B5     		push	{r4, r5, r6, lr}
 211              		.cfi_def_cfa_offset 16
 212              		.cfi_offset 4, -16
 213              		.cfi_offset 5, -12
 214              		.cfi_offset 6, -8
 215              		.cfi_offset 14, -4
 216              	.LBB3031:
 217              	.LBB3032:
 218              	.LBB3033:
 219              	.LBB3034:
 220              	.LBB3035:
 221              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hashtable.h
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 9


   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // hashtable.h header -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** /** @file bits/hashtable.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  Do not attempt to use it directly. @headername{unordered_map, unordered_set}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #ifndef _HASHTABLE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #define _HASHTABLE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #include <bits/hashtable_policy.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** # include <bits/node_handle.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Tp, typename _Hash>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     using __cache_default
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       =  __not_<__and_<// Do not cache for fast hasher.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_fast_hash<_Hash>,
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       // Mandatory to have erase not throwing.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_nothrow_invocable<const _Hash&, const _Tp&>>>;
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   /**
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Primary class template _Hashtable.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @ingroup hashtable-detail
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Value  CopyConstructible type.
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 10


  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Key    CopyConstructible type.
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Alloc  An allocator type
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  ([lib.allocator.requirements]) whose _Alloc::value_type is
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value.  As a conforming extension, we allow for
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Alloc::value_type != _Value.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _ExtractKey  Function object that takes an object of type
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value and returns a value of type _Key.
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Equal  Function object that takes two objects of type k
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and returns a bool-like value that is true if the two objects
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  are considered equal.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H1  The hash function. A unary function object with
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  argument type _Key and result type size_t. Return values should
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  be distributed over the entire range [0, numeric_limits<size_t>:::max()].
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H2  The range-hashing function (in the terminology of
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Tavori and Dreizin).  A binary function object whose argument
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  types and result type are all size_t.  Given arguments r and N,
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  the return value is in the range [0, N).
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Hash  The ranged hash function (Tavori and Dreizin). A
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  binary function whose argument types are _Key and size_t and
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  whose result type is size_t.  Given arguments k and N, the
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  return value is in the range [0, N).  Default: hash(k, N) =
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  h2(h1(k), N).  If _Hash is anything other than the default, _H1
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and _H2 are ignored.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _RehashPolicy  Policy class with three members, all of
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  which govern the bucket count. _M_next_bkt(n) returns a bucket
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  count no smaller than n.  _M_bkt_for_elements(n) returns a
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket count appropriate for an element count of n.
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_need_rehash(n_bkt, n_elt, n_ins) determines whether, if the
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  current bucket count is n_bkt and the current element count is
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  n_elt, we need to increase the bucket count.  If so, returns
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  make_pair(true, n), where n is the new bucket count.  If not,
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  returns make_pair(false, <anything>)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Traits  Compile-time class with three boolean
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::integral_constant members:  __cache_hash_code, __constant_iterators,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *   __unique_keys.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Each _Hashtable data structure has:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Bucket[]       _M_buckets
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node_base _M_before_begin
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_bucket_count
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_element_count
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  with _Bucket being _Hash_node* and _Hash_node containing:
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node*   _M_next
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - Tp            _M_value
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_t        _M_hash_code if cache_hash_code is true
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 11


 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  In terms of Standard containers the hashtable is like the aggregation of:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::forward_list<_Node> containing the elements
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::vector<std::forward_list<_Node>::iterator> representing the buckets
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The non-empty buckets contain the node before the first node in the
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket. This design makes it possible to implement something like a
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::insert_after on container insertion and
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::erase_after on container erase
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  calls. _M_before_begin is equivalent to
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::before_begin. Empty buckets contain
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  nullptr.  Note that one of the non-empty buckets contains
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  &_M_before_begin which is not a dereferenceable node so the
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  node pointer in a bucket shall never be dereferenced, only its
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  next node can be.
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Walking through a bucket's nodes requires a check on the hash code to
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  see if each node is still in the bucket. Such a design assumes a
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  quite efficient hash functor and is one of the reasons it is
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  highly advisable to set __cache_hash_code to true.
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The container iterators are simply built from nodes. This way
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  incrementing the iterator is perfectly efficient independent of
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  how many empty buckets there are in the container.
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On insert we compute the element's hash code and use it to find the
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket index. If the element must be inserted in an empty bucket
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  we add it at the beginning of the singly linked list and make the
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket point to _M_before_begin. The bucket that used to point to
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_before_begin, if any, is updated to point to its new before
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  begin node.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On erase, the simple iterator design requires using the hash
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  functor to get the index of the bucket to update. For this
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  reason, when __cache_hash_code is set to false the hash functor must
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  not throw and this is enforced by a static assertion.
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Functionality is implemented by decomposition into base classes,
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  where the derived _Hashtable class is used in _Map_base,
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Insert, _Rehash_base, and _Equality base classes to access the
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  "this" pointer. _Hashtable_base is used in the base classes as a
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  non-recursive, fully-completed-type so that detailed nested type
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  information, such as iterator type and node type, can be
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  used. This is similar to the "Curiously Recurring Template
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Pattern" (CRTP) technique, but uses a reconstructed, not
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  explicitly passed, template pattern.
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Base class templates are: 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Hashtable_base
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Map_base
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Insert
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Rehash_base
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Equality
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    */
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value, typename _Alloc,
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _ExtractKey, typename _Equal,
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 12


 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _RehashPolicy, typename _Traits>
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     class _Hashtable
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : public __detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal,
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       _H1, _H2, _Hash, _Traits>,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       private __detail::_Hashtable_alloc<
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__alloc_rebind<_Alloc,
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __detail::_Hash_node<_Value,
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Traits::__hash_cached::value>>>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename remove_cv<_Value>::type, _Value>::value,
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have a non-const, non-volatile value_type");
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename _Alloc::value_type, _Value>{},
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have the same value_type as its allocator");
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __traits_type = _Traits;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_cached = typename __traits_type::__hash_cached;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_type = __detail::_Hash_node<_Value, __hash_cached::value>;
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_alloc = __detail::_Hashtable_alloc<__node_alloc_type>;
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __value_alloc_traits =
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__value_alloc_traits;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_traits =
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_base = typename __hashtable_alloc::__node_base;
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __bucket_type = typename __hashtable_alloc::__bucket_type;
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Key						key_type;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Value						value_type;
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Alloc						allocator_type;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Equal						key_equal;
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // mapped_type, if present, comes from _Map_base.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hasher, if present, comes from _Hash_code_base/_Hashtable_base.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::pointer		pointer;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::const_pointer	const_pointer;
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef value_type&					reference;
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef const value_type&					const_reference;
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_type = _RehashPolicy;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_state = typename __rehash_type::_State;
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __constant_iterators = typename __traits_type::__constant_iterators;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __unique_keys = typename __traits_type::__unique_keys;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 13


 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __key_extract = typename std::conditional<
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __constant_iterators::value,
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       	     __detail::_Identity,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __detail::_Select1st>::type;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_base = __detail::
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _Hashtable_base<_Key, _Value, _ExtractKey,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      _Equal, _H1, _H2, _Hash, _Traits>;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code_base =  typename __hashtable_base::__hash_code_base;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code =  typename __hashtable_base::__hash_code;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __map_base = __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _Equal, _H1, _H2, _Hash,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _RehashPolicy, _Traits>;
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_base = __detail::_Rehash_base<_Key, _Value, _Alloc,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _ExtractKey, _Equal,
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _H1, _H2, _Hash,
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _RehashPolicy, _Traits>;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __eq_base = __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Equal, _H1, _H2, _Hash,
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _RehashPolicy, _Traits>;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __reuse_or_alloc_node_gen_t =
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_ReuseOrAllocNode<__node_alloc_type>;
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __alloc_node_gen_t =
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_AllocNode<__node_alloc_type>;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Simple RAII type for managing a node containing an element
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct _Scoped_node
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Take ownership of a node with a constructed element.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(__node_type* __n, __hashtable_alloc* __h)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Allocate a node and construct an element within it.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	template<typename... _Args>
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _Scoped_node(__hashtable_alloc* __h, _Args&&... __args)
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  { }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Destroy element and deallocate node.
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(const _Scoped_node&) = delete;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node& operator=(const _Scoped_node&) = delete;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc* _M_h;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* _M_node;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       };
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 14


 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	static constexpr
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename conditional<std::is_lvalue_reference<_Ht>::value,
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     const value_type&, value_type&&>::type
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__fwd_value_for(value_type& __val) noexcept
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return std::move(__val); }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Metaprogramming for picking apart hash caching.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_cached = __or_<__not_<__hash_cached>, _Cond>;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_not_cached = __or_<__hash_cached, _Cond>;
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Compile-time diagnostics.
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _Hash_code_base has everything protected, so use this derived type to
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // access it.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct __hash_code_base_access : __hash_code_base
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { using __hash_code_base::_M_bucket_index; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Getting a bucket index from a node shall not throw because it is used
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in methods (erase, swap...) that shall not throw.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(noexcept(declval<const __hash_code_base_access&>()
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     ._M_bucket_index((const __node_type*)nullptr,
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      (std::size_t)0)),
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Cache the hash code or qualify your functors involved"
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " in hash code and bucket index computation with noexcept");
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // When hash codes are cached local iterator inherits from H2 functor
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which must then be default constructible.
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(__if_hash_cached<is_default_constructible<_H2>>::value,
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Functor used to map hash code to bucket index"
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " must be default constructible");
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Map_base;
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa>
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert_base;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Constant_iteratorsa>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert;
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 15


 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Equality;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using size_type = typename __hashtable_base::size_type;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using difference_type = typename __hashtable_base::difference_type;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using iterator = typename __hashtable_base::iterator;
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_iterator = typename __hashtable_base::const_iterator;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using local_iterator = typename __hashtable_base::local_iterator;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_local_iterator = typename __hashtable_base::
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				   const_local_iterator;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using node_type = _Node_handle<_Key, _Value, __node_alloc_type>;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using insert_return_type = _Node_insert_return<iterator, node_type>;
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*		_M_buckets		= &_M_single_bucket;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_bucket_count		= 1;
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base		_M_before_begin;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_element_count	= 0;
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _RehashPolicy		_M_rehash_policy;
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // A single bucket used when only need for 1 bucket. Especially
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // interesting in move semantic to leave hashtable with only 1 bucket
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which is not allocated so that we can have those operations noexcept
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // qualified.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Note that we can't leave hashtable with 0 bucket without adding
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // numerous checks in the code to avoid 0 modulus.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type		_M_single_bucket	= nullptr;
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket(__bucket_type* __bkts) const
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket() const
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_uses_single_bucket(_M_buckets); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc&
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_base_alloc() { return *this; }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_allocate_buckets(size_type __bkt_count)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__builtin_expect(__bkt_count == 1, false))
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_single_bucket = nullptr;
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 16


 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets(__bucket_type* __bkts, size_type __bkt_count)
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_uses_single_bucket(__bkts))
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets()
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Gets bucket begin, deals with the fact that non-empty buckets contain
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // their before begin node.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_begin(size_type __bkt) const;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_begin() const
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 222              		.loc 3 421 64 view .LVU52
 223 0002 8568     		ldr	r5, [r0, #8]
 224              	.LBE3035:
 225              	.LBE3034:
 226              	.LBE3033:
 227              	.LBE3032:
 228              	.LBE3031:
 229              		.loc 2 102 11 view .LVU53
 230 0004 0646     		mov	r6, r0
 231              	.LVL19:
 232              	.LBB3116:
 233              	.LBI3031:
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Assign *this using another _Hashtable instance. Whether elements
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // are copied or moved depends on the _Ht reference.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign_elements(_Ht&&);
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht, typename _NodeGenerator>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign(_Ht&&, const _NodeGenerator&);
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, true_type);
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, false_type);
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reset() noexcept;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _H1& __h1, const _H2& __h2, const _Hash& __h,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 17


 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_base(__exk, __h1, __h2, __h, __eq),
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc(__node_alloc_type(__a))
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Constructor, destructor, assignment, swap
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable() = default;
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1&, const _H2&, const _Hash&,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal&, const _ExtractKey&,
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type&);
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __first, _InputIterator __last,
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1&, const _H2&, const _Hash&,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _Equal&, const _ExtractKey&,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type&);
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&);
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&) noexcept;
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&, const allocator_type&);
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&, const allocator_type&);
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Use delegating constructors.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const allocator_type& __a)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_alloc(__node_alloc_type(__a))
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __f, _InputIterator __l,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint = 0,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1& __hf = _H1(),
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const key_equal& __eql = key_equal(),
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type& __a = allocator_type())
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _Hashtable(__f, __l, __bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __key_extract(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(initializer_list<value_type> __l,
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 18


 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__l.begin(), __l.end(), __bkt_count_hint,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hf, _H2(), _Hash(), __eql,
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(const _Hashtable& __ht);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(_Hashtable&& __ht)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__node_alloc_traits::_S_nothrow_move()
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_H1>::value
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_Equal>::value)
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****         constexpr bool __move_storage =
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_alloc_traits::_S_propagate_on_move_assign()
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  || __node_alloc_traits::_S_always_equal();
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), __bool_constant<__move_storage>());
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(initializer_list<value_type> __l)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_before_begin._M_nxt = nullptr;
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	clear();
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	this->_M_insert_range(__l.begin(), __l.end(), __roan, __unique_keys());
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ~_Hashtable() noexcept;
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       swap(_Hashtable&)
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__and_<__is_nothrow_swappable<_H1>,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                  __is_nothrow_swappable<_Equal>>::value);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Basic container operations
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() noexcept
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(_M_begin()); }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() const noexcept
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() noexcept
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(nullptr); }
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() const noexcept
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin() const noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 19


 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend() const noexcept
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size() const noexcept
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_element_count; }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _GLIBCXX_NODISCARD bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       empty() const noexcept
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return size() == 0; }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       allocator_type
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       get_allocator() const noexcept
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return allocator_type(this->_M_node_allocator()); }
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_size() const noexcept
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __node_alloc_traits::max_size(this->_M_node_allocator()); }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Observers
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_equal
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_eq() const
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return this->_M_eq(); }
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash_function, if present, comes from _Hash_code_base.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket operations
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_count() const noexcept
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_count; }
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_bucket_count() const noexcept
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return max_size(); }
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_size(size_type __bkt) const
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return std::distance(begin(__bkt), end(__bkt)); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket(const key_type& __k) const
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_index(__k, this->_M_hash_code(__k)); }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt)
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return local_iterator(*this, _M_bucket_begin(__bkt),
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			      __bkt, _M_bucket_count);
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 20


 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt) const
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt) const
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 691.
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin(size_type __bkt) const
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend(size_type __bkt) const
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       float
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       load_factor() const noexcept
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return static_cast<float>(size()) / static_cast<float>(bucket_count());
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // max_load_factor, if present, comes from _Rehash_base.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Generalization of max_load_factor.  Extension, not found in
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // TR1.  Only useful if _RehashPolicy is something other than
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // the default.
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const _RehashPolicy&
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy() const
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_rehash_policy; }
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy(const _RehashPolicy& __pol)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_rehash_policy = __pol; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Lookup.
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k);
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k) const;
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       count(const key_type& __k) const;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<iterator, iterator>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k);
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<const_iterator, const_iterator>
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k) const;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 21


 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     protected:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket index computation helpers.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(__node_type* __n) const noexcept
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(const key_type& __k, __hash_code __c) const
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find and insert helper functions and types
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before the one matching the criteria.
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_before_node(size_type, const key_type&, __hash_code) const;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_node(size_type __bkt, const key_type& __key,
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_base* __before_n = _M_find_before_node(__bkt, __key, __c);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert a node at the beginning of a bucket.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(size_type, __node_type*);
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Remove the bucket first node
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_remove_bucket_begin(size_type __bkt, __node_type* __next_n,
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     size_type __next_bkt);
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Get the node before __n in the bucket __bkt
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_get_previous_node(size_type __bkt, __node_base* __n);
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code, in bucket __bkt
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if no rehash (assumes no element with same key already present).
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_unique_node(const key_type& __k, size_type __bkt,
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    __hash_code __code, __node_type* __n,
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    size_type __n_elt = 1);
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_multi_node(__node_type* __hint, const key_type& __k,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __hash_code __code, __node_type* __n);
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(true_type, _Args&&... __args);
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 22


 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(false_type __uk, _Args&&... __args)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(cend(), __uk, std::forward<_Args>(__args)...); }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace with hint, useless when keys are unique.
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, true_type __uk, _Args&&... __args)
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__uk, std::forward<_Args>(__args)...).first; }
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, false_type, _Args&&... __args);
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&&, const _NodeGenerator&, true_type, size_type = 1);
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&& __arg, const _NodeGenerator& __node_gen,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  false_type __uk)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_insert(cend(), std::forward<_Arg>(__arg), __node_gen,
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __uk);
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint, not used when keys are unique.
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&& __arg,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator& __node_gen, true_type __uk)
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_insert(std::forward<_Arg>(__arg), __node_gen, __uk).first;
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint when keys are not unique.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&&,
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator&, false_type);
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(true_type, const key_type&);
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(false_type, const key_type&);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n);
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__ireturn_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 23


 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace(_Args&&... __args)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace_hint(const_iterator __hint, _Args&&... __args)
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_emplace(__hint, __unique_keys(),
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    std::forward<_Args>(__args)...);
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert member functions via inheritance.
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Erase
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator);
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // LWG 2059.
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(iterator __it)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return erase(const_iterator(__it)); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const key_type& __k)
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_erase(__unique_keys(), __k); }
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator, const_iterator);
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear() noexcept;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Set number of buckets keeping it appropriate for container's number
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // of elements.
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void rehash(size_type __bkt_count);
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 1189.
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // reserve, if present, comes from _Rehash_base.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with unique keys.
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       insert_return_type
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node(node_type&& __nh)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	insert_return_type __ret;
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ret.position = end();
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __glibcxx_assert(get_allocator() == __nh.get_allocator());
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    const key_type& __k = __nh._M_key();
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hash_code __code = this->_M_hash_code(__k);
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __bkt = _M_bucket_index(__k, __code);
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node_type* __n = _M_find_node(__bkt, __k, __code))
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.node = std::move(__nh);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 24


 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position = iterator(__n);
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = false;
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    else
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  = _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr);
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__nh._M_ptr = nullptr;
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = true;
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with equivalent keys.
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node_multi(const_iterator __hint, node_type&& __nh)
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return end();
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__glibcxx_assert(get_allocator() == __nh.get_allocator());
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = __nh._M_key();
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __code = this->_M_hash_code(__k);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __ret
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __nh._M_ptr);
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__nh._M_ptr = nullptr;
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_extract_node(size_t __bkt, __node_base* __prev_n)
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__prev_n == _M_buckets[__bkt])
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_remove_bucket_begin(__bkt, __n->_M_next(),
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	     __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else if (__n->_M_nxt)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __next_bkt = _M_bucket_index(__n->_M_next());
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__next_bkt != __bkt)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets[__next_bkt] = __prev_n;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n->_M_nxt = __n->_M_nxt;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__n->_M_nxt = nullptr;
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	--_M_element_count;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __n, this->_M_node_allocator() };
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Extract a node.
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const_iterator __pos)
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 25


 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_t __bkt = _M_bucket_index(__pos._M_cur);
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return _M_extract_node(__bkt,
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _M_get_previous_node(__bkt, __pos._M_cur));
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Extract a node.
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const _Key& __k)
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	node_type __nh;
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __bkt = _M_bucket_index(__k, __code);
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_base* __prev_node = _M_find_before_node(__bkt, __k, __code))
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __nh = _M_extract_node(__bkt, __prev_node);
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __nh;
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with unique keys.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_unique(_Compatible_Hashtable& __src) noexcept
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto __n_elt = __src.size();
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      auto __pos = __i++;
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      const key_type& __k = this->_M_extract()(*__pos);
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hash_code __code = this->_M_hash_code(__k);
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      size_type __bkt = _M_bucket_index(__k, __code);
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (_M_find_node(__bkt, __k, __code) == nullptr)
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  auto __nh = __src.extract(__pos);
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr,
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					__n_elt);
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __nh._M_ptr = nullptr;
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __n_elt = 1;
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      else if (__n_elt != 1)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		--__n_elt;
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with equivalent keys.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_multi(_Compatible_Hashtable& __src) noexcept
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->reserve(size() + __src.size());
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 26


 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_reinsert_node_multi(cend(), __src.extract(__i++));
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif // C++17
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys are unique.
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, true_type);
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys can be non-unique.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, false_type);
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Unconditionally change size of bucket array to n, restore
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash policy state to __state on exception.
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash(size_type __bkt_count, const __rehash_state& __state);
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     };
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Definitions of class template _Hashtable's out-of-line member functions.
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_bucket_begin(size_type __bkt) const
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_type*
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __n = _M_buckets[__bkt];
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __n ? static_cast<__node_type*>(__n->_M_nxt) : nullptr;
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(size_type __bkt_count_hint,
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _H1& __h1, const _H2& __h2, const _Hash& __h,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _Equal& __eq, const _ExtractKey& __exk,
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const allocator_type& __a)
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count_hint);
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count > _M_bucket_count)
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = _M_allocate_buckets(__bkt_count);
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_bucket_count = __bkt_count;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _InputIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 27


1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_InputIterator __f, _InputIterator __l,
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint,
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __h1, const _H2& __h2, const _Hash& __h,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __nb_elems = __detail::__distance_fw(__f, __l);
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __bkt_count =
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_next_bkt(
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __bkt_count_hint));
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__bkt_count > _M_bucket_count)
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__bkt_count);
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __bkt_count;
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	for (; __f != __l; ++__f)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     operator=(const _Hashtable& __ht)
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> _Hashtable&
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (&__ht == this)
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__node_alloc_traits::_S_propagate_on_copy_assign())
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __this_alloc = this->_M_node_allocator();
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __that_alloc = __ht._M_node_allocator();
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__node_alloc_traits::_S_always_equal()
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      && __this_alloc != __that_alloc)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      // Replacement allocator cannot free existing storage.
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_nodes(_M_begin());
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = nullptr;
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = nullptr;
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      std::__alloc_on_copy(__this_alloc, __that_alloc);
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hashtable_base::operator=(__ht);
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_bucket_count = __ht._M_bucket_count;
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_element_count = __ht._M_element_count;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_rehash_policy = __ht._M_rehash_policy;
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __alloc_node_gen_t __alloc_node_gen(*this);
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __try
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 28


1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_assign(__ht, __alloc_node_gen);
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __catch(...)
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // _M_assign took care of deallocating all memory. Now we
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // must make sure this instance remains in a usable state.
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_reset();
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __throw_exception_again;
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return *this;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::__alloc_on_copy(__this_alloc, __that_alloc);
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Reuse allocated buckets and nodes.
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(__ht);
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht>
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(_Ht&& __ht)
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __former_buckets = nullptr;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __former_bucket_count = _M_bucket_count;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const __rehash_state& __former_state = _M_rehash_policy._M_state();
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_bucket_count != __ht._M_bucket_count)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __former_buckets = _M_buckets;
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__ht._M_bucket_count);
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __ht._M_bucket_count;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __builtin_memset(_M_buckets, 0,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hashtable_base::operator=(std::forward<_Ht>(__ht));
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_element_count = __ht._M_element_count;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = nullptr;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 29


1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		// Restore previous buckets.
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_deallocate_buckets();
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_rehash_policy._M_reset(__former_state);
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_buckets = __former_buckets;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_bucket_count = __former_bucket_count;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __builtin_memset(_M_buckets, 0,
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     _M_bucket_count * sizeof(__bucket_type));
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht, typename _NodeGenerator>
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(_Ht&& __ht, const _NodeGenerator& __node_gen)
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __buckets = nullptr;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (!_M_buckets)
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (!__ht._M_before_begin._M_nxt)
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // First deal with the special first node pointed to by
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __ht_n = __ht._M_begin();
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __this_n
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    this->_M_copy_code(__this_n, __ht_n);
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __this_n;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // Then deal with other nodes.
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_base* __prev_n = __this_n;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    for (__ht_n = __ht_n->_M_next(); __ht_n; __ht_n = __ht_n->_M_next())
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__this_n = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n->_M_nxt = __this_n;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __bkt = _M_bucket_index(__this_n);
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (!_M_buckets[__bkt])
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 30


1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    clear();
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__buckets)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_reset() noexcept
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy._M_reset();
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = 1;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_single_bucket = nullptr;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = &_M_single_bucket;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, true_type)
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_base::operator=(std::move(__ht));
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy = __ht._M_rehash_policy;
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__ht._M_uses_single_bucket())
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets = __ht._M_buckets;
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __ht._M_bucket_count;
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = __ht._M_element_count;
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_move(this->_M_node_allocator(), __ht._M_node_allocator());
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 31


1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, false_type)
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), true_type());
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Can't move memory, move elements then.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign_elements(std::move(__ht));
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht)
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_alloc_traits::_S_select_on_copy(__ht._M_node_allocator())),
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht) noexcept
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(std::move(__ht._M_base_alloc())),
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(__ht._M_buckets),
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin(__ht._M_before_begin._M_nxt),
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, buckets if __ht is using its single bucket.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 32


1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_uses_single_bucket())
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, bucket pointing to before begin that hasn't
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht, const allocator_type& __a)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(),
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht, const allocator_type& __a)
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__ht._M_uses_single_bucket())
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = &_M_single_bucket;
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_single_bucket = __ht._M_single_bucket;
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 33


1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = __ht._M_buckets;
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Update, if necessary, bucket pointing to before begin that hasn't
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // moved.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (_M_begin())
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht._M_reset();
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __alloc_node_gen_t __alloc_gen(*this);
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  using _Fwd_Ht = typename
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    conditional<__move_if_noexcept_cond<value_type>::value,
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			const _Hashtable&, _Hashtable&&>::type;
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign(std::forward<_Fwd_Ht>(__ht), __alloc_gen);
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 234              		.loc 3 1383 5 is_stmt 1 view .LVU54
 235              	.LBB3085:
 236              	.LBI3032:
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     ~_Hashtable() noexcept
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear();
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     swap(_Hashtable& __x)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     noexcept(__and_<__is_nothrow_swappable<_H1>,
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                __is_nothrow_swappable<_Equal>>::value)
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // The only base class with member variables is hash_code_base.
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We define _Hash_code_base::_M_swap because different
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // specializations have different members.
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_swap(__x);
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_swap(this->_M_node_allocator(), __x._M_node_allocator());
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_rehash_policy, __x._M_rehash_policy);
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deal properly with potentially moved instances.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 34


1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (this->_M_uses_single_bucket())
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__x._M_uses_single_bucket())
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = __x._M_buckets;
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __x._M_buckets = &__x._M_single_bucket;
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__x._M_uses_single_bucket())
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __x._M_buckets = _M_buckets;
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}	
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::swap(_M_buckets, __x._M_buckets);
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_bucket_count, __x._M_bucket_count);
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_before_begin._M_nxt, __x._M_before_begin._M_nxt);
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_element_count, __x._M_element_count);
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_single_bucket, __x._M_single_bucket);
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // swapped.
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__x._M_begin())
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__x._M_buckets[__x._M_bucket_index(__x._M_begin())]
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = &__x._M_before_begin;
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k)
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? iterator(__p) : end();
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k) const
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> const_iterator
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 35


1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? const_iterator(__p) : end();
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     count(const key_type& __k) const
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_bucket_begin(__bkt);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__p)
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __result = 0;
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;; __p = __p->_M_next())
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ++__result;
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else if (__result)
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // All equivalent values are next to each other, if we
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // found a non-equivalent value after an equivalent one it
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // means that we won't find any new equivalent value.
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k)
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<iterator, iterator>
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 36


1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), iterator(__p1));
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k) const
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<const_iterator, const_iterator>
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(const_iterator(__p), const_iterator(__p1));
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Find the node whose key compares equal to k in the bucket bkt.
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Return nullptr if no node is found.
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_find_before_node(size_type __bkt, const key_type& __k,
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			__hash_code __code) const
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_p = _M_buckets[__bkt];
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (__node_type* __p = static_cast<__node_type*>(__prev_p->_M_nxt);;
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return __prev_p;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 37


1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev_p = __p;
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return nullptr;
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_bucket_begin(size_type __bkt, __node_type* __node)
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_buckets[__bkt])
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is not empty, we just need to insert the new node
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // after the bucket before begin.
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // The bucket is empty, the new node is inserted at the
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // beginning of the singly-linked list and the bucket will
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // contain _M_before_begin pointer.
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_before_begin._M_nxt;
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__node->_M_next())] = __node;
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_remove_bucket_begin(size_type __bkt, __node_type* __next,
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   size_type __next_bkt)
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__next || __next_bkt != __bkt)
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is now empty
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // First update next bucket if any
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next)
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = _M_buckets[__bkt];
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Second update before begin node if necessary
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 38


1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (&_M_before_begin == _M_buckets[__bkt])
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __next;
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = nullptr;
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_get_previous_node(size_type __bkt, __node_base* __n)
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_buckets[__bkt];
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__prev_n->_M_nxt != __n)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n = __prev_n->_M_nxt;
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __prev_n;
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(true_type, _Args&&... __args)
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get access to the hash code
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __p = _M_find_node(__bkt, __k, __code))
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), false);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Insert the node
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos = _M_insert_unique_node(__k, __bkt, __code, __node._M_node);
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(const_iterator __hint, false_type, _Args&&... __args)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 39


1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get its hash code.
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_unique_node(const key_type& __k, size_type __bkt,
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  __hash_code __code, __node_type* __node,
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  size_type __n_elt)
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash(__do_rehash.second, __saved_state);
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Always insert at the beginning of the bucket.
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(__bkt, __node);
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_multi_node(__node_type* __hint, const key_type& __k,
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			 __hash_code __code, __node_type* __node)
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 40


1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count, 1);
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__do_rehash.second, __saved_state);
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __bkt = _M_bucket_index(__k, __code);
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before an equivalent one or use hint if it exists and
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if it is equivalent.
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= __builtin_expect(__hint != nullptr, false)
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  && this->_M_equals(__k, __code, __hint)
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ? __hint
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    : _M_find_before_node(__bkt, __k, __code);
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev)
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Insert after the node before the equivalent one.
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = __prev->_M_nxt;
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev->_M_nxt = __node;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__builtin_expect(__prev == __hint, false))
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // hint might be the last bucket node, in this case we need to
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // update next bucket.
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node->_M_nxt
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		&& !this->_M_equals(__k, __code, __node->_M_next()))
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __next_bkt = _M_bucket_index(__node->_M_next());
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (__next_bkt != __bkt)
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__next_bkt] = __node;
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// The inserted node has no equivalent in the hashtable. We must
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// insert the new node at the beginning of the bucket to preserve
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// equivalent elements' relative positions.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert_bucket_begin(__bkt, __node);
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v if no element with its key is already present.
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(_Arg&& __v, const _NodeGenerator& __node_gen, true_type,
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __n_elt)
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__v);
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 41


1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __node = _M_find_node(__bkt, __k, __code))
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_unique_node(__k, __bkt, __code, __node._M_node, __n_elt);
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v unconditionally.
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(const_iterator __hint, _Arg&& __v,
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		const _NodeGenerator& __node_gen, false_type)
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First compute the hash code so that we don't do anything if it
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// throws.
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(this->_M_extract()(__v));
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Second allocate new node so that we don't rehash if it throws.
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __it)
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __it._M_cur;
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for previous node to unlink it from the erased one, this
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // is why we need buckets to contain the before begin to make
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // this search fast.
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return _M_erase(__bkt, __prev_n, __n);
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 42


1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n)
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n->_M_next(),
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n->_M_nxt)
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  size_type __next_bkt = _M_bucket_index(__n->_M_next());
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next_bkt != __bkt)
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = __prev_n;
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n->_M_nxt;
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator __result(__n->_M_next());
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_node(__n);
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       --_M_element_count;
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(true_type, const key_type& __k)
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We found a matching node, erase it.
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(__bkt, __prev_n, __n);
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return 1;
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 43


1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(false_type, const key_type& __k)
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // 526. Is it undefined if a function in the standard changes
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in parameters?
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We use one loop to find all matching nodes and another to deallocate
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // them so that the key stays valid during the first loop. It might be
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // invalidated indirectly when destroying nodes.
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n_last = __n;
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_last_bkt = __bkt;
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last = __n_last->_M_next();
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__n_last)
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last_bkt = _M_bucket_index(__n_last);
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deallocate nodes.
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __result = 0;
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p = __n->_M_next();
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->_M_deallocate_node(__n);
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n = __p;
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  ++__result;
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  --_M_element_count;
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n != __n_last);
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n_last, __n_last_bkt);
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n_last && __n_last_bkt != __bkt)
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_last_bkt] = __prev_n;
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n_last;
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 44


1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __first, const_iterator __last)
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __first._M_cur;
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __last_n = __last._M_cur;
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n == __last_n)
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return iterator(__n);
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool __is_bucket_begin = __n == _M_bucket_begin(__bkt);
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_bkt = __bkt;
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;;)
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  do
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __node_type* __tmp = __n;
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n = __n->_M_next();
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_node(__tmp);
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      --_M_element_count;
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (!__n)
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		break;
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n_bkt = _M_bucket_index(__n);
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__n != __last_n && __n_bkt == __bkt);
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__is_bucket_begin)
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_remove_bucket_begin(__bkt, __n, __n_bkt);
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__n == __last_n)
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __is_bucket_begin = true;
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = __n_bkt;
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_bkt] = __prev_n;
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n;
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__n);
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 237              		.loc 3 2026 5 view .LVU55
 238              	.LBB3082:
 239              	.LBB3036:
 240              	.LBI3034:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 241              		.loc 3 420 7 view .LVU56
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 242              		.loc 3 420 7 is_stmt 0 view .LVU57
 243              	.LBE3036:
 244              	.LBB3037:
 245              	.LBI3037:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 45


 246              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hashtable_p
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Internal policy header for unordered_set and unordered_map -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** /** @file bits/hashtable_policy.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  Do not attempt to use it directly.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  @headername{unordered_map,unordered_set}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #ifndef _HASHTABLE_POLICY_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #define _HASHTABLE_POLICY_H 1
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <tuple>		// for std::tuple, std::forward_as_tuple
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <limits>		// for std::numeric_limits
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <bits/stl_algobase.h>	// for std::min, std::is_permutation.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     class _Hashtable;
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace __detail
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @defgroup hashtable-detail Base and Implementation Classes
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @ingroup unordered_associative_containers
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @{
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 46


  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_base;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Helper function: return distance(first, last) for forward
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // iterators, or 0/1 for input iterators.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::input_iterator_tag)
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __first != __last ? 1 : 0; }
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return std::distance(__first, __last); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last)
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::__iterator_category(__first)); }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Identity
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp&&
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::forward<_Tp>(__x); }
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Select1st
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> decltype(std::get<0>(std::forward<_Tp>(__x)))
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::get<0>(std::forward<_Tp>(__x)); }
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor recycling a pool of nodes and using allocation once the pool is
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // empty.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _ReuseOrAllocNode
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<__node_alloc_type>;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits =
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(__node_type* __nodes, __hashtable_alloc& __h)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 47


 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(const _ReuseOrAllocNode&) = delete;
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_ReuseOrAllocNode()
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_h._M_deallocate_nodes(_M_nodes); }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (_M_nodes)
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_type* __node = _M_nodes;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_nodes = _M_nodes->_M_next();
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_alloc_traits::destroy(__a, __node->_M_valptr());
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __try
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __node_alloc_traits::construct(__a, __node->_M_valptr(),
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 std::forward<_Arg>(__arg));
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __catch(...)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  _M_h._M_deallocate_node_ptr(__node);
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __throw_exception_again;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      return __node;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_h._M_allocate_node(std::forward<_Arg>(__arg));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mutable __node_type* _M_nodes;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor similar to the previous one but without any pool of nodes to
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // recycle.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _AllocNode
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<_NodeAlloc>;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _AllocNode(__hashtable_alloc& __h)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 48


 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Auxiliary types used for all instantiations of _Hashtable nodes
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // and iterators.
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hashtable_traits
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Important traits for hash tables.
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Cache_hash_code  Boolean value. True if the value of
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  the hash function is stored along with the value. This is a
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  time-space tradeoff.  Storing it may improve lookup speed by
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  reducing the number of times we need to call the _Hash or _Equal
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  functors.
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Constant_iterators  Boolean value. True if iterator and
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  const_iterator are both constant iterator types. This is true
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  for unordered_set and unordered_multiset, false for
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map and unordered_multimap.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Unique_keys  Boolean value. True if the return value
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of _Hashtable::count(k) is always at most one, false if it may
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  be an arbitrary number. This is true for unordered_set and
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map, false for unordered_multiset and
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_multimap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_traits
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_cached = __bool_constant<_Cache_hash_code>;
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __constant_iterators = __bool_constant<_Constant_iterators>;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = __bool_constant<_Unique_keys>;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_base
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Nodes, used to wrap elements stored in the hash table.  A policy
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  template parameter of class template _Hashtable controls whether
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  nodes also store a hash code. In some cases (e.g. strings) this
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  may be a performance win.
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hash_node_base
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base* _M_nxt;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base() noexcept : _M_nxt() { }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base(_Hash_node_base* __next) noexcept : _M_nxt(__next) { }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_value_base
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Node type with the value to store.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 49


 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node_value_base : _Hash_node_base
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value value_type;
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Value> _M_storage;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value*
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() noexcept
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value*
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() const noexcept
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value&
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() noexcept
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value&
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() const noexcept
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template struct _Hash_node.
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes with caches, struct _Hash_node.
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, true> : _Hash_node_value_base<_Value>
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t  _M_hash_code;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes without caches, struct _Hash_node.
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, false> : _Hash_node_value_base<_Value>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 50


 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Base class for node iterators.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator_base
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Cache_hash_code>;
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type*  _M_cur;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator_base(__node_type* __p) noexcept
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr() noexcept
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_cur = _M_cur->_M_next(); }
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code >& __y)
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur == __y._M_cur; }
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code>& __y)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur != __y._M_cur; }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node iterators, used to iterate through all the hashtable.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using pointer = typename std::conditional<__constant_iterators,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						const _Value*, _Value*>::type;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using reference = typename std::conditional<__constant_iterators,
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  const _Value&, _Value&>::type;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator() noexcept
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator(__node_type* __p) noexcept
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 51


 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator&
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_iterator __tmp(*this);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node const_iterators, used to iterate through all the hashtable.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_const_iterator
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator() noexcept
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(__node_type* __p) noexcept
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(const _Node_iterator<_Value, __constant_iterators,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   __cache>& __x) noexcept
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x._M_cur) { }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 52


 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator&
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_const_iterator __tmp(*this);
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Many of class template _Hashtable's template parameters are policy
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // classes.  These are defaults for the policies.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default range hashing function: use division to fold a large number
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// into the range [0, N).
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mod_range_hashing
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num % __den; }
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default ranged hash function H.  In principle it should be a
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// function object composed from objects of type H1 and H2 such that
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h(k, N) = h2(h1(k), N), but that would mean making extra copies of
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h1 and h2.  So instead we'll just use a tag to tell class template
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// hashtable to do that composition.
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Default_ranged_hash { };
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default value for rehash policy.  Bucket size is (usually) the
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// smallest prime that keeps the load factor small enough.
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Prime_rehash_policy
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Prime_rehash_policy(float __z = 1.0) noexcept
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 53


 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) const;
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) const;
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state)
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float		_M_max_load_factor;
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     mutable std::size_t	_M_next_resize;
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Range hashing function assuming that second arg is a power of 2.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mask_range_hashing
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num & (__den - 1); }
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Compute closest power of 2 not less than __n
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   inline std::size_t
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   __clp2(std::size_t __n) noexcept
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Equivalent to return __n ? std::bit_ceil(__n) : 0;
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     if (__n < 2)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __n;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 54


 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const unsigned __lz = sizeof(size_t) > sizeof(long)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ? __builtin_clzll(__n - 1ull)
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __builtin_clzl(__n - 1ul);
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Doing two shifts avoids undefined behaviour when __lz == 0.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     return (size_t(1) << (numeric_limits<size_t>::digits - __lz - 1)) << 1;
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Rehash policy providing power of 2 bucket numbers. Avoids modulo
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// operations.
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Power2_rehash_policy
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Power2_rehash_policy(float __z = 1.0) noexcept
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n (as long as n is not above the
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // highest power of 2).
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) noexcept
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n == 0)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Special case on container 1st initialization with 0 bucket count
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// hint. We keep _M_next_resize to 0 to make sure that next time we
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// want to add an element allocation will take place.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return 1;
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_width = std::min<size_t>(sizeof(size_t), 8);
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_bkt = size_t(1) << (__max_width * __CHAR_BIT__ - 1);
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __res = __clp2(__n);
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == 0)
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = __max_bkt;
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else if (__res == 1)
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// If __res is 1 we force it to 2 to make sure there will be an
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// allocation so that nothing need to be stored in the initial
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// single bucket
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = 2;
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == __max_bkt)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Set next resize to the max value so that we never try to rehash again
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// as we already reach the biggest possible bucket number.
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Note that it might result in max_load_factor not being respected.
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize = numeric_limits<size_t>::max();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  = __builtin_floorl(__res * (long double)_M_max_load_factor);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __res;
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 55


 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const noexcept
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) noexcept
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n_elt + __n_ins > _M_next_resize)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // If _M_next_resize is 0 it means that we have nothing allocated so
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // far and that we start inserting elements. In this case we start
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // with an initial bucket size of 11.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  long double __min_bkts
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = std::max<std::size_t>(__n_elt + __n_ins, _M_next_resize ? 0 : 11)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      / (long double)_M_max_load_factor;
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__min_bkts >= __n_bkt)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return { true,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_next_bkt(std::max<std::size_t>(__builtin_floorl(__min_bkts) + 1,
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						__n_bkt * _S_growth_factor)) };
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_next_resize
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = __builtin_floorl(__n_bkt * (long double)_M_max_load_factor);
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return { false, 0 };
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return { false, 0 };
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const noexcept
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state) noexcept
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float	_M_max_load_factor;
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t	_M_next_resize;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Base classes for std::_Hashtable.  We define these base classes
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // because in some cases we want to do different things depending on
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the value of a policy class.  In some cases the policy class
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // affects which member functions and nested typedefs are defined;
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // we handle that by specializing base class templates.  Several of
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 56


 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the base class templates need to access other members of class
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // template _Hashtable, so we use a variant of the "Curiously
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Recurring Template Pattern" (CRTP) technique.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Map_base.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  If the hashtable has a value type of the form pair<T1, T2> and a
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  key extraction policy (_ExtractKey) that returns the first part
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of the pair, the hashtable gets a mapped_type typedef.  If it
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  satisfies those criteria and also has unique keys, then it also
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  gets an operator[].
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base { };
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to false.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to true.
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = __detail::_Hashtable_base<_Key, _Pair,
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							 _Select1st,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							_Equal, _H1, _H2, _Hash,
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							  _Traits>;
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Pair, _Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Select1st, _Equal,
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code = typename __hashtable_base::__hash_code;
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_base::__node_type;
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using key_type = typename __hashtable_base::key_type;
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](const key_type& __k);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 57


 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](key_type&& __k);
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // DR 761. unordered_map needs an at() member function.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const mapped_type&
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k) const;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](const key_type& __k)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<const key_type&>(__k),
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](key_type&& __k)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 58


 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::forward_as_tuple(std::move(__k)),
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k) const
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> const mapped_type&
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __h = static_cast<const __hashtable*>(this);
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert_base.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions appropriate to all _Hashtables.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 59


 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert_base
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __hashtable_base::value_type;
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __hashtable_base::const_iterator;
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using size_type = typename __hashtable_base::size_type;
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __hashtable_base::__unique_keys;
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Traits::__hash_cached::value>;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = _AllocNode<__node_alloc_type>;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable&
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_conjure_hashtable()
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *(static_cast<__hashtable*>(this)); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, true_type);
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, false_type);
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const value_type& __v)
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__v, __node_gen, __unique_keys());
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, const value_type& __v)
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);	
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, __v, __node_gen, __unique_keys());
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(initializer_list<value_type> __l)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { this->insert(__l.begin(), __l.end()); }
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 60


 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator>
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_InputIterator __first, _InputIterator __last)
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = _M_conjure_hashtable();
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_gen_type __node_gen(__h);
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_insert_range(__first, __last, __node_gen, __unique_keys());
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, true_type)
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__h._M_insert(*__first, __node_gen, __unique_keys(),
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			      __n_elt).second)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __n_elt = 1;
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    else if (__n_elt != 1)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      --__n_elt;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, false_type)
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_type = typename __hashtable::__rehash_type;
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_state = typename __hashtable::__rehash_state;
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using pair_type = std::pair<bool, std::size_t>;
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__rehash_type& __rehash = __h._M_rehash_policy;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 61


 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __rehash_state& __saved_state = __rehash._M_state();
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__h._M_element_count,
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__n_elt);
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__do_rehash.first)
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_rehash(__do_rehash.second, __saved_state);
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_insert(*__first, __node_gen, __unique_keys());
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert.
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions that depend on _Hashtable policies,
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  via partial specializations.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Constant_iterators = _Traits::__constant_iterators::value>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert;
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, true>
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_Equal, _H1, _H2, _Hash,
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_RehashPolicy, _Traits>;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = typename __base_type::__node_gen_type;
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(value_type&& __v)
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 62


 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(std::move(__v), __node_gen, __unique_keys());
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, value_type&& __v)
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, std::move(__v), __node_gen,
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			     __unique_keys());
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, false>
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _Equal, _H1, _H2, _Hash,
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _RehashPolicy, _Traits>;
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __base_type::__ireturn_type;
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __is_cons = std::is_constructible<value_type, _Pair&&>;
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFcons = std::enable_if<__is_cons<_Pair>::value>;
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFconsp = typename _IFcons<_Pair>::type;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__ireturn_type
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_Pair&& __v)
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__unique_keys(), std::forward<_Pair>(__v));
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 63


1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(const_iterator __hint, _Pair&& __v)
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__hint, __unique_keys(),
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				std::forward<_Pair>(__v));
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    };
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Policy>
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = typename _Policy::__has_load_factor;
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Rehash_base.
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Give hashtable the max_load_factor functions and reserve iff the
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  rehash policy supports it.
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   */
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename =
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	     __detected_or_t<false_type, __has_load_factor, _RehashPolicy>>
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base;
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy doesn't provide load factor management.
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _H1, _H2, _Hash, _RehashPolicy, _Traits,
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      false_type>
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy provide load factor management.
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			_H1, _H2, _Hash, _RehashPolicy, _Traits,
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			true_type>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       float
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor() const noexcept
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __hashtable* __this = static_cast<const __hashtable*>(this);
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __this->__rehash_policy().max_load_factor();
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 64


1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor(float __z)
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->__rehash_policy(_RehashPolicy(__z));
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reserve(std::size_t __n)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->rehash(__this->__rehash_policy()._M_bkt_for_elements(__n));
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_ebo_helper.
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class using EBO when it is not forbidden (the type is not
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  final) and when it is worth it (the type is empty.)
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp,
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __use_ebo = !__is_final(_Tp) && __is_empty(_Tp)>
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization using EBO.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, true>
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return static_cast<_Tp&>(*this); }
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization not using EBO.
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, false>
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _M_tp(std::forward<_OtherTp>(__tp))
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return _M_tp; }
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return _M_tp; }
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp _M_tp;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 65


1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Local_iterator_base.
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class for local iterators, used to iterate within a bucket
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  but not between buckets.
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base;
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hash_code_base.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Encapsulates two policy issues that aren't quite orthogonal.
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (1) the difference between using a ranged hash function and using
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       the combination of a hash function and a range-hashing function.
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       In the former case we don't have such things as hash codes, so
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       we have a dummy type as placeholder.
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (2) Whether or not we cache hash codes.  Caching hash codes is
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       meaningless if we have a ranged hash function.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  We also put the key extraction objects here, for convenience.
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Each specialization derives from one or more of the template
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  parameters to benefit from Ebo. This is important as this type
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  is inherited in some cases by the _Local_iterator_base type used
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  to implement local_iterator and const_local_iterator. As with
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  any iterator type we prefer to make it as small as possible.
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template is unused except as a hook for specializations.
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, no caching hash codes.  H1
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and H2 are provided but ignored.  We define a dummy hash code type.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _Hash>
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef void* 					__hash_code;
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 66


1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex, const _H1&, const _H2&,
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Hash& __h)
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_hash(__h) { }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __key) const
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return 0; }
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key& __k, __hash_code,
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(__k, __bkt_count); }
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _Hash&>()(declval<const _Key&>(),
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   (std::size_t)0)) )
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(_M_extract()(__p->_M_v()), __bkt_count); }
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_hash::_M_get(), __x.__ebo_hash::_M_get());
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Hash&
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_ranged_hash() const { return __ebo_hash::_M_cget(); }
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // No specialization for ranged hash function while caching hash codes.
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // That combination is meaningless, and trying to do it is an error.
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, cache hash codes.  This
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// combination is meaningless, so we provide only a declaration
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and no definition.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>;
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function, no
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching of hash codes.
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Provides typedef and accessor required by C++ 11.
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 67


1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, false>
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_bucket_index().
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, false>;
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  && noexcept(declval<const _H2&>()((__hash_code)0,
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						    (std::size_t)0)) )
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(_M_h1()(_M_extract()(__p->_M_v())), __bkt_count); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 68


1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function,
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching hash codes.  H is provided but ignored.  Provides
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// typedef and accessor required by C++ 11.
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, true>
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_h2().
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, true>;
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, true>			__node_type;
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for _Hashtable default constructor.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 69


1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 (std::size_t)0)) )
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__p->_M_hash_code, __bkt_count); }
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type* __n, __hash_code __c) const
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type* __to, const __node_type* __from) const
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __to->_M_hash_code = __from->_M_hash_code; }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization used when nodes contain a cached hash code.
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, true>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 70


1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _H2>
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Hashtable_ebo_helper<0, _H2>;
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, true>;
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() = default;
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, true>* __p,
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base._M_h2()),
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      = __base_type::_M_get()(_M_cur->_M_hash_code,
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _M_bucket_count);
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, true>*  _M_cur;
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Uninitialized storage for a _Hash_code_base.
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // This type is DefaultConstructible and Assignable even if the
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // _Hash_code_base type isn't, so that _Local_iterator_base<..., false>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // can be DefaultConstructible and Assignable.
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp, bool _IsEmpty = std::is_empty<_Tp>::value>
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Tp> _M_storage;
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return _M_storage._M_ptr(); }
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return _M_storage._M_ptr(); }
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Empty partial specialization for empty _Hash_code_base types.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 71


1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp>
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage<_Tp, true>
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert( std::is_empty<_Tp>::value, "Type must be empty" );
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // As _Tp is an empty type there will be no bytes written/read through
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // the cast pointer, so no strict-aliasing violation.
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return reinterpret_cast<_Tp*>(this); }
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return reinterpret_cast<const _Tp*>(this); }
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_for_local_iter
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       = _Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey,
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _H1, _H2, _Hash, false>>;
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Partial specialization used when hash codes are not cached
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, false>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_for_local_iter<_Key, _Value, _ExtractKey, _H1, _H2, _Hash>
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, false>;
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() : _M_bucket_count(-1) { }
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, false>* __p,
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_init(__base); }
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_Local_iterator_base()
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const _Local_iterator_base& __iter)
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__iter._M_cur), _M_bucket(__iter._M_bucket),
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****         _M_bucket_count(__iter._M_bucket_count)
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base&
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator=(const _Local_iterator_base& __iter)
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 72


1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = __iter._M_cur;
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket = __iter._M_bucket;
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket_count = __iter._M_bucket_count;
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt = this->_M_h()->_M_bucket_index(_M_cur,
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							      _M_bucket_count);
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, false>*  _M_cur;
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_init(const __hash_code_base& __base)
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { ::new(this->_M_h()) __hash_code_base(__base); }
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_destroy() { this->_M_h()->~__hash_code_base(); }
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops and debug mode
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() == __y._M_curr(); }
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 73


1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() != __y._M_curr(); }
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local iterators
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value*, _Value*>::type
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       pointer;
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value&, _Value&>::type
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       reference;
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator() = default;
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator(const __hash_code_base& __base,
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _Hash_node<_Value, __cache>* __n,
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt, std::size_t __bkt_count)
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator&
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_iterator __tmp(*this);
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 74


1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local const_iterators
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_const_iterator
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator() = default;
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const __hash_code_base& __base,
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    _Hash_node<_Value, __cache>* __n,
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    std::size_t __bkt, std::size_t __bkt_count)
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const _Local_iterator<_Key, _Value, _ExtractKey,
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _H1, _H2, _Hash,
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators,
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __cache>& __x)
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x)
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator&
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_const_iterator __tmp(*this);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 75


1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_base.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class adding management of _Equal functor to
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  _Hash_code_base type.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class templates are:
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hash_code_base
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hashtable_ebo_helper
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hashtable_base
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   : public _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash,
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Traits::__hash_cached::value>,
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private _Hashtable_ebo_helper<0, _Equal>
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   public:
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Key					key_type;
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Value					value_type;
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Equal					key_equal;
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t					size_type;
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::ptrdiff_t				difference_type;
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __traits_type = _Traits;
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_cached = typename __traits_type::__hash_cached;
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __constant_iterators = typename __traits_type::__constant_iterators;
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __unique_keys = typename __traits_type::__unique_keys;
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     _H1, _H2, _Hash,
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     __hash_cached::value>;
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code = typename __hash_code_base::__hash_code;
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __node_type = typename __hash_code_base::__node_type;
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using iterator = __detail::_Node_iterator<value_type,
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __constant_iterators::value,
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __hash_cached::value>;
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_iterator = __detail::_Node_const_iterator<value_type,
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __constant_iterators::value,
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __hash_cached::value>;
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using local_iterator = __detail::_Local_iterator<key_type, value_type,
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _ExtractKey, _H1, _H2, _Hash,
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators::value,
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     __hash_cached::value>;
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_local_iterator = __detail::_Local_const_iterator<key_type,
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 								 value_type,
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_ExtractKey, _H1, _H2, _Hash,
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__constant_iterators::value,
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__hash_cached::value>;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 76


1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __ireturn_type = typename std::conditional<__unique_keys::value,
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     std::pair<iterator, bool>,
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     iterator>::type;
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   private:
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using _EqualEBO = _Hashtable_ebo_helper<0, _Equal>;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _NodeT>
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code, const _NodeT&)
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return true; }
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Ptr2>
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code<_Hash_node<_Ptr2, true>>
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code __c, const _Hash_node<_Ptr2, true>& __n)
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   protected:
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base() = default;
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base(const _ExtractKey& __ex, const _H1& __h1, const _H2& __h2,
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_base(__ex, __h1, __h2, __hash), _EqualEBO(__eq)
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { }
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equals(const _Key& __k, __hash_code __c, __node_type* __n) const
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert(__is_invocable<const _Equal&, const _Key&, const _Key&>{},
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key equality predicate must be invocable with two arguments of "
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key type");
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return _Equal_hash_code<__node_type>::_S_equals(__c, *__n)
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	&& _M_eq()(__k, this->_M_extract()(__n->_M_v()));
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_swap(_Hashtable_base& __x)
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code_base::_M_swap(__x);
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::swap(_EqualEBO::_M_get(), __x._EqualEBO::_M_get());
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const _Equal&
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_eq() const { return _EqualEBO::_M_cget(); }
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Equality.
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  This is for implementing equality comparison for unordered
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  containers, per N3068, by John Lakos and Pablo Halpern.
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Algorithmically, we follow closely the reference implementations
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 77


1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  therein.
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality;
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_map and unordered_set specializations.
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end(); ++__itx)
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __prev_n = __other._M_buckets[__ybkt];
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__prev_n)
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);;
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       __n = __n->_M_next())
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__n->_M_v() == *__itx)
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__n->_M_nxt
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__n->_M_next()) != __ybkt)
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 78


1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_multiset and unordered_multimap specializations.
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, false>::
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end();)
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __x_count = 1;
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  auto __itx_end = __itx;
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (++__itx_end; __itx_end != __this->end()
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		 && __this->key_eq()(_ExtractKey()(*__itx),
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _ExtractKey()(*__itx_end));
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       ++__itx_end)
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ++__x_count;
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __y_prev_n = __other._M_buckets[__ybkt];
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__y_prev_n)
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __y_n = static_cast<__node_type*>(__y_prev_n->_M_nxt);
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (;; __y_n = __y_n->_M_next())
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__this->key_eq()(_ExtractKey()(__y_n->_M_v()),
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				   _ExtractKey()(*__itx)))
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__y_n->_M_nxt
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 79


1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__y_n->_M_next()) != __ybkt)
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  typename __hashtable::const_iterator __ity(__y_n);
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (auto __ity_end = __ity; __ity_end != __other.end(); ++__ity_end)
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (--__x_count == 0)
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      break;
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__x_count != 0)
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!std::is_permutation(__itx, __itx_end, __ity))
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __itx = __itx_end;
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * This type deals with all allocation and keeps an allocator instance
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * through inheritance to benefit from EBO when possible.
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_node_alloc = _Hashtable_ebo_helper<0, _NodeAlloc>;
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename _NodeAlloc::value_type;
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Use __gnu_cxx to benefit from _S_always_equal and al.
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits = __gnu_cxx::__alloc_traits<__node_alloc_type>;
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __value_alloc_traits = typename __node_alloc_traits::template
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	rebind_traits<typename __node_type::value_type>;
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = __detail::_Hash_node_base;
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_type = __node_base*;      
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_type =
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__alloc_rebind<__node_alloc_type, __bucket_type>;
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_traits = std::allocator_traits<__bucket_alloc_type>;
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc() = default;
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(_Hashtable_alloc&&) = default;
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Alloc>
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_alloc(_Alloc&& __a)
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_type&
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator()
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_get(); }
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 80


1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __node_alloc_type&
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator() const
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Allocate a node and construct an element within it.
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename... _Args>
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_allocate_node(_Args&&... __args);
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Destroy the element within a node and deallocate the node.
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node(__node_type* __n);
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate a node.
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__node_type* __n);
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate the linked list of nodes pointed to by __n.
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // The elements within the nodes are destroyed.
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_nodes(__node_type* __n);
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type*
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_allocate_buckets(std::size_t __bkt_count);
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_buckets(__bucket_type*, std::size_t __bkt_count);
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Definitions of class template _Hashtable_alloc's out-of-line member
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // functions.
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename... _Args>
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&&... __args)
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	auto __nptr = __node_alloc_traits::allocate(_M_node_allocator(), 1);
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type* __n = std::__to_address(__nptr);
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__try
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ::new ((void*)__n) __node_type;
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::construct(_M_node_allocator(),
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   __n->_M_valptr(),
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   std::forward<_Args>(__args)...);
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return __n;
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__catch(...)
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::deallocate(_M_node_allocator(), __nptr, 1);
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __throw_exception_again;
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(__node_type* __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 81


2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__n);
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(__node_type* __n)
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename __node_alloc_traits::pointer _Ptr;
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __n->~__node_type();
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_type* __n)
 247              		.loc 4 2069 5 is_stmt 1 view .LVU58
 248              	.LBB3038:
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       while (__n)
 249              		.loc 4 2071 14 view .LVU59
 250 0006 85B1     		cbz	r5, .L13
 251              	.LVL20:
 252              	.L15:
 253              	.LBB3039:
 254              	.LBB3040:
 255              	.LBI3040:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 256              		.loc 4 269 7 view .LVU60
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 257              		.loc 4 269 7 is_stmt 0 view .LVU61
 258 0008 2C46     		mov	r4, r5
 259              	.LVL21:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 260              		.loc 4 269 7 view .LVU62
 261              	.LBE3040:
 262              	.LBB3042:
 263              	.LBB3043:
 264              	.LBB3044:
 265              	.LBB3045:
 266              	.LBB3046:
 267              	.LBB3047:
 268              	.LBB3048:
 269              	.LBB3049:
 270              	.LBI3049:
 271              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_strin
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 82


  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 83


  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 84


 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 85


 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 272              		.loc 5 236 7 is_stmt 1 view .LVU63
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 86


 273              		.loc 5 236 7 is_stmt 0 view .LVU64
 274              	.LBE3049:
 275              	.LBE3048:
 276              	.LBE3047:
 277              	.LBE3046:
 278              	.LBE3045:
 279              	.LBE3044:
 280              	.LBE3043:
 281              	.LBE3042:
 282              	.LBB3080:
 283              	.LBB3041:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 284              		.loc 4 270 53 view .LVU65
 285 000a 2D68     		ldr	r5, [r5]
 286              	.LVL22:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 287              		.loc 4 270 53 view .LVU66
 288              	.LBE3041:
 289              	.LBE3080:
 290              	.LBB3081:
 291              	.LBI3042:
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 292              		.loc 4 2051 5 is_stmt 1 view .LVU67
 293              	.LBB3074:
 294              	.LBI3043:
 295              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 87


  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 88


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 89


 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 90


 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 91


 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 92


 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 93


 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 94


 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 95


 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 296              		.loc 6 527 2 view .LVU68
 297              	.LBB3073:
 298              	.LBI3044:
 299              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 96


  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 97


  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 98


 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 300              		.loc 7 154 2 view .LVU69
 301              	.LBB3072:
 302              	.LBI3045:
 303              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 99


  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 100


  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 101


 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 102


 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 304              		.loc 8 211 12 view .LVU70
 305              	.LBB3071:
 306              	.LBI3046:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 103


 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 104


 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 105


 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 106


 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 107


 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 108


 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 109


 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 307              		.loc 5 657 7 view .LVU71
 308              	.LBB3067:
 309              	.LBI3047:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 310              		.loc 5 229 7 view .LVU72
 311              	.LBB3066:
 312              	.LBB3057:
 313              	.LBI3057:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 314              		.loc 5 221 7 view .LVU73
 315              	.LBB3058:
 316              	.LBI3058:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 317              		.loc 5 186 7 view .LVU74
 318              	.LBB3059:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319              		.loc 5 187 28 is_stmt 0 view .LVU75
 320 000c 6068     		ldr	r0, [r4, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 110


 321              	.LVL23:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 322              		.loc 5 187 28 view .LVU76
 323              	.LBE3059:
 324              	.LBE3058:
 325              	.LBB3060:
 326              	.LBI3060:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 327              		.loc 5 200 7 is_stmt 1 view .LVU77
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 328              		.loc 5 200 7 is_stmt 0 view .LVU78
 329              	.LBE3060:
 330              	.LBE3057:
 331              	.LBB3063:
 332              	.LBB3050:
 333              	.LBB3051:
 334              	.LBI3051:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 335              		.loc 6 491 7 is_stmt 1 view .LVU79
 336              	.LBB3052:
 337              	.LBI3052:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 338              		.loc 7 120 7 view .LVU80
 339              	.LBE3052:
 340              	.LBE3051:
 341              	.LBE3050:
 342              	.LBE3063:
 343              	.LBB3064:
 344              	.LBB3062:
 345              	.LBB3061:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 346              		.loc 5 203 57 is_stmt 0 view .LVU81
 347 000e 04F10C03 		add	r3, r4, #12
 348              	.LVL24:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 349              		.loc 5 203 57 view .LVU82
 350              	.LBE3061:
 351              	.LBE3062:
 352              	.LBE3064:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 353              		.loc 5 231 2 view .LVU83
 354 0012 9842     		cmp	r0, r3
 355 0014 03D0     		beq	.L14
 356              	.LBB3065:
 357              	.LBB3056:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 358              		.loc 5 237 34 view .LVU84
 359 0016 E168     		ldr	r1, [r4, #12]
 360              	.LBB3055:
 361              	.LBB3054:
 362              	.LBB3053:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 363              		.loc 7 133 19 view .LVU85
 364 0018 0131     		adds	r1, r1, #1
 365              	.LVL25:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 366              		.loc 7 133 19 view .LVU86
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 111


 367 001a FFF7FEFF 		bl	_ZdlPvj
 368              	.LVL26:
 369              	.L14:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 370              		.loc 7 133 19 view .LVU87
 371              	.LBE3053:
 372              	.LBE3054:
 373              	.LBE3055:
 374              	.LBE3056:
 375              	.LBE3065:
 376              	.LBE3066:
 377              	.LBE3067:
 378              	.LBB3068:
 379              	.LBI3068:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 380              		.loc 5 150 14 is_stmt 1 view .LVU88
 381              	.LBB3069:
 382              	.LBI3069:
 383              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.h
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 112


  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 113


  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 114


 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 384              		.loc 9 162 7 view .LVU89
 385              	.LBB3070:
 386              	.LBI3070:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 387              		.loc 7 89 7 view .LVU90
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 388              		.loc 7 89 7 is_stmt 0 view .LVU91
 389              	.LBE3070:
 390              	.LBE3069:
 391              	.LBE3068:
 392              	.LBE3071:
 393              	.LBE3072:
 394              	.LBE3073:
 395              	.LBE3074:
 396              	.LBB3075:
 397              	.LBI3075:
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 398              		.loc 4 2059 5 is_stmt 1 view .LVU92
 399              	.LBB3076:
 400              	.LBB3077:
 401              	.LBI3077:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 402              		.loc 6 491 7 view .LVU93
 403              	.LBB3078:
 404              	.LBI3078:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 405              		.loc 7 120 7 view .LVU94
 406              	.LBB3079:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 407              		.loc 7 133 19 is_stmt 0 view .LVU95
 408 001e 2421     		movs	r1, #36
 409 0020 2046     		mov	r0, r4
 410 0022 FFF7FEFF 		bl	_ZdlPvj
 411              	.LVL27:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 412              		.loc 7 133 19 view .LVU96
 413              	.LBE3079:
 414              	.LBE3078:
 415              	.LBE3077:
 416              	.LBE3076:
 417              	.LBE3075:
 418              	.LBE3081:
 419              	.LBE3039:
 420              		.loc 4 2071 14 is_stmt 1 view .LVU97
 421 0026 002D     		cmp	r5, #0
 422 0028 EED1     		bne	.L15
 423              	.LVL28:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 115


 424              	.L13:
 425              		.loc 4 2071 14 is_stmt 0 view .LVU98
 426              	.LBE3038:
 427              	.LBE3037:
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     clear() noexcept
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __builtin_memset(_M_buckets, 0, _M_bucket_count * sizeof(__bucket_type));
 428              		.loc 3 2031 23 view .LVU99
 429 002a 7268     		ldr	r2, [r6, #4]
 430 002c 0021     		movs	r1, #0
 431 002e 3068     		ldr	r0, [r6]
 432 0030 9200     		lsls	r2, r2, #2
 433 0032 FFF7FEFF 		bl	memset
 434              	.LVL29:
 435              	.LBE3082:
 436              	.LBE3085:
 437              	.LBB3086:
 438              	.LBB3087:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 439              		.loc 3 412 30 view .LVU100
 440 0036 3068     		ldr	r0, [r6]
 441              	.LBB3088:
 442              	.LBB3089:
 443              	.LBB3090:
 444              	.LBB3091:
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 445              		.loc 3 380 44 view .LVU101
 446 0038 06F11803 		add	r3, r6, #24
 447              	.LBE3091:
 448              	.LBE3090:
 449              	.LBE3089:
 450              	.LBE3088:
 451              	.LBE3087:
 452              	.LBE3086:
 453              	.LBB3108:
 454              	.LBB3083:
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
 455              		.loc 3 2032 24 view .LVU102
 456 003c 0022     		movs	r2, #0
 457              	.LBE3083:
 458              	.LBE3108:
 459              	.LBB3109:
 460              	.LBB3106:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 461              		.loc 3 412 30 view .LVU103
 462 003e 7168     		ldr	r1, [r6, #4]
 463              	.LBB3104:
 464              	.LBB3102:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 465              		.loc 3 404 2 view .LVU104
 466 0040 9842     		cmp	r0, r3
 467              	.LBE3102:
 468              	.LBE3104:
 469              	.LBE3106:
 470              	.LBE3109:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 116


 471              	.LBB3110:
 472              	.LBB3084:
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 473              		.loc 3 2033 30 view .LVU105
 474 0042 C6E90222 		strd	r2, r2, [r6, #8]
 475              	.LVL30:
 476              		.loc 3 2033 30 view .LVU106
 477              	.LBE3084:
 478              	.LBE3110:
 479              	.LBB3111:
 480              	.LBI3086:
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 481              		.loc 3 411 7 is_stmt 1 view .LVU107
 482              	.LBB3107:
 483              	.LBB3105:
 484              	.LBI3088:
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 485              		.loc 3 402 7 view .LVU108
 486              	.LBB3103:
 487              	.LBB3092:
 488              	.LBI3090:
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 489              		.loc 3 379 7 view .LVU109
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 490              		.loc 3 379 7 is_stmt 0 view .LVU110
 491              	.LBE3092:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 492              		.loc 3 404 2 view .LVU111
 493 0046 02D0     		beq	.L16
 494              	.LVL31:
 495              	.LBB3093:
 496              	.LBI3093:
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __tmp = __n;
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __n = __n->_M_next();
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_deallocate_node(__tmp);
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typename _Hashtable_alloc<_NodeAlloc>::__bucket_type*
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t __bkt_count)
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_alloc_type __alloc(_M_node_allocator());
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = __bucket_alloc_traits::allocate(__alloc, __bkt_count);
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type* __p = std::__to_address(__ptr);
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __builtin_memset(__p, 0, __bkt_count * sizeof(__bucket_type));
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(__bucket_type* __bkts,
 497              		.loc 4 2093 5 is_stmt 1 view .LVU112
 498              	.LBB3094:
 499              	.LBB3095:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 117


 500              	.LBI3095:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 501              		.loc 9 157 2 view .LVU113
 502              	.LBB3096:
 503              	.LBI3096:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 504              		.loc 7 79 7 view .LVU114
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 505              		.loc 7 79 7 is_stmt 0 view .LVU115
 506              	.LBE3096:
 507              	.LBE3095:
 508              	.LBB3097:
 509              	.LBI3097:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 510              		.loc 6 491 7 is_stmt 1 view .LVU116
 511              	.LBB3098:
 512              	.LBI3098:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 513              		.loc 7 120 7 view .LVU117
 514              	.LBB3099:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 515              		.loc 7 133 19 is_stmt 0 view .LVU118
 516 0048 8900     		lsls	r1, r1, #2
 517              	.LVL32:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 518              		.loc 7 133 19 view .LVU119
 519 004a FFF7FEFF 		bl	_ZdlPvj
 520              	.LVL33:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 521              		.loc 7 133 19 view .LVU120
 522              	.LBE3099:
 523              	.LBE3098:
 524              	.LBE3097:
 525              	.LBB3100:
 526              	.LBI3100:
 527              		.loc 9 162 7 is_stmt 1 view .LVU121
 528              	.LBB3101:
 529              	.LBI3101:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 530              		.loc 7 89 7 view .LVU122
 531              	.L16:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 532              		.loc 7 89 7 is_stmt 0 view .LVU123
 533              	.LBE3101:
 534              	.LBE3100:
 535              	.LBE3094:
 536              	.LBE3093:
 537              	.LBE3103:
 538              	.LBE3105:
 539              	.LBE3107:
 540              	.LBE3111:
 541              	.LBB3112:
 542              	.LBI3112:
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 543              		.loc 4 1963 12 is_stmt 1 view .LVU124
 544              	.LBB3113:
 545              	.LBI3113:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 118


1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 546              		.loc 4 1109 12 view .LVU125
 547              	.LBB3114:
 548              	.LBI3114:
 549              		.loc 9 162 7 view .LVU126
 550              	.LBB3115:
 551              	.LBI3115:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 552              		.loc 7 89 7 view .LVU127
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 553              		.loc 7 89 7 is_stmt 0 view .LVU128
 554              	.LBE3115:
 555              	.LBE3114:
 556              	.LBE3113:
 557              	.LBE3112:
 558              	.LBE3116:
 559              		.loc 2 102 11 view .LVU129
 560 004e 3046     		mov	r0, r6
 561 0050 70BD     		pop	{r4, r5, r6, pc}
 562              		.loc 2 102 11 view .LVU130
 563              		.cfi_endproc
 564              	.LFE5445:
 566              		.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
 567              		.thumb_set _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ES
 568 0052 00BF     		.section	.text._ZN9GPIOState4initEv,"axG",%progbits,_ZN9GPIOState4initEv,comdat
 569              		.align	1
 570              		.p2align 2,,3
 571              		.weak	_ZN9GPIOState4initEv
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv5-d16
 577              	_ZN9GPIOState4initEv:
 578              	.LVL34:
 579              	.LFB5520:
 580              		.file 10 "GPIOState.h"
   1:GPIOState.h   **** #include "daisy_seed.h"
   2:GPIOState.h   **** using namespace daisy;
   3:GPIOState.h   **** using namespace daisy::seed;
   4:GPIOState.h   **** 
   5:GPIOState.h   **** struct GPIOState {
   6:GPIOState.h   ****     // Chord extension
   7:GPIOState.h   ****     Switch button_triad;
   8:GPIOState.h   ****     Switch button_6th;
   9:GPIOState.h   ****     Switch button_7th;
  10:GPIOState.h   ****     Switch button_9th;
  11:GPIOState.h   ****     Switch button_11th;
  12:GPIOState.h   **** 
  13:GPIOState.h   ****     // Chord quality
  14:GPIOState.h   ****     Switch button_maj;
  15:GPIOState.h   ****     Switch button_min;
  16:GPIOState.h   ****     Switch button_aug;
  17:GPIOState.h   ****     Switch button_dim;
  18:GPIOState.h   **** 
  19:GPIOState.h   ****     // Chort root
  20:GPIOState.h   ****     Switch button_C;
  21:GPIOState.h   ****     Switch button_Db;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 119


  22:GPIOState.h   ****     Switch button_D;
  23:GPIOState.h   ****     Switch button_Eb;
  24:GPIOState.h   ****     Switch button_E;
  25:GPIOState.h   ****     Switch button_F;
  26:GPIOState.h   ****     Switch button_Gb;
  27:GPIOState.h   ****     Switch button_G;
  28:GPIOState.h   ****     Switch button_Ab;
  29:GPIOState.h   ****     Switch button_A;
  30:GPIOState.h   ****     Switch button_Bb;
  31:GPIOState.h   ****     Switch button_B;
  32:GPIOState.h   **** 
  33:GPIOState.h   ****     // Drum controls
  34:GPIOState.h   ****     Switch groove;
  35:GPIOState.h   ****     Switch drum_left;
  36:GPIOState.h   ****     Switch drum_right;
  37:GPIOState.h   **** 
  38:GPIOState.h   ****     void init() {
 581              		.loc 10 38 10 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
  39:GPIOState.h   ****             button_Db.Init(D0, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 585              		.loc 10 39 13 view .LVU132
  38:GPIOState.h   ****             button_Db.Init(D0, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 586              		.loc 10 38 10 is_stmt 0 view .LVU133
 587 0000 30B5     		push	{r4, r5, lr}
 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592              		.loc 10 39 27 view .LVU134
 593 0002 8649     		ldr	r1, .L24
  38:GPIOState.h   ****             button_Db.Init(D0, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 594              		.loc 10 38 10 view .LVU135
 595 0004 83B0     		sub	sp, sp, #12
 596              		.cfi_def_cfa_offset 24
 597              		.loc 10 39 27 view .LVU136
 598 0006 0124     		movs	r4, #1
  38:GPIOState.h   ****             button_Db.Init(D0, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 599              		.loc 10 38 10 view .LVU137
 600 0008 0546     		mov	r5, r0
 601              		.loc 10 39 27 view .LVU138
 602 000a B7EE000A 		vmov.f32	s0, #1.0e+0
 603 000e 0023     		movs	r3, #0
 604 0010 2246     		mov	r2, r4
 605 0012 0968     		ldr	r1, [r1]
 606 0014 00F5B470 		add	r0, r0, #360
 607              	.LVL35:
 608              		.loc 10 39 27 view .LVU139
 609 0018 0094     		str	r4, [sp]
 610 001a FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 611              	.LVL36:
  40:GPIOState.h   ****             button_Eb.Init(D1, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 612              		.loc 10 40 13 is_stmt 1 view .LVU140
 613              		.loc 10 40 27 is_stmt 0 view .LVU141
 614 001e 8049     		ldr	r1, .L24+4
 615 0020 2246     		mov	r2, r4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 120


 616 0022 05F5D870 		add	r0, r5, #432
 617 0026 B7EE000A 		vmov.f32	s0, #1.0e+0
 618 002a 0023     		movs	r3, #0
 619 002c 0968     		ldr	r1, [r1]
 620 002e 0094     		str	r4, [sp]
 621 0030 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 622              	.LVL37:
  41:GPIOState.h   ****             button_Gb.Init(D2, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 623              		.loc 10 41 13 is_stmt 1 view .LVU142
 624              		.loc 10 41 27 is_stmt 0 view .LVU143
 625 0034 7B49     		ldr	r1, .L24+8
 626 0036 2246     		mov	r2, r4
 627 0038 05F50770 		add	r0, r5, #540
 628 003c B7EE000A 		vmov.f32	s0, #1.0e+0
 629 0040 0023     		movs	r3, #0
 630 0042 0968     		ldr	r1, [r1]
 631 0044 0094     		str	r4, [sp]
 632 0046 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 633              	.LVL38:
  42:GPIOState.h   ****             button_Ab.Init(D3, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 634              		.loc 10 42 13 is_stmt 1 view .LVU144
 635              		.loc 10 42 27 is_stmt 0 view .LVU145
 636 004a 7749     		ldr	r1, .L24+12
 637 004c 2246     		mov	r2, r4
 638 004e 05F51970 		add	r0, r5, #612
 639 0052 B7EE000A 		vmov.f32	s0, #1.0e+0
 640 0056 0023     		movs	r3, #0
 641 0058 0968     		ldr	r1, [r1]
 642 005a 0094     		str	r4, [sp]
 643 005c FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 644              	.LVL39:
  43:GPIOState.h   ****             button_Bb.Init(D4, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 645              		.loc 10 43 13 is_stmt 1 view .LVU146
 646              		.loc 10 43 27 is_stmt 0 view .LVU147
 647 0060 7249     		ldr	r1, .L24+16
 648 0062 2246     		mov	r2, r4
 649 0064 05F52B70 		add	r0, r5, #684
 650 0068 B7EE000A 		vmov.f32	s0, #1.0e+0
 651 006c 0023     		movs	r3, #0
 652 006e 0968     		ldr	r1, [r1]
 653 0070 0094     		str	r4, [sp]
 654 0072 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 655              	.LVL40:
  44:GPIOState.h   ****             
  45:GPIOState.h   ****             button_C.Init(D5, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL,
 656              		.loc 10 45 13 is_stmt 1 view .LVU148
 657              		.loc 10 45 26 is_stmt 0 view .LVU149
 658 0076 6E49     		ldr	r1, .L24+20
 659 0078 2246     		mov	r2, r4
 660 007a 05F5A270 		add	r0, r5, #324
 661 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 662 0082 0023     		movs	r3, #0
 663 0084 0968     		ldr	r1, [r1]
 664 0086 0094     		str	r4, [sp]
 665 0088 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 666              	.LVL41:
  46:GPIOState.h   ****             button_D.Init(D6, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 121


 667              		.loc 10 46 13 is_stmt 1 view .LVU150
 668              		.loc 10 46 26 is_stmt 0 view .LVU151
 669 008c 6949     		ldr	r1, .L24+24
 670 008e 2246     		mov	r2, r4
 671 0090 05F5C670 		add	r0, r5, #396
 672 0094 B7EE000A 		vmov.f32	s0, #1.0e+0
 673 0098 0023     		movs	r3, #0
 674 009a 0968     		ldr	r1, [r1]
 675 009c 0094     		str	r4, [sp]
 676 009e FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 677              	.LVL42:
  47:GPIOState.h   ****             button_E.Init(D7, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL,
 678              		.loc 10 47 13 is_stmt 1 view .LVU152
 679              		.loc 10 47 26 is_stmt 0 view .LVU153
 680 00a2 6549     		ldr	r1, .L24+28
 681 00a4 2246     		mov	r2, r4
 682 00a6 05F5EA70 		add	r0, r5, #468
 683 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 684 00ae 0023     		movs	r3, #0
 685 00b0 0968     		ldr	r1, [r1]
 686 00b2 0094     		str	r4, [sp]
 687 00b4 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 688              	.LVL43:
  48:GPIOState.h   ****             button_F.Init(D8, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL,
 689              		.loc 10 48 13 is_stmt 1 view .LVU154
 690              		.loc 10 48 26 is_stmt 0 view .LVU155
 691 00b8 6049     		ldr	r1, .L24+32
 692 00ba 2246     		mov	r2, r4
 693 00bc 05F5FC70 		add	r0, r5, #504
 694 00c0 B7EE000A 		vmov.f32	s0, #1.0e+0
 695 00c4 0023     		movs	r3, #0
 696 00c6 0968     		ldr	r1, [r1]
 697 00c8 0094     		str	r4, [sp]
 698 00ca FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 699              	.LVL44:
  49:GPIOState.h   ****             button_G.Init(D9, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL,
 700              		.loc 10 49 13 is_stmt 1 view .LVU156
 701              		.loc 10 49 26 is_stmt 0 view .LVU157
 702 00ce 5C49     		ldr	r1, .L24+36
 703 00d0 2246     		mov	r2, r4
 704 00d2 05F51070 		add	r0, r5, #576
 705 00d6 B7EE000A 		vmov.f32	s0, #1.0e+0
 706 00da 0023     		movs	r3, #0
 707 00dc 0968     		ldr	r1, [r1]
 708 00de 0094     		str	r4, [sp]
 709 00e0 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 710              	.LVL45:
  50:GPIOState.h   ****             button_A.Init(D10, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 711              		.loc 10 50 13 is_stmt 1 view .LVU158
 712              		.loc 10 50 26 is_stmt 0 view .LVU159
 713 00e4 5749     		ldr	r1, .L24+40
 714 00e6 2246     		mov	r2, r4
 715 00e8 05F52270 		add	r0, r5, #648
 716 00ec B7EE000A 		vmov.f32	s0, #1.0e+0
 717 00f0 0023     		movs	r3, #0
 718 00f2 0968     		ldr	r1, [r1]
 719 00f4 0094     		str	r4, [sp]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 122


 720 00f6 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 721              	.LVL46:
  51:GPIOState.h   ****             button_B.Init(D13, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORMAL
 722              		.loc 10 51 13 is_stmt 1 view .LVU160
 723              		.loc 10 51 26 is_stmt 0 view .LVU161
 724 00fa 5349     		ldr	r1, .L24+44
 725 00fc 2246     		mov	r2, r4
 726 00fe 05F53470 		add	r0, r5, #720
 727 0102 B7EE000A 		vmov.f32	s0, #1.0e+0
 728 0106 0023     		movs	r3, #0
 729 0108 0968     		ldr	r1, [r1]
 730 010a 0094     		str	r4, [sp]
 731 010c FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 732              	.LVL47:
  52:GPIOState.h   **** 
  53:GPIOState.h   **** 
  54:GPIOState.h   ****             button_maj.Init(D22, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORM
 733              		.loc 10 54 13 is_stmt 1 view .LVU162
 734              		.loc 10 54 28 is_stmt 0 view .LVU163
 735 0110 4E49     		ldr	r1, .L24+48
 736 0112 2246     		mov	r2, r4
 737 0114 05F1B400 		add	r0, r5, #180
 738 0118 B7EE000A 		vmov.f32	s0, #1.0e+0
 739 011c 0023     		movs	r3, #0
 740 011e 0968     		ldr	r1, [r1]
 741 0120 0094     		str	r4, [sp]
 742 0122 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 743              	.LVL48:
  55:GPIOState.h   ****             button_min.Init(D21, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORM
 744              		.loc 10 55 13 is_stmt 1 view .LVU164
 745              		.loc 10 55 28 is_stmt 0 view .LVU165
 746 0126 4A49     		ldr	r1, .L24+52
 747 0128 2246     		mov	r2, r4
 748 012a 05F1D800 		add	r0, r5, #216
 749 012e B7EE000A 		vmov.f32	s0, #1.0e+0
 750 0132 0023     		movs	r3, #0
 751 0134 0968     		ldr	r1, [r1]
 752 0136 0094     		str	r4, [sp]
 753 0138 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 754              	.LVL49:
  56:GPIOState.h   ****             button_aug.Init(D20, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORM
 755              		.loc 10 56 13 is_stmt 1 view .LVU166
 756              		.loc 10 56 28 is_stmt 0 view .LVU167
 757 013c 4549     		ldr	r1, .L24+56
 758 013e 2246     		mov	r2, r4
 759 0140 05F1FC00 		add	r0, r5, #252
 760 0144 B7EE000A 		vmov.f32	s0, #1.0e+0
 761 0148 0023     		movs	r3, #0
 762 014a 0968     		ldr	r1, [r1]
 763 014c 0094     		str	r4, [sp]
 764 014e FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 765              	.LVL50:
  57:GPIOState.h   ****             button_dim.Init(D19, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_NORM
 766              		.loc 10 57 13 is_stmt 1 view .LVU168
 767              		.loc 10 57 28 is_stmt 0 view .LVU169
 768 0152 4149     		ldr	r1, .L24+60
 769 0154 2246     		mov	r2, r4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 123


 770 0156 05F59070 		add	r0, r5, #288
 771 015a B7EE000A 		vmov.f32	s0, #1.0e+0
 772 015e 0023     		movs	r3, #0
 773 0160 0968     		ldr	r1, [r1]
 774 0162 0094     		str	r4, [sp]
 775 0164 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 776              	.LVL51:
  58:GPIOState.h   **** 
  59:GPIOState.h   ****             button_triad.Init   (D26, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 777              		.loc 10 59 13 is_stmt 1 view .LVU170
 778              		.loc 10 59 33 is_stmt 0 view .LVU171
 779 0168 3C49     		ldr	r1, .L24+64
 780 016a 2246     		mov	r2, r4
 781 016c 2846     		mov	r0, r5
 782 016e B7EE000A 		vmov.f32	s0, #1.0e+0
 783 0172 0023     		movs	r3, #0
 784 0174 0968     		ldr	r1, [r1]
 785 0176 0094     		str	r4, [sp]
 786 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 787              	.LVL52:
  60:GPIOState.h   ****             button_6th.Init     (D27, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 788              		.loc 10 60 13 is_stmt 1 view .LVU172
 789              		.loc 10 60 33 is_stmt 0 view .LVU173
 790 017c 3849     		ldr	r1, .L24+68
 791 017e 2246     		mov	r2, r4
 792 0180 05F12400 		add	r0, r5, #36
 793 0184 B7EE000A 		vmov.f32	s0, #1.0e+0
 794 0188 0023     		movs	r3, #0
 795 018a 0968     		ldr	r1, [r1]
 796 018c 0094     		str	r4, [sp]
 797 018e FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 798              	.LVL53:
  61:GPIOState.h   ****             button_7th.Init     (D28, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 799              		.loc 10 61 13 is_stmt 1 view .LVU174
 800              		.loc 10 61 33 is_stmt 0 view .LVU175
 801 0192 3449     		ldr	r1, .L24+72
 802 0194 2246     		mov	r2, r4
 803 0196 05F14800 		add	r0, r5, #72
 804 019a B7EE000A 		vmov.f32	s0, #1.0e+0
 805 019e 0023     		movs	r3, #0
 806 01a0 0968     		ldr	r1, [r1]
 807 01a2 0094     		str	r4, [sp]
 808 01a4 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 809              	.LVL54:
  62:GPIOState.h   ****             button_9th.Init    (D29, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY_
 810              		.loc 10 62 13 is_stmt 1 view .LVU176
 811              		.loc 10 62 32 is_stmt 0 view .LVU177
 812 01a8 2F49     		ldr	r1, .L24+76
 813 01aa 2246     		mov	r2, r4
 814 01ac 05F16C00 		add	r0, r5, #108
 815 01b0 B7EE000A 		vmov.f32	s0, #1.0e+0
 816 01b4 0023     		movs	r3, #0
 817 01b6 0968     		ldr	r1, [r1]
 818 01b8 0094     		str	r4, [sp]
 819 01ba FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 820              	.LVL55:
  63:GPIOState.h   ****             button_11th.Init    (D30, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 124


 821              		.loc 10 63 13 is_stmt 1 view .LVU178
 822              		.loc 10 63 33 is_stmt 0 view .LVU179
 823 01be 2B49     		ldr	r1, .L24+80
 824 01c0 2246     		mov	r2, r4
 825 01c2 05F19000 		add	r0, r5, #144
 826 01c6 B7EE000A 		vmov.f32	s0, #1.0e+0
 827 01ca 0023     		movs	r3, #0
 828 01cc 0968     		ldr	r1, [r1]
 829 01ce 0094     		str	r4, [sp]
 830 01d0 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 831              	.LVL56:
  64:GPIOState.h   **** 
  65:GPIOState.h   ****             groove.Init         (D23, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 832              		.loc 10 65 13 is_stmt 1 view .LVU180
 833              		.loc 10 65 33 is_stmt 0 view .LVU181
 834 01d4 2649     		ldr	r1, .L24+84
 835 01d6 2246     		mov	r2, r4
 836 01d8 05F53D70 		add	r0, r5, #756
 837 01dc B7EE000A 		vmov.f32	s0, #1.0e+0
 838 01e0 0023     		movs	r3, #0
 839 01e2 0968     		ldr	r1, [r1]
 840 01e4 0094     		str	r4, [sp]
 841 01e6 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 842              	.LVL57:
  66:GPIOState.h   ****             drum_left.Init      (D24, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 843              		.loc 10 66 13 is_stmt 1 view .LVU182
 844              		.loc 10 66 33 is_stmt 0 view .LVU183
 845 01ea 2249     		ldr	r1, .L24+88
 846 01ec 2246     		mov	r2, r4
 847 01ee 05F54670 		add	r0, r5, #792
 848 01f2 B7EE000A 		vmov.f32	s0, #1.0e+0
 849 01f6 0023     		movs	r3, #0
 850 01f8 0968     		ldr	r1, [r1]
 851 01fa 0094     		str	r4, [sp]
 852 01fc FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 853              	.LVL58:
  67:GPIOState.h   ****             drum_right.Init     (D25, 1.f, Switch::Type::TYPE_MOMENTARY, Switch::Polarity::POLARITY
 854              		.loc 10 67 13 is_stmt 1 view .LVU184
 855              		.loc 10 67 33 is_stmt 0 view .LVU185
 856 0200 1D49     		ldr	r1, .L24+92
 857 0202 B7EE000A 		vmov.f32	s0, #1.0e+0
 858 0206 0023     		movs	r3, #0
 859 0208 2246     		mov	r2, r4
 860 020a 0968     		ldr	r1, [r1]
 861 020c 05F54F70 		add	r0, r5, #828
 862 0210 0094     		str	r4, [sp]
 863 0212 FFF7FEFF 		bl	_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
 864              	.LVL59:
  68:GPIOState.h   ****     
  69:GPIOState.h   ****    }
 865              		.loc 10 69 4 view .LVU186
 866 0216 03B0     		add	sp, sp, #12
 867              		.cfi_def_cfa_offset 12
 868              		@ sp needed
 869 0218 30BD     		pop	{r4, r5, pc}
 870              	.LVL60:
 871              	.L25:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 125


 872              		.loc 10 69 4 view .LVU187
 873 021a 00BF     		.align	2
 874              	.L24:
 875 021c 00000000 		.word	.LANCHOR1
 876 0220 00000000 		.word	.LANCHOR2
 877 0224 00000000 		.word	.LANCHOR3
 878 0228 00000000 		.word	.LANCHOR4
 879 022c 00000000 		.word	.LANCHOR5
 880 0230 00000000 		.word	.LANCHOR6
 881 0234 00000000 		.word	.LANCHOR7
 882 0238 00000000 		.word	.LANCHOR8
 883 023c 00000000 		.word	.LANCHOR9
 884 0240 00000000 		.word	.LANCHOR10
 885 0244 00000000 		.word	.LANCHOR11
 886 0248 00000000 		.word	.LANCHOR12
 887 024c 00000000 		.word	.LANCHOR13
 888 0250 00000000 		.word	.LANCHOR14
 889 0254 00000000 		.word	.LANCHOR15
 890 0258 00000000 		.word	.LANCHOR16
 891 025c 00000000 		.word	.LANCHOR17
 892 0260 00000000 		.word	.LANCHOR18
 893 0264 00000000 		.word	.LANCHOR19
 894 0268 00000000 		.word	.LANCHOR20
 895 026c 00000000 		.word	.LANCHOR21
 896 0270 00000000 		.word	.LANCHOR22
 897 0274 00000000 		.word	.LANCHOR23
 898 0278 00000000 		.word	.LANCHOR24
 899              		.cfi_endproc
 900              	.LFE5520:
 902              		.section	.text._ZN10Brizachord21poll_pattern_controlsEv,"ax",%progbits
 903              		.align	1
 904              		.p2align 2,,3
 905              		.global	_ZN10Brizachord21poll_pattern_controlsEv
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv5-d16
 911              	_ZN10Brizachord21poll_pattern_controlsEv:
 912              	.LVL61:
 913              	.LFB5615:
 122:Brizachord.cpp **** 
 123:Brizachord.cpp **** //======================================================================
 124:Brizachord.cpp **** // Polling
 125:Brizachord.cpp **** //======================================================================
 126:Brizachord.cpp **** 
 127:Brizachord.cpp **** /* Poll the chord root switches for changes. Update InstrumentState's chord root on a falling edge 
 128:Brizachord.cpp **** void Brizachord::poll_chord_root() {
 129:Brizachord.cpp ****     std::string new_root = instrument_state.chord.root;
 130:Brizachord.cpp **** 	
 131:Brizachord.cpp **** 	if      (gpio_state.button_C.FallingEdge())     new_root = "C";
 132:Brizachord.cpp **** 	else if (gpio_state.button_Db.FallingEdge())    new_root = "Db";
 133:Brizachord.cpp **** 	else if (gpio_state.button_D.FallingEdge())     new_root = "D";
 134:Brizachord.cpp **** 	else if (gpio_state.button_Eb.FallingEdge())    new_root = "Eb";
 135:Brizachord.cpp **** 	else if (gpio_state.button_E.FallingEdge())     new_root = "E";
 136:Brizachord.cpp **** 	else if (gpio_state.button_F.FallingEdge())     new_root = "F";
 137:Brizachord.cpp **** 	else if (gpio_state.button_Gb.FallingEdge())    new_root = "Gb";
 138:Brizachord.cpp **** 	else if (gpio_state.button_G.FallingEdge())     new_root = "G";
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 126


 139:Brizachord.cpp **** 	else if (gpio_state.button_Ab.FallingEdge())    new_root = "Ab";
 140:Brizachord.cpp **** 	else if (gpio_state.button_A.FallingEdge())     new_root = "A";
 141:Brizachord.cpp **** 	else if (gpio_state.button_Bb.FallingEdge())    new_root = "Bb";
 142:Brizachord.cpp **** 	else if (gpio_state.button_B.FallingEdge())     new_root = "B";
 143:Brizachord.cpp **** 	else                           return;
 144:Brizachord.cpp **** 
 145:Brizachord.cpp **** 	if (new_root != instrument_state.chord.root) {
 146:Brizachord.cpp **** 		instrument_state.chord.root = new_root;
 147:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 148:Brizachord.cpp **** 		instrument_state.chord.extension = instrument_state.queued_extension;
 149:Brizachord.cpp **** 
 150:Brizachord.cpp **** 		// Prevent audio ISR from being called while rebuilding the osc vectors
 151:Brizachord.cpp **** 		__disable_irq();
 152:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 153:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 154:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 155:Brizachord.cpp **** 		__enable_irq();
 156:Brizachord.cpp **** 	}
 157:Brizachord.cpp **** }
 158:Brizachord.cpp **** 
 159:Brizachord.cpp **** /* 
 160:Brizachord.cpp **** Poll the chord quality switches for changes.
 161:Brizachord.cpp **** On falling edge (press): update the InstrumentState's queued chord quality.
 162:Brizachord.cpp **** On rising edge (release): update the InstrumentState's chord with its queued quality.
 163:Brizachord.cpp **** 
 164:Brizachord.cpp **** The queueing system allows for the user to select a new root while holding down 
 165:Brizachord.cpp **** the new chord quality/extension to prevent them from applying briefly to the previous chord during 
 166:Brizachord.cpp **** */
 167:Brizachord.cpp **** void Brizachord::poll_chord_qual() {
 168:Brizachord.cpp ****     	// ---------------- Update queue ----------------------------------------------
 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 170:Brizachord.cpp **** 	else if (gpio_state.button_min.FallingEdge())   instrument_state.queued_quality = MINOR;
 171:Brizachord.cpp **** 	else if (gpio_state.button_aug.FallingEdge())   instrument_state.queued_quality = AUGMENTED;
 172:Brizachord.cpp **** 	else if (gpio_state.button_dim.FallingEdge())   instrument_state.queued_quality = DIMINISHED;
 173:Brizachord.cpp **** 
 174:Brizachord.cpp **** 	// ---------------- Update chord ----------------------------------------------
 175:Brizachord.cpp **** 
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 177:Brizachord.cpp **** 		|| gpio_state.button_aug.RisingEdge() || gpio_state.button_dim.RisingEdge())) {
 178:Brizachord.cpp **** 			return;
 179:Brizachord.cpp **** 		}
 180:Brizachord.cpp **** 
 181:Brizachord.cpp **** 	if (instrument_state.queued_quality != instrument_state.chord.quality) {
 182:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 183:Brizachord.cpp **** 		// Prevent audio ISR from being called while rebuilding the osc vectors
 184:Brizachord.cpp **** 		__disable_irq();
 185:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 186:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 187:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 188:Brizachord.cpp **** 		__enable_irq();
 189:Brizachord.cpp **** 	}
 190:Brizachord.cpp **** }
 191:Brizachord.cpp **** 
 192:Brizachord.cpp **** /* 
 193:Brizachord.cpp **** Poll the chord extension switches for changes.
 194:Brizachord.cpp **** On falling edge (press): update the InstrumentState's queued chord extension.
 195:Brizachord.cpp **** On rising edge (release): update the InstrumentState's chord with its queued extension.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 127


 196:Brizachord.cpp **** 
 197:Brizachord.cpp **** The queueing system allows for the user to select a new root while holding down 
 198:Brizachord.cpp **** the new chord quality/extension to prevent them from applying briefly to the previous chord during 
 199:Brizachord.cpp **** */
 200:Brizachord.cpp **** void Brizachord::poll_chord_ext() {
 201:Brizachord.cpp **** 	// ---------------- Update queue ----------------------------------------------
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 203:Brizachord.cpp **** 	else if (gpio_state.button_6th.FallingEdge())   instrument_state.queued_extension = SIXTH;
 204:Brizachord.cpp **** 	else if (gpio_state.button_7th.FallingEdge())   instrument_state.queued_extension = SEVENTH;
 205:Brizachord.cpp **** 	else if (gpio_state.button_9th.FallingEdge())   instrument_state.queued_extension = NINTH;
 206:Brizachord.cpp **** 	else if (gpio_state.button_11th.FallingEdge())  instrument_state.queued_extension = ELEVENTH;
 207:Brizachord.cpp **** 
 208:Brizachord.cpp **** 	// ---------------- Update chord ----------------------------------------------
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 210:Brizachord.cpp **** 			|| gpio_state.button_6th.RisingEdge() 
 211:Brizachord.cpp **** 			|| gpio_state.button_7th.RisingEdge()
 212:Brizachord.cpp **** 			||gpio_state.button_9th.RisingEdge() 
 213:Brizachord.cpp **** 			|| gpio_state.button_11th.RisingEdge())) {
 214:Brizachord.cpp **** 				return;
 215:Brizachord.cpp **** 			}
 216:Brizachord.cpp **** 
 217:Brizachord.cpp **** 	if (instrument_state.queued_extension != instrument_state.chord.extension) {
 218:Brizachord.cpp **** 		instrument_state.chord.extension = instrument_state.queued_extension;
 219:Brizachord.cpp **** 		// Prevent audio ISR from being called while rebuilding the osc vectors
 220:Brizachord.cpp **** 		__disable_irq();
 221:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 222:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 223:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 224:Brizachord.cpp **** 		__enable_irq();
 225:Brizachord.cpp **** 	}
 226:Brizachord.cpp **** }
 227:Brizachord.cpp **** 
 228:Brizachord.cpp **** 
 229:Brizachord.cpp **** 
 230:Brizachord.cpp **** void Brizachord::poll_pattern_controls() {
 914              		.loc 1 230 42 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Brizachord.cpp ****     if (gpio_state.groove.FallingEdge()) {
 918              		.loc 1 231 5 view .LVU189
 919              	.LBB3117:
 920              	.LBB3118:
 921              		.file 11 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 128


  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     Switch() {}
  34:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  35:../../libDaisy//src/hid/switch.h **** 
  36:../../libDaisy//src/hid/switch.h ****     /** 
  37:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  38:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  39:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  40:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  41:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  42:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  43:../../libDaisy//src/hid/switch.h ****     */
  44:../../libDaisy//src/hid/switch.h ****     void Init(Pin        pin,
  45:../../libDaisy//src/hid/switch.h ****               float      update_rate,
  46:../../libDaisy//src/hid/switch.h ****               Type       t,
  47:../../libDaisy//src/hid/switch.h ****               Polarity   pol,
  48:../../libDaisy//src/hid/switch.h ****               GPIO::Pull pu = GPIO::Pull::PULLUP);
  49:../../libDaisy//src/hid/switch.h **** 
  50:../../libDaisy//src/hid/switch.h ****     /**
  51:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  52:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  53:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  54:../../libDaisy//src/hid/switch.h ****     */
  55:../../libDaisy//src/hid/switch.h ****     void Init(Pin pin, float update_rate = 0.f);
  56:../../libDaisy//src/hid/switch.h **** 
  57:../../libDaisy//src/hid/switch.h ****     /** 
  58:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  59:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  60:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  61:../../libDaisy//src/hid/switch.h ****     */
  62:../../libDaisy//src/hid/switch.h ****     void Debounce();
  63:../../libDaisy//src/hid/switch.h **** 
  64:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  65:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  66:../../libDaisy//src/hid/switch.h **** 
  67:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  68:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  69:../../libDaisy//src/hid/switch.h ****     {
  70:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 129


 922              		.loc 11 70 25 is_stmt 0 view .LVU190
 923 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 924              	.LBE3118:
 925              	.LBE3117:
 230:Brizachord.cpp ****     if (gpio_state.groove.FallingEdge()) {
 926              		.loc 1 230 42 view .LVU191
 927 0004 10B5     		push	{r4, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 4, -8
 930              		.cfi_offset 14, -4
 230:Brizachord.cpp ****     if (gpio_state.groove.FallingEdge()) {
 931              		.loc 1 230 42 view .LVU192
 932 0006 0446     		mov	r4, r0
 933              	.LVL62:
 934              	.LBB3120:
 935              	.LBI3117:
  68:../../libDaisy//src/hid/switch.h ****     {
 936              		.loc 11 68 17 is_stmt 1 view .LVU193
 937              	.LBB3119:
 938              		.loc 11 70 9 view .LVU194
 939              		.loc 11 70 25 is_stmt 0 view .LVU195
 940 0008 1BB1     		cbz	r3, .L27
 941              	.LVL63:
 942              		.loc 11 70 25 view .LVU196
 943              	.LBE3119:
 944              	.LBE3120:
 945              		.loc 1 231 5 view .LVU197
 946 000a 90F8D033 		ldrb	r3, [r0, #976]	@ zero_extendqisi2
 947 000e 802B     		cmp	r3, #128
 948 0010 0ED0     		beq	.L40
 949              	.L27:
 232:Brizachord.cpp **** 		sequencer.toggle_groove();
 233:Brizachord.cpp **** 	}
 234:Brizachord.cpp **** 	if (gpio_state.drum_left.FallingEdge()) {
 950              		.loc 1 234 2 is_stmt 1 view .LVU198
 951              	.LVL64:
 952              	.LBB3121:
 953              	.LBI3121:
  68:../../libDaisy//src/hid/switch.h ****     {
 954              		.loc 11 68 17 view .LVU199
 955              	.LBB3122:
 956              		.loc 11 70 9 view .LVU200
 957              		.loc 11 70 25 is_stmt 0 view .LVU201
 958 0012 94F8DC33 		ldrb	r3, [r4, #988]	@ zero_extendqisi2
 959 0016 1BB1     		cbz	r3, .L28
 960              	.LVL65:
 961              		.loc 11 70 25 view .LVU202
 962              	.LBE3122:
 963              	.LBE3121:
 964              		.loc 1 234 2 view .LVU203
 965 0018 94F8F433 		ldrb	r3, [r4, #1012]	@ zero_extendqisi2
 966 001c 802B     		cmp	r3, #128
 967 001e 15D0     		beq	.L41
 968              	.LVL66:
 969              	.L28:
 235:Brizachord.cpp **** 		sequencer.scroll_pattern(false); // Scroll left
 236:Brizachord.cpp **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 130


 237:Brizachord.cpp **** 	if (gpio_state.drum_right.FallingEdge()) {
 970              		.loc 1 237 2 is_stmt 1 view .LVU204
 971              	.LBB3123:
 972              	.LBI3123:
  68:../../libDaisy//src/hid/switch.h ****     {
 973              		.loc 11 68 17 view .LVU205
 974              	.LBB3124:
 975              		.loc 11 70 9 view .LVU206
 976              		.loc 11 70 25 is_stmt 0 view .LVU207
 977 0020 94F80034 		ldrb	r3, [r4, #1024]	@ zero_extendqisi2
 978 0024 1BB1     		cbz	r3, .L26
 979              	.LVL67:
 980              		.loc 11 70 25 view .LVU208
 981              	.LBE3124:
 982              	.LBE3123:
 983              		.loc 1 237 2 view .LVU209
 984 0026 94F81834 		ldrb	r3, [r4, #1048]	@ zero_extendqisi2
 985 002a 802B     		cmp	r3, #128
 986 002c 07D0     		beq	.L42
 987              	.L26:
 238:Brizachord.cpp **** 		sequencer.scroll_pattern(true); // Scroll right
 239:Brizachord.cpp **** 	}
 240:Brizachord.cpp **** }
 988              		.loc 1 240 1 view .LVU210
 989 002e 10BD     		pop	{r4, pc}
 990              	.LVL68:
 991              	.L40:
 232:Brizachord.cpp **** 	}
 992              		.loc 1 232 3 is_stmt 1 view .LVU211
 993              	.LBB3125:
 994              	.LBI3125:
 995              		.file 12 "Sequencer.h"
   1:Sequencer.h   **** #pragma once
   2:Sequencer.h   **** #include <cstdint>
   3:Sequencer.h   **** #include <vector>
   4:Sequencer.h   **** #include <array>
   5:Sequencer.h   **** #include "DrumSynth.h"
   6:Sequencer.h   **** #include "ChordSynth.h"
   7:Sequencer.h   **** #include "utils.h"
   8:Sequencer.h   **** 
   9:Sequencer.h   **** class Sequencer
  10:Sequencer.h   **** {
  11:Sequencer.h   **** public:
  12:Sequencer.h   ****     Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth);
  13:Sequencer.h   **** 
  14:Sequencer.h   ****     void tick();
  15:Sequencer.h   **** 
  16:Sequencer.h   ****     void scroll_pattern(bool direction); // Pattern select switches call this function with 0,1 for
  17:Sequencer.h   ****     void set_bpm(uint8_t new_bpm) { bpm = new_bpm; }
  18:Sequencer.h   **** 
  19:Sequencer.h   ****     inline void toggle_groove() { groove = !groove; }
 996              		.loc 12 19 17 view .LVU212
 997              	.LBB3126:
 998              		.loc 12 19 35 view .LVU213
 999              		.loc 12 19 44 is_stmt 0 view .LVU214
 1000 0030 90F8DC38 		ldrb	r3, [r0, #2268]	@ zero_extendqisi2
 1001 0034 83F00103 		eor	r3, r3, #1
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 131


 1002              		.loc 12 19 42 view .LVU215
 1003 0038 80F8DC38 		strb	r3, [r0, #2268]
 1004              		.loc 12 19 53 view .LVU216
 1005 003c E9E7     		b	.L27
 1006              	.LVL69:
 1007              	.L42:
 1008              		.loc 12 19 53 view .LVU217
 1009              	.LBE3126:
 1010              	.LBE3125:
 238:Brizachord.cpp **** 	}
 1011              		.loc 1 238 3 is_stmt 1 view .LVU218
 238:Brizachord.cpp **** 	}
 1012              		.loc 1 238 27 is_stmt 0 view .LVU219
 1013 003e 04F6C800 		addw	r0, r4, #2248
 1014 0042 0121     		movs	r1, #1
 1015              		.loc 1 240 1 view .LVU220
 1016 0044 BDE81040 		pop	{r4, lr}
 1017              		.cfi_remember_state
 1018              		.cfi_restore 14
 1019              		.cfi_restore 4
 1020              		.cfi_def_cfa_offset 0
 1021              	.LVL70:
 238:Brizachord.cpp **** 	}
 1022              		.loc 1 238 27 view .LVU221
 1023 0048 FFF7FEBF 		b	_ZN9Sequencer14scroll_patternEb
 1024              	.LVL71:
 1025              	.L41:
 1026              		.cfi_restore_state
 235:Brizachord.cpp **** 	}
 1027              		.loc 1 235 3 is_stmt 1 view .LVU222
 235:Brizachord.cpp **** 	}
 1028              		.loc 1 235 27 is_stmt 0 view .LVU223
 1029 004c 0021     		movs	r1, #0
 1030 004e 04F6C800 		addw	r0, r4, #2248
 1031              	.LVL72:
 235:Brizachord.cpp **** 	}
 1032              		.loc 1 235 27 view .LVU224
 1033 0052 FFF7FEFF 		bl	_ZN9Sequencer14scroll_patternEb
 1034              	.LVL73:
 1035 0056 E3E7     		b	.L28
 1036              		.cfi_endproc
 1037              	.LFE5615:
 1039              		.section	.text._ZN10Brizachord14poll_trill_barEv,"ax",%progbits
 1040              		.align	1
 1041              		.p2align 2,,3
 1042              		.global	_ZN10Brizachord14poll_trill_barEv
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv5-d16
 1048              	_ZN10Brizachord14poll_trill_barEv:
 1049              	.LVL74:
 1050              	.LFB5616:
 241:Brizachord.cpp **** 
 242:Brizachord.cpp **** /*
 243:Brizachord.cpp **** Read I2C values from Trill Bar.
 244:Brizachord.cpp **** Evaluate each touch and calculate correspoding indices in the strum arpeggio,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 132


 245:Brizachord.cpp **** then tell them to the strum synth.
 246:Brizachord.cpp **** */
 247:Brizachord.cpp **** void Brizachord::poll_trill_bar() {
 1051              		.loc 1 247 35 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Brizachord.cpp ****     trill_bar.readI2C();
 1055              		.loc 1 248 5 view .LVU226
 247:Brizachord.cpp ****     trill_bar.readI2C();
 1056              		.loc 1 247 35 is_stmt 0 view .LVU227
 1057 0000 70B5     		push	{r4, r5, r6, lr}
 1058              		.cfi_def_cfa_offset 16
 1059              		.cfi_offset 4, -16
 1060              		.cfi_offset 5, -12
 1061              		.cfi_offset 6, -8
 1062              		.cfi_offset 14, -4
 1063              		.loc 1 248 22 view .LVU228
 1064 0002 00F58465 		add	r5, r0, #1056
 1065 0006 0021     		movs	r1, #0
 247:Brizachord.cpp ****     trill_bar.readI2C();
 1066              		.loc 1 247 35 view .LVU229
 1067 0008 0446     		mov	r4, r0
 1068              		.loc 1 248 22 view .LVU230
 1069 000a 2846     		mov	r0, r5
 1070              	.LVL75:
 1071              		.loc 1 248 22 view .LVU231
 1072 000c FFF7FEFF 		bl	_ZN5Trill7readI2CEb
 1073              	.LVL76:
 249:Brizachord.cpp ****     if(trill_bar.getNumTouches())
 1074              		.loc 1 249 5 is_stmt 1 view .LVU232
 1075              	.LBB3127:
 1076              		.loc 1 249 31 is_stmt 0 view .LVU233
 1077 0010 2846     		mov	r0, r5
 1078 0012 FFF7FEFF 		bl	_ZN5Trill13getNumTouchesEv
 1079              	.LVL77:
 1080              		.loc 1 249 5 view .LVU234
 1081 0016 80B3     		cbz	r0, .L44
 1082              	.LBB3128:
 1083              	.LBB3129:
 250:Brizachord.cpp ****     {
 251:Brizachord.cpp ****         for(size_t n = 0; n < trill_bar.getNumTouches(); ++n) {
 1084              		.loc 1 251 20 view .LVU235
 1085 0018 0026     		movs	r6, #0
 1086 001a 1DE0     		b	.L46
 1087              	.LVL78:
 1088              	.L48:
 1089              	.LBB3130:
 252:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1090              		.loc 1 252 57 discriminator 2 view .LVU236
 1091 001c FFF7FEFF 		bl	_ZN5Trill13touchLocationEh
 1092              	.LVL79:
 253:Brizachord.cpp **** 
 254:Brizachord.cpp ****             // Divide and modulo the raw sensor value by the number of notes in
 255:Brizachord.cpp ****             // the strum synth arpeggio to get corresponding index of the note in the arpeggio
 256:Brizachord.cpp ****             uint8_t arpeggio_size = strum_synth.arpeggio_size();
 1093              		.loc 1 256 13 is_stmt 1 discriminator 2 view .LVU237
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 133


 1094              	.LBB3131:
 1095              	.LBI3131:
 1096              		.file 13 "StrumSynth.h"
   1:StrumSynth.h  **** #pragma once
   2:StrumSynth.h  **** #include "daisysp.h"
   3:StrumSynth.h  **** #include "InstrumentState.h"
   4:StrumSynth.h  **** #include <vector>
   5:StrumSynth.h  **** 
   6:StrumSynth.h  **** using namespace daisysp;
   7:StrumSynth.h  **** class StrumSynth
   8:StrumSynth.h  **** {
   9:StrumSynth.h  **** public:
  10:StrumSynth.h  ****     StrumSynth(float sample_rate, const InstrumentState&);
  11:StrumSynth.h  **** 
  12:StrumSynth.h  ****     void trigger_note(int midi_note);
  13:StrumSynth.h  ****     void set_arpeggio(std::vector<int> chord_notes);
  14:StrumSynth.h  **** 
  15:StrumSynth.h  ****     float process();
  16:StrumSynth.h  **** 
  17:StrumSynth.h  ****     int arpeggio_size() {return voices.size();}
 1097              		.loc 13 17 9 discriminator 2 view .LVU238
 1098              	.LBE3131:
 1099              	.LBE3130:
 1100              	.LBE3129:
 1101              	.LBE3128:
 1102              	.LBE3127:
 1103              		.loc 13 17 26 discriminator 2 view .LVU239
 1104              	.LBB3146:
 1105              	.LBB3144:
 1106              	.LBB3143:
 1107              	.LBB3140:
 1108              	.LBB3137:
 1109              	.LBB3132:
 1110              	.LBI3132:
 1111              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 134


  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 135


  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 136


 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 137


 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 138


 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 139


 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 140


 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 141


 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 142


 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 143


 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 144


 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 145


 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 146


 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 147


 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 148


 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 149


 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 1112              		.loc 14 918 7 discriminator 2 view .LVU240
 1113              		.loc 14 918 7 is_stmt 0 discriminator 2 view .LVU241
 1114              	.LBE3132:
 1115              	.LBE3137:
 257:Brizachord.cpp ****             int arpeggio_idx = int(sensor_value * arpeggio_size) % (arpeggio_size);
 1116              		.loc 1 257 13 is_stmt 1 discriminator 2 view .LVU242
 1117              	.LBB3138:
 1118              	.LBB3135:
 1119              	.LBB3133:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1120              		.loc 14 919 50 is_stmt 0 discriminator 2 view .LVU243
 1121 0020 D4F8F827 		ldr	r2, [r4, #2040]
 1122 0024 D4F8F437 		ldr	r3, [r4, #2036]
 1123              	.LBE3133:
 1124              	.LBE3135:
 1125              	.LBE3138:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 150


 258:Brizachord.cpp ****             strum_synth.trigger_note(arpeggio_idx);
 1126              		.loc 1 258 37 discriminator 2 view .LVU244
 1127 0028 04F5FE60 		add	r0, r4, #2032
 1128              	.LBB3139:
 1129              	.LBB3136:
 1130              	.LBB3134:
 1131              		.loc 14 919 50 discriminator 2 view .LVU245
 1132 002c 1649     		ldr	r1, .L49
 1133 002e D31A     		subs	r3, r2, r3
 1134 0030 5B11     		asrs	r3, r3, #5
 1135 0032 01FB03F3 		mul	r3, r1, r3
 1136 0036 DBB2     		uxtb	r3, r3
 1137              	.LVL80:
 1138              		.loc 14 919 50 discriminator 2 view .LVU246
 1139              	.LBE3134:
 1140              	.LBE3136:
 1141              	.LBE3139:
 1142              		.loc 1 258 13 is_stmt 1 discriminator 2 view .LVU247
 257:Brizachord.cpp ****             int arpeggio_idx = int(sensor_value * arpeggio_size) % (arpeggio_size);
 1143              		.loc 1 257 49 is_stmt 0 discriminator 2 view .LVU248
 1144 0038 07EE903A 		vmov	s15, r3	@ int
 1145 003c F8EEE77A 		vcvt.f32.s32	s15, s15
 1146 0040 27EE800A 		vmul.f32	s0, s15, s0
 1147              	.LVL81:
 257:Brizachord.cpp ****             int arpeggio_idx = int(sensor_value * arpeggio_size) % (arpeggio_size);
 1148              		.loc 1 257 32 discriminator 2 view .LVU249
 1149 0044 FDEEC07A 		vcvt.s32.f32	s15, s0
 1150 0048 17EE901A 		vmov	r1, s15	@ int
 257:Brizachord.cpp ****             int arpeggio_idx = int(sensor_value * arpeggio_size) % (arpeggio_size);
 1151              		.loc 1 257 17 discriminator 2 view .LVU250
 1152 004c 91FBF3F2 		sdiv	r2, r1, r3
 1153              		.loc 1 258 37 discriminator 2 view .LVU251
 1154 0050 03FB1211 		mls	r1, r3, r2, r1
 1155 0054 FFF7FEFF 		bl	_ZN10StrumSynth12trigger_noteEi
 1156              	.LVL82:
 1157              		.loc 1 258 37 discriminator 2 view .LVU252
 1158              	.LBE3140:
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1159              		.loc 1 251 9 is_stmt 1 discriminator 2 view .LVU253
 1160              	.L46:
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1161              		.loc 1 251 29 discriminator 3 view .LVU254
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1162              		.loc 1 251 54 is_stmt 0 discriminator 3 view .LVU255
 1163 0058 2846     		mov	r0, r5
 1164 005a FFF7FEFF 		bl	_ZN5Trill13getNumTouchesEv
 1165              	.LVL83:
 1166              	.LBB3141:
 252:Brizachord.cpp **** 
 1167              		.loc 1 252 13 is_stmt 1 discriminator 3 view .LVU256
 1168              	.LBE3141:
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1169              		.loc 1 251 54 is_stmt 0 discriminator 3 view .LVU257
 1170 005e 0346     		mov	r3, r0
 1171              	.LBB3142:
 252:Brizachord.cpp **** 
 1172              		.loc 1 252 57 discriminator 3 view .LVU258
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 151


 1173 0060 F1B2     		uxtb	r1, r6
 1174 0062 2846     		mov	r0, r5
 1175              	.LBE3142:
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1176              		.loc 1 251 29 discriminator 3 view .LVU259
 1177 0064 B342     		cmp	r3, r6
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1178              		.loc 1 251 9 discriminator 3 view .LVU260
 1179 0066 06F10106 		add	r6, r6, #1
 1180              	.LVL84:
 251:Brizachord.cpp ****             float sensor_value = trill_bar.touchLocation(n);
 1181              		.loc 1 251 29 discriminator 3 view .LVU261
 1182 006a D7D8     		bhi	.L48
 1183              	.LBE3143:
 259:Brizachord.cpp ****         }
 260:Brizachord.cpp ****         hw.SetLed(true);
 1184              		.loc 1 260 9 is_stmt 1 view .LVU262
 1185              		.loc 1 260 18 is_stmt 0 view .LVU263
 1186 006c 04F10C00 		add	r0, r4, #12
 1187 0070 0121     		movs	r1, #1
 1188              	.LBE3144:
 1189              	.LBE3146:
 261:Brizachord.cpp ****     }
 262:Brizachord.cpp ****     else {
 263:Brizachord.cpp ****         hw.SetLed(false);
 264:Brizachord.cpp ****     }
 265:Brizachord.cpp **** }
 1190              		.loc 1 265 1 view .LVU264
 1191 0072 BDE87040 		pop	{r4, r5, r6, lr}
 1192              		.cfi_remember_state
 1193              		.cfi_restore 14
 1194              		.cfi_restore 6
 1195              		.cfi_restore 5
 1196              		.cfi_restore 4
 1197              		.cfi_def_cfa_offset 0
 1198              	.LVL85:
 1199              	.LBB3147:
 1200              	.LBB3145:
 260:Brizachord.cpp ****     }
 1201              		.loc 1 260 18 view .LVU265
 1202 0076 FFF7FEBF 		b	_ZN5daisy9DaisySeed6SetLedEb
 1203              	.LVL86:
 1204              	.L44:
 1205              		.cfi_restore_state
 260:Brizachord.cpp ****     }
 1206              		.loc 1 260 18 view .LVU266
 1207              	.LBE3145:
 263:Brizachord.cpp ****     }
 1208              		.loc 1 263 9 is_stmt 1 view .LVU267
 263:Brizachord.cpp ****     }
 1209              		.loc 1 263 18 is_stmt 0 view .LVU268
 1210 007a 0146     		mov	r1, r0
 1211 007c 04F10C00 		add	r0, r4, #12
 1212              	.LBE3147:
 1213              		.loc 1 265 1 view .LVU269
 1214 0080 BDE87040 		pop	{r4, r5, r6, lr}
 1215              		.cfi_restore 14
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 152


 1216              		.cfi_restore 6
 1217              		.cfi_restore 5
 1218              		.cfi_restore 4
 1219              		.cfi_def_cfa_offset 0
 1220              	.LVL87:
 1221              	.LBB3148:
 263:Brizachord.cpp ****     }
 1222              		.loc 1 263 18 view .LVU270
 1223 0084 FFF7FEBF 		b	_ZN5daisy9DaisySeed6SetLedEb
 1224              	.LVL88:
 1225              	.L50:
 263:Brizachord.cpp ****     }
 1226              		.loc 1 263 18 view .LVU271
 1227              		.align	2
 1228              	.L49:
 1229 0088 ABAAAAAA 		.word	-1431655765
 1230              	.LBE3148:
 1231              		.cfi_endproc
 1232              	.LFE5616:
 1234              		.section	.text._ZN10Brizachord9poll_potsEv,"ax",%progbits
 1235              		.align	1
 1236              		.p2align 2,,3
 1237              		.global	_ZN10Brizachord9poll_potsEv
 1238              		.syntax unified
 1239              		.thumb
 1240              		.thumb_func
 1241              		.fpu fpv5-d16
 1243              	_ZN10Brizachord9poll_potsEv:
 1244              	.LVL89:
 1245              	.LFB5617:
 266:Brizachord.cpp **** 
 267:Brizachord.cpp **** /*
 268:Brizachord.cpp **** Hardware annoyance: pots are wired in reverse with 3v3 on left, but
 269:Brizachord.cpp **** they have an off-click on the far left, so we reverse and shrink the range to [0.2f, 3.1f]
 270:Brizachord.cpp **** */
 271:Brizachord.cpp **** void Brizachord::poll_pots() {
 1246              		.loc 1 271 30 is_stmt 1 view -0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 272:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1250              		.loc 1 272 2 view .LVU273
 273:Brizachord.cpp **** 		constexpr float min_v = 0.2f / 3.3f;
 274:Brizachord.cpp **** 		constexpr float max_v = 3.1f / 3.3f;
 275:Brizachord.cpp **** 		if (x < min_v || x > max_v)
 276:Brizachord.cpp **** 			return -1.f;
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 278:Brizachord.cpp **** 		x = 1.f - x;
 279:Brizachord.cpp **** 
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 282:Brizachord.cpp **** 	};
 283:Brizachord.cpp **** 
 284:Brizachord.cpp **** 
 285:Brizachord.cpp ****     float v;
 1251              		.loc 1 285 5 view .LVU274
 286:Brizachord.cpp **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 153


 287:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(0))) >= 0.f) strum_vol = v;
 1252              		.loc 1 287 5 view .LVU275
 271:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1253              		.loc 1 271 30 is_stmt 0 view .LVU276
 1254 0000 38B5     		push	{r3, r4, r5, lr}
 1255              		.cfi_def_cfa_offset 16
 1256              		.cfi_offset 3, -16
 1257              		.cfi_offset 4, -12
 1258              		.cfi_offset 5, -8
 1259              		.cfi_offset 14, -4
 1260              		.loc 1 287 23 view .LVU277
 1261 0002 00F12405 		add	r5, r0, #36
 1262 0006 0021     		movs	r1, #0
 271:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1263              		.loc 1 271 30 view .LVU278
 1264 0008 0446     		mov	r4, r0
 1265              		.loc 1 287 23 view .LVU279
 1266 000a 2846     		mov	r0, r5
 1267              	.LVL90:
 1268              		.loc 1 287 23 view .LVU280
 1269 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1270              	.LVL91:
 1271              	.LBB3174:
 1272              	.LBB3175:
 275:Brizachord.cpp **** 			return -1.f;
 1273              		.loc 1 275 3 view .LVU281
 1274 0010 DFED547A 		vldr.32	s15, .L80
 1275              	.LVL92:
 275:Brizachord.cpp **** 			return -1.f;
 1276              		.loc 1 275 3 view .LVU282
 1277              	.LBE3175:
 1278              	.LBI3174:
 272:Brizachord.cpp **** 		constexpr float min_v = 0.2f / 3.3f;
 1279              		.loc 1 272 19 is_stmt 1 view .LVU283
 1280              	.LBB3176:
 273:Brizachord.cpp **** 		constexpr float max_v = 3.1f / 3.3f;
 1281              		.loc 1 273 3 view .LVU284
 274:Brizachord.cpp **** 		if (x < min_v || x > max_v)
 1282              		.loc 1 274 3 view .LVU285
 275:Brizachord.cpp **** 			return -1.f;
 1283              		.loc 1 275 3 view .LVU286
 1284 0014 B4EEE70A 		vcmpe.f32	s0, s15
 1285 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1286 001c 06D4     		bmi	.L54
 275:Brizachord.cpp **** 			return -1.f;
 1287              		.loc 1 275 17 is_stmt 0 view .LVU287
 1288 001e 9FED527A 		vldr.32	s14, .L80+4
 1289 0022 B4EEC70A 		vcmpe.f32	s0, s14
 1290 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1291 002a 4EDD     		ble	.L76
 1292              	.LVL93:
 1293              	.L54:
 275:Brizachord.cpp **** 			return -1.f;
 1294              		.loc 1 275 17 view .LVU288
 1295              	.LBE3176:
 1296              	.LBE3174:
 288:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(1))) >= 0.f) chord_vol = v;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 154


 1297              		.loc 1 288 5 is_stmt 1 view .LVU289
 1298              		.loc 1 288 23 is_stmt 0 view .LVU290
 1299 002c 0121     		movs	r1, #1
 1300 002e 2846     		mov	r0, r5
 1301 0030 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1302              	.LVL94:
 1303              	.LBB3179:
 1304              	.LBB3180:
 275:Brizachord.cpp **** 			return -1.f;
 1305              		.loc 1 275 3 view .LVU291
 1306 0034 DFED4B7A 		vldr.32	s15, .L80
 1307              	.LVL95:
 275:Brizachord.cpp **** 			return -1.f;
 1308              		.loc 1 275 3 view .LVU292
 1309              	.LBE3180:
 1310              	.LBI3179:
 272:Brizachord.cpp **** 		constexpr float min_v = 0.2f / 3.3f;
 1311              		.loc 1 272 19 is_stmt 1 view .LVU293
 1312              	.LBB3181:
 273:Brizachord.cpp **** 		constexpr float max_v = 3.1f / 3.3f;
 1313              		.loc 1 273 3 view .LVU294
 274:Brizachord.cpp **** 		if (x < min_v || x > max_v)
 1314              		.loc 1 274 3 view .LVU295
 275:Brizachord.cpp **** 			return -1.f;
 1315              		.loc 1 275 3 view .LVU296
 1316 0038 B4EEE70A 		vcmpe.f32	s0, s15
 1317 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1318 0040 06D4     		bmi	.L59
 275:Brizachord.cpp **** 			return -1.f;
 1319              		.loc 1 275 17 is_stmt 0 view .LVU297
 1320 0042 9FED497A 		vldr.32	s14, .L80+4
 1321 0046 B4EEC70A 		vcmpe.f32	s0, s14
 1322 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1323 004e 54DD     		ble	.L77
 1324              	.LVL96:
 1325              	.L59:
 275:Brizachord.cpp **** 			return -1.f;
 1326              		.loc 1 275 17 view .LVU298
 1327              	.LBE3181:
 1328              	.LBE3179:
 289:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(2))) >= 0.f) drum_vol  = v;
 1329              		.loc 1 289 5 is_stmt 1 view .LVU299
 1330              		.loc 1 289 23 is_stmt 0 view .LVU300
 1331 0050 0221     		movs	r1, #2
 1332 0052 2846     		mov	r0, r5
 1333 0054 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1334              	.LVL97:
 1335              	.LBB3184:
 1336              	.LBB3185:
 275:Brizachord.cpp **** 			return -1.f;
 1337              		.loc 1 275 3 view .LVU301
 1338 0058 DFED427A 		vldr.32	s15, .L80
 1339              	.LVL98:
 275:Brizachord.cpp **** 			return -1.f;
 1340              		.loc 1 275 3 view .LVU302
 1341              	.LBE3185:
 1342              	.LBI3184:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 155


 272:Brizachord.cpp **** 		constexpr float min_v = 0.2f / 3.3f;
 1343              		.loc 1 272 19 is_stmt 1 view .LVU303
 1344              	.LBB3186:
 273:Brizachord.cpp **** 		constexpr float max_v = 3.1f / 3.3f;
 1345              		.loc 1 273 3 view .LVU304
 274:Brizachord.cpp **** 		if (x < min_v || x > max_v)
 1346              		.loc 1 274 3 view .LVU305
 275:Brizachord.cpp **** 			return -1.f;
 1347              		.loc 1 275 3 view .LVU306
 1348 005c B4EEE70A 		vcmpe.f32	s0, s15
 1349 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1350 0064 06D4     		bmi	.L64
 275:Brizachord.cpp **** 			return -1.f;
 1351              		.loc 1 275 17 is_stmt 0 view .LVU307
 1352 0066 9FED407A 		vldr.32	s14, .L80+4
 1353 006a B4EEC70A 		vcmpe.f32	s0, s14
 1354 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1355 0072 12DD     		ble	.L78
 1356              	.LVL99:
 1357              	.L64:
 275:Brizachord.cpp **** 			return -1.f;
 1358              		.loc 1 275 17 view .LVU308
 1359              	.LBE3186:
 1360              	.LBE3184:
 290:Brizachord.cpp **** 
 291:Brizachord.cpp ****     v = hw.adc.GetFloat(3);
 1361              		.loc 1 291 5 is_stmt 1 view .LVU309
 1362              		.loc 1 291 24 is_stmt 0 view .LVU310
 1363 0074 0321     		movs	r1, #3
 1364 0076 2846     		mov	r0, r5
 1365 0078 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1366              	.LVL100:
 292:Brizachord.cpp ****     if (v >= 0.1f / 3.3f && v <= 1.f) {
 1367              		.loc 1 292 5 view .LVU311
 1368 007c DFED3B7A 		vldr.32	s15, .L80+8
 1369              	.LVL101:
 1370              		.loc 1 292 5 is_stmt 1 view .LVU312
 1371 0080 B4EEE70A 		vcmpe.f32	s0, s15
 1372 0084 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1373 0088 06DB     		blt	.L51
 1374              		.loc 1 292 26 is_stmt 0 discriminator 1 view .LVU313
 1375 008a B7EE007A 		vmov.f32	s14, #1.0e+0
 1376 008e B4EEC70A 		vcmpe.f32	s0, s14
 1377 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1378 0096 48D9     		bls	.L79
 1379              	.L51:
 293:Brizachord.cpp ****         v = (v - 0.1f / 3.3f) / (1.f - 0.1f / 3.3f);
 294:Brizachord.cpp ****         instrument_state.bpm = fmap(1.f - v, 50.f, 140.f);
 295:Brizachord.cpp ****     }
 296:Brizachord.cpp **** }...
 1380              		.loc 1 296 1 view .LVU314
 1381 0098 38BD     		pop	{r3, r4, r5, pc}
 1382              	.LVL102:
 1383              	.L78:
 1384              	.LBB3189:
 1385              	.LBB3187:
 1386              	.LBI3187:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 156


 272:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1387              		.loc 1 272 19 is_stmt 1 view .LVU315
 1388              	.LBB3188:
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1389              		.loc 1 277 3 view .LVU316
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1390              		.loc 1 277 10 is_stmt 0 view .LVU317
 1391 009a 70EE677A 		vsub.f32	s15, s0, s15
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1392              		.loc 1 277 5 view .LVU318
 1393 009e 9FED346A 		vldr.32	s12, .L80+12
 278:Brizachord.cpp **** 		x = 1.f - x;
 1394              		.loc 1 278 5 view .LVU319
 1395 00a2 B7EE000A 		vmov.f32	s0, #1.0e+0
 1396              	.LVL103:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1397              		.loc 1 280 19 view .LVU320
 1398 00a6 F2EE026A 		vmov.f32	s13, #9.0e+0
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1399              		.loc 1 277 5 view .LVU321
 1400 00aa 87EE867A 		vdiv.f32	s14, s15, s12
 1401              	.LVL104:
 278:Brizachord.cpp **** 		x = 1.f - x;
 1402              		.loc 1 278 3 is_stmt 1 view .LVU322
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1403              		.loc 1 280 3 view .LVU323
 278:Brizachord.cpp **** 		x = 1.f - x;
 1404              		.loc 1 278 5 is_stmt 0 view .LVU324
 1405 00ae 70EE477A 		vsub.f32	s15, s0, s14
 1406              	.LVL105:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1407              		.loc 1 280 19 view .LVU325
 1408 00b2 A7EEA60A 		vfma.f32	s0, s15, s13
 1409 00b6 FFF7FEFF 		bl	log10f
 1410              	.LVL106:
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1411              		.loc 1 281 3 is_stmt 1 view .LVU326
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1412              		.loc 1 281 3 is_stmt 0 view .LVU327
 1413              	.LBE3188:
 1414              	.LBE3187:
 1415              	.LBE3189:
 289:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(2))) >= 0.f) drum_vol  = v;
 1416              		.loc 1 289 5 view .LVU328
 1417 00ba B5EEC00A 		vcmpe.f32	s0, #0
 1418 00be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 289:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(2))) >= 0.f) drum_vol  = v;
 1419              		.loc 1 289 53 is_stmt 1 view .LVU329
 289:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(2))) >= 0.f) drum_vol  = v;
 1420              		.loc 1 289 63 is_stmt 0 view .LVU330
 1421 00c2 A8BF     		it	ge
 1422 00c4 84ED020A 		vstrge.32	s0, [r4, #8]
 1423 00c8 D4E7     		b	.L64
 1424              	.LVL107:
 1425              	.L76:
 1426              	.LBB3190:
 1427              	.LBB3177:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 157


 1428              	.LBI3177:
 272:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1429              		.loc 1 272 19 is_stmt 1 view .LVU331
 1430              	.LBB3178:
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1431              		.loc 1 277 3 view .LVU332
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1432              		.loc 1 277 10 is_stmt 0 view .LVU333
 1433 00ca 70EE677A 		vsub.f32	s15, s0, s15
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1434              		.loc 1 277 5 view .LVU334
 1435 00ce 9FED286A 		vldr.32	s12, .L80+12
 278:Brizachord.cpp **** 		x = 1.f - x;
 1436              		.loc 1 278 5 view .LVU335
 1437 00d2 B7EE000A 		vmov.f32	s0, #1.0e+0
 1438              	.LVL108:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1439              		.loc 1 280 19 view .LVU336
 1440 00d6 F2EE026A 		vmov.f32	s13, #9.0e+0
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1441              		.loc 1 277 5 view .LVU337
 1442 00da 87EE867A 		vdiv.f32	s14, s15, s12
 1443              	.LVL109:
 278:Brizachord.cpp **** 		x = 1.f - x;
 1444              		.loc 1 278 3 is_stmt 1 view .LVU338
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1445              		.loc 1 280 3 view .LVU339
 278:Brizachord.cpp **** 		x = 1.f - x;
 1446              		.loc 1 278 5 is_stmt 0 view .LVU340
 1447 00de 70EE477A 		vsub.f32	s15, s0, s14
 1448              	.LVL110:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1449              		.loc 1 280 19 view .LVU341
 1450 00e2 A7EEA60A 		vfma.f32	s0, s15, s13
 1451 00e6 FFF7FEFF 		bl	log10f
 1452              	.LVL111:
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1453              		.loc 1 281 3 is_stmt 1 view .LVU342
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1454              		.loc 1 281 3 is_stmt 0 view .LVU343
 1455              	.LBE3178:
 1456              	.LBE3177:
 1457              	.LBE3190:
 287:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(0))) >= 0.f) strum_vol = v;
 1458              		.loc 1 287 5 view .LVU344
 1459 00ea B5EEC00A 		vcmpe.f32	s0, #0
 1460 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 287:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(0))) >= 0.f) strum_vol = v;
 1461              		.loc 1 287 53 is_stmt 1 view .LVU345
 287:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(0))) >= 0.f) strum_vol = v;
 1462              		.loc 1 287 63 is_stmt 0 view .LVU346
 1463 00f2 A8BF     		it	ge
 1464 00f4 84ED000A 		vstrge.32	s0, [r4]
 1465 00f8 98E7     		b	.L54
 1466              	.LVL112:
 1467              	.L77:
 1468              	.LBB3191:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 158


 1469              	.LBB3182:
 1470              	.LBI3182:
 272:Brizachord.cpp **** 	auto log_curve = [](float x) {
 1471              		.loc 1 272 19 is_stmt 1 view .LVU347
 1472              	.LBB3183:
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1473              		.loc 1 277 3 view .LVU348
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1474              		.loc 1 277 10 is_stmt 0 view .LVU349
 1475 00fa 70EE677A 		vsub.f32	s15, s0, s15
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1476              		.loc 1 277 5 view .LVU350
 1477 00fe 9FED1C6A 		vldr.32	s12, .L80+12
 278:Brizachord.cpp **** 		x = 1.f - x;
 1478              		.loc 1 278 5 view .LVU351
 1479 0102 B7EE000A 		vmov.f32	s0, #1.0e+0
 1480              	.LVL113:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1481              		.loc 1 280 19 view .LVU352
 1482 0106 F2EE026A 		vmov.f32	s13, #9.0e+0
 277:Brizachord.cpp **** 		x = (x - min_v) / (max_v - min_v);
 1483              		.loc 1 277 5 view .LVU353
 1484 010a 87EE867A 		vdiv.f32	s14, s15, s12
 1485              	.LVL114:
 278:Brizachord.cpp **** 		x = 1.f - x;
 1486              		.loc 1 278 3 is_stmt 1 view .LVU354
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1487              		.loc 1 280 3 view .LVU355
 278:Brizachord.cpp **** 		x = 1.f - x;
 1488              		.loc 1 278 5 is_stmt 0 view .LVU356
 1489 010e 70EE477A 		vsub.f32	s15, s0, s14
 1490              	.LVL115:
 280:Brizachord.cpp **** 		float y = log10f(9.f * x + 1.f);
 1491              		.loc 1 280 19 view .LVU357
 1492 0112 A7EEA60A 		vfma.f32	s0, s15, s13
 1493 0116 FFF7FEFF 		bl	log10f
 1494              	.LVL116:
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1495              		.loc 1 281 3 is_stmt 1 view .LVU358
 281:Brizachord.cpp **** 		return y / log10f(10.f); // normalize to 0–1
 1496              		.loc 1 281 3 is_stmt 0 view .LVU359
 1497              	.LBE3183:
 1498              	.LBE3182:
 1499              	.LBE3191:
 288:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(1))) >= 0.f) chord_vol = v;
 1500              		.loc 1 288 5 view .LVU360
 1501 011a B5EEC00A 		vcmpe.f32	s0, #0
 1502 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 288:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(1))) >= 0.f) chord_vol = v;
 1503              		.loc 1 288 53 is_stmt 1 view .LVU361
 288:Brizachord.cpp ****     if ((v = log_curve(hw.adc.GetFloat(1))) >= 0.f) chord_vol = v;
 1504              		.loc 1 288 63 is_stmt 0 view .LVU362
 1505 0122 A8BF     		it	ge
 1506 0124 84ED010A 		vstrge.32	s0, [r4, #4]
 1507 0128 92E7     		b	.L59
 1508              	.LVL117:
 1509              	.L79:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 159


 293:Brizachord.cpp ****         v = (v - 0.1f / 3.3f) / (1.f - 0.1f / 3.3f);
 1510              		.loc 1 293 9 is_stmt 1 view .LVU363
 293:Brizachord.cpp ****         v = (v - 0.1f / 3.3f) / (1.f - 0.1f / 3.3f);
 1511              		.loc 1 293 16 is_stmt 0 view .LVU364
 1512 012a 30EE670A 		vsub.f32	s0, s0, s15
 1513              	.LVL118:
 294:Brizachord.cpp ****         instrument_state.bpm = fmap(1.f - v, 50.f, 140.f);
 1514              		.loc 1 294 9 is_stmt 1 view .LVU365
 1515              	.LBB3192:
 1516              	.LBI3192:
 1517              		.file 15 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisySP//Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP//Source/Utility/dsp.h **** #include <random>
  17:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP//Source/Utility/dsp.h **** {
  31:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 160


  47:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisySP//Source/Utility/dsp.h **** }
  50:../../DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../../DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:../../DaisySP//Source/Utility/dsp.h **** }
  68:../../DaisySP//Source/Utility/dsp.h **** 
  69:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  72:../../DaisySP//Source/Utility/dsp.h **** */
  73:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../../DaisySP//Source/Utility/dsp.h **** {
  75:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  76:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  78:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  82:../../DaisySP//Source/Utility/dsp.h ****     return f;
  83:../../DaisySP//Source/Utility/dsp.h **** }
  84:../../DaisySP//Source/Utility/dsp.h **** 
  85:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../../DaisySP//Source/Utility/dsp.h **** {
  87:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  88:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  90:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  94:../../DaisySP//Source/Utility/dsp.h ****     return f;
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../../DaisySP//Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../../DaisySP//Source/Utility/dsp.h ****  */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../../DaisySP//Source/Utility/dsp.h **** }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 161


 104:../../DaisySP//Source/Utility/dsp.h **** 
 105:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../../DaisySP//Source/Utility/dsp.h **** */
 108:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../../DaisySP//Source/Utility/dsp.h **** {
 110:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../../DaisySP//Source/Utility/dsp.h **** }
 112:../../DaisySP//Source/Utility/dsp.h **** 
 113:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../../DaisySP//Source/Utility/dsp.h **** */
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 119:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 120:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 123:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 125:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 127:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 129:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 130:../../DaisySP//Source/Utility/dsp.h **** }
 131:../../DaisySP//Source/Utility/dsp.h **** 
 132:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../../DaisySP//Source/Utility/dsp.h **** {
 134:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../../DaisySP//Source/Utility/dsp.h **** }
 136:../../DaisySP//Source/Utility/dsp.h **** 
 137:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../../DaisySP//Source/Utility/dsp.h **** */
 139:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 140:../../DaisySP//Source/Utility/dsp.h **** {
 141:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:../../DaisySP//Source/Utility/dsp.h **** }
 143:../../DaisySP//Source/Utility/dsp.h **** 
 144:../../DaisySP//Source/Utility/dsp.h **** 
 145:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 146:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 148:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 149:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:../../DaisySP//Source/Utility/dsp.h **** */
 151:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 152:../../DaisySP//Source/Utility/dsp.h **** {
 153:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 154:../../DaisySP//Source/Utility/dsp.h **** }
 155:../../DaisySP//Source/Utility/dsp.h **** 
 156:../../DaisySP//Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 157:../../DaisySP//Source/Utility/dsp.h **** enum class Mapping
 158:../../DaisySP//Source/Utility/dsp.h **** {
 159:../../DaisySP//Source/Utility/dsp.h ****     LINEAR,
 160:../../DaisySP//Source/Utility/dsp.h ****     EXP,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 162


 161:../../DaisySP//Source/Utility/dsp.h ****     LOG,
 162:../../DaisySP//Source/Utility/dsp.h **** };
 163:../../DaisySP//Source/Utility/dsp.h **** 
 164:../../DaisySP//Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve.
 165:../../DaisySP//Source/Utility/dsp.h ****  *
 166:../../DaisySP//Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 167:../../DaisySP//Source/Utility/dsp.h ****  *  \param min the new minimum value
 168:../../DaisySP//Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 169:../../DaisySP//Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 170:../../DaisySP//Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 171:../../DaisySP//Source/Utility/dsp.h ****  *
 172:../../DaisySP//Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 173:../../DaisySP//Source/Utility/dsp.h ****  *
 174:../../DaisySP//Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 175:../../DaisySP//Source/Utility/dsp.h **** */
 176:../../DaisySP//Source/Utility/dsp.h **** inline float
 177:../../DaisySP//Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 1518              		.loc 15 177 1 view .LVU366
 1519              	.LBE3192:
 178:../../DaisySP//Source/Utility/dsp.h **** {
 179:../../DaisySP//Source/Utility/dsp.h ****     switch(curve)
 1520              		.loc 15 179 5 view .LVU367
 1521              	.LBB3207:
 1522              	.LBB3193:
 180:../../DaisySP//Source/Utility/dsp.h ****     {
 181:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::EXP:
 182:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 183:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LOG:
 184:../../DaisySP//Source/Utility/dsp.h ****         {
 185:../../DaisySP//Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 186:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 187:../../DaisySP//Source/Utility/dsp.h ****         }
 188:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LINEAR:
 1523              		.loc 15 188 9 view .LVU368
 189:../../DaisySP//Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 1524              		.loc 15 189 9 view .LVU369
 1525              		.loc 15 189 18 view .LVU370
 1526              	.LBE3193:
 1527              	.LBE3207:
 293:Brizachord.cpp ****         v = (v - 0.1f / 3.3f) / (1.f - 0.1f / 3.3f);
 1528              		.loc 1 293 11 is_stmt 0 view .LVU371
 1529 012e 9FED115A 		vldr.32	s10, .L80+16
 1530              	.LBB3208:
 1531              	.LBB3203:
 1532              		.loc 15 189 31 view .LVU372
 1533 0132 DFED116A 		vldr.32	s13, .L80+20
 1534 0136 DFED115A 		vldr.32	s11, .L80+24
 1535              	.LBE3203:
 1536              	.LBE3208:
 293:Brizachord.cpp ****         v = (v - 0.1f / 3.3f) / (1.f - 0.1f / 3.3f);
 1537              		.loc 1 293 11 view .LVU373
 1538 013a C0EE057A 		vdiv.f32	s15, s0, s10
 1539              	.LVL119:
 1540              	.LBB3209:
 1541              	.LBB3204:
 1542              	.LBB3194:
 1543              	.LBB3195:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 163


 1544              	.LBB3196:
  55:../../DaisySP//Source/Utility/dsp.h **** #else
 1545              		.loc 15 55 5 view .LVU374
 1546 013e 9FED106A 		vldr.32	s12, .L80+28
 1547              	.LBE3196:
 1548              	.LBE3195:
 1549              	.LBE3194:
 1550              	.LBE3204:
 1551              	.LBE3209:
 294:Brizachord.cpp ****         instrument_state.bpm = fmap(1.f - v, 50.f, 140.f);
 1552              		.loc 1 294 36 view .LVU375
 1553 0142 37EE677A 		vsub.f32	s14, s14, s15
 1554              	.LBB3210:
 1555              	.LBB3205:
 1556              		.loc 15 189 31 view .LVU376
 1557 0146 F0EE667A 		vmov.f32	s15, s13
 1558              	.LVL120:
 1559              		.loc 15 189 31 view .LVU377
 1560 014a E7EE257A 		vfma.f32	s15, s14, s11
 1561              	.LVL121:
 1562              	.LBB3201:
 1563              	.LBI3194:
  64:../../DaisySP//Source/Utility/dsp.h **** {
 1564              		.loc 15 64 14 is_stmt 1 view .LVU378
 1565              	.LBE3201:
 1566              	.LBE3205:
 1567              	.LBE3210:
  66:../../DaisySP//Source/Utility/dsp.h **** }
 1568              		.loc 15 66 5 view .LVU379
 1569              	.LBB3211:
 1570              	.LBB3206:
 1571              	.LBB3202:
 1572              	.LBB3198:
 1573              	.LBI3198:
  40:../../DaisySP//Source/Utility/dsp.h **** {
 1574              		.loc 15 40 14 view .LVU380
 1575              	.LBB3199:
  42:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1576              		.loc 15 42 5 view .LVU381
  44:../../DaisySP//Source/Utility/dsp.h **** #else
 1577              		.loc 15 44 5 view .LVU382
 1578              		.syntax unified
 1579              	@ 44 "../../DaisySP//Source/Utility/dsp.h" 1
 1580 014e C7FEA67A 		vmaxnm.f32 s15, s15, s13
 1581              	@ 0 "" 2
 1582              	.LVL122:
  48:../../DaisySP//Source/Utility/dsp.h **** }
 1583              		.loc 15 48 5 view .LVU383
  48:../../DaisySP//Source/Utility/dsp.h **** }
 1584              		.loc 15 48 5 is_stmt 0 view .LVU384
 1585              		.thumb
 1586              		.syntax unified
 1587              	.LBE3199:
 1588              	.LBE3198:
 1589              	.LBB3200:
 1590              	.LBI3195:
  51:../../DaisySP//Source/Utility/dsp.h **** {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 164


 1591              		.loc 15 51 14 is_stmt 1 view .LVU385
 1592              	.LBB3197:
  53:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1593              		.loc 15 53 5 view .LVU386
  55:../../DaisySP//Source/Utility/dsp.h **** #else
 1594              		.loc 15 55 5 view .LVU387
 1595              		.syntax unified
 1596              	@ 55 "../../DaisySP//Source/Utility/dsp.h" 1
 1597 0152 C7FEC67A 		vminnm.f32 s15, s15, s12
 1598              	@ 0 "" 2
 1599              	.LVL123:
  59:../../DaisySP//Source/Utility/dsp.h **** }
 1600              		.loc 15 59 5 view .LVU388
  59:../../DaisySP//Source/Utility/dsp.h **** }
 1601              		.loc 15 59 5 is_stmt 0 view .LVU389
 1602              		.thumb
 1603              		.syntax unified
 1604              	.LBE3197:
 1605              	.LBE3200:
 1606              	.LBE3202:
 1607              	.LBE3206:
 1608              	.LBE3211:
 294:Brizachord.cpp ****         instrument_state.bpm = fmap(1.f - v, 50.f, 140.f);
 1609              		.loc 1 294 30 view .LVU390
 1610 0156 FCEEE77A 		vcvt.u32.f32	s15, s15
 1611 015a 17EE903A 		vmov	r3, s15	@ int
 1612 015e 84F8BD30 		strb	r3, [r4, #189]
 1613              		.loc 1 296 1 view .LVU391
 1614 0162 38BD     		pop	{r3, r4, r5, pc}
 1615              	.LVL124:
 1616              	.L81:
 1617              		.loc 1 296 1 view .LVU392
 1618              		.align	2
 1619              	.L80:
 1620 0164 103E783D 		.word	1031290384
 1621 0168 1F7C703F 		.word	1064336415
 1622 016c 103EF83C 		.word	1022901776
 1623 0170 3EF8603F 		.word	1063319614
 1624 0174 103E783F 		.word	1064844816
 1625 0178 00004842 		.word	1112014848
 1626 017c 0000B442 		.word	1119092736
 1627 0180 00000C43 		.word	1124859904
 1628              		.cfi_endproc
 1629              	.LFE5617:
 1631              		.section	.rodata._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1
 1632              		.align	2
 1633              	.LC0:
 1634 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 1634      6F723A3A 
 1634      5F4D5F72 
 1634      65616C6C 
 1634      6F635F69 
 1635              		.section	.text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_E
 1636              		.align	1
 1637              		.p2align 2,,3
 1638              		.weak	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 1639              		.syntax unified
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 165


 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu fpv5-d16
 1644              	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:
 1645              	.LVL125:
 1646              	.LFB6423:
 1647              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 166


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 167


 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 168


 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 169


 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 170


 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 171


 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 172


 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 1648              		.loc 16 426 7 is_stmt 1 view -0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		.loc 16 426 7 is_stmt 0 view .LVU394
 1653 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1654              		.cfi_def_cfa_offset 40
 1655              		.cfi_offset 3, -40
 1656              		.cfi_offset 4, -36
 1657              		.cfi_offset 5, -32
 1658              		.cfi_offset 6, -28
 1659              		.cfi_offset 7, -24
 1660              		.cfi_offset 8, -20
 1661              		.cfi_offset 9, -16
 1662              		.cfi_offset 10, -12
 1663              		.cfi_offset 11, -8
 1664              		.cfi_offset 14, -4
 1665 0004 D0E90089 		ldrd	r8, r9, [r0]
 1666              		.loc 16 426 7 view .LVU395
 1667 0008 0F46     		mov	r7, r1
 1668              	.LVL126:
 1669              	.LBB3249:
 1670              	.LBI3249:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 173


 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 174


 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 175


1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 176


1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 177


1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 178


1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 179


1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 180


1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 181


1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 182


1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 183


1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 184


1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 185


1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 186


1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 187


1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 1671              		.loc 14 1756 7 is_stmt 1 view .LVU396
 1672              	.LBB3250:
 1673              	.LBB3251:
 1674              	.LBI3251:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1675              		.loc 14 918 7 view .LVU397
 1676              	.LBE3251:
 1677              	.LBE3250:
 1678              	.LBE3249:
 1679              		.loc 16 426 7 is_stmt 0 view .LVU398
 1680 000a 9246     		mov	r10, r2
 1681              	.LBB3256:
 1682              	.LBB3254:
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 1683              		.loc 14 1758 2 view .LVU399
 1684 000c 6FF06041 		mvn	r1, #-536870912
 1685              	.LBB3253:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 188


 1686              	.LBB3252:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1687              		.loc 14 919 50 view .LVU400
 1688 0010 A9EB0802 		sub	r2, r9, r8
 1689              	.LVL127:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1690              		.loc 14 919 50 view .LVU401
 1691              	.LBE3252:
 1692              	.LBE3253:
 1693              		.loc 14 1758 2 view .LVU402
 1694 0014 B1EBA20F 		cmp	r1, r2, asr #2
 1695 0018 54D0     		beq	.L103
 1696 001a 9310     		asrs	r3, r2, #2
 1697 001c 0646     		mov	r6, r0
 1698              	.LBE3254:
 1699              	.LBE3256:
 1700              	.LBB3257:
 1701              	.LBB3258:
 1702              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 189


  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 190


  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 191


 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 192


 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 193


 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 194


 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 195


 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 196


 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 197


 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 198


 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 199


 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 200


 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 201


 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 202


 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 203


 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 204


 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 205


 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 206


1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 207


1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 208


1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 209


1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 1703              		.loc 17 1205 27 view .LVU403
 1704 001e A7EB0805 		sub	r5, r7, r8
 1705 0022 012B     		cmp	r3, #1
 1706 0024 1C46     		mov	r4, r3
 1707 0026 38BF     		it	cc
 1708 0028 0124     		movcc	r4, #1
 1709 002a 1C19     		adds	r4, r3, r4
 1710 002c 48D2     		bcs	.L85
 1711              	.LVL128:
 1712              		.loc 17 1205 27 view .LVU404
 1713              	.LBE3258:
 1714              	.LBE3257:
 1715              	.LBB3260:
 1716              	.LBI3260:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1717              		.loc 14 811 7 is_stmt 1 view .LVU405
 1718              	.LBB3261:
 1719              	.LBI3261:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1720              		.loc 17 978 7 view .LVU406
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1721              		.loc 17 978 7 is_stmt 0 view .LVU407
 1722              	.LBE3261:
 1723              	.LBE3260:
 1724              	.LBB3263:
 1725              	.LBI3257:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1726              		.loc 17 1202 5 is_stmt 1 view .LVU408
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1727              		.loc 17 1202 5 is_stmt 0 view .LVU409
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 210


 1728              	.LBE3263:
 1729              	.LBB3264:
 1730              	.LBI3264:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1731              		.loc 14 343 7 is_stmt 1 view .LVU410
 1732              	.LBB3265:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1733              		.loc 14 346 18 is_stmt 0 view .LVU411
 1734 002e 002C     		cmp	r4, #0
 1735 0030 3CD1     		bne	.L104
 1736 0032 A346     		mov	fp, r4
 1737              	.LVL129:
 1738              	.L94:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1739              		.loc 14 346 18 view .LVU412
 1740              	.LBE3265:
 1741              	.LBE3264:
 1742              	.LBB3273:
 1743              	.LBI3273:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 1744              		.loc 6 507 2 is_stmt 1 view .LVU413
 1745              	.LBB3274:
 1746              	.LBI3274:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 1747              		.loc 7 148 2 view .LVU414
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 1748              		.loc 7 148 2 is_stmt 0 view .LVU415
 1749              	.LBE3274:
 1750              	.LBE3273:
 1751              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 211


  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 212


  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 213


 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 1752              		.loc 18 175 3 is_stmt 1 view .LVU416
 1753              	.LBB3279:
 1754              	.LBB3277:
 1755              	.LBB3275:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1756              		.loc 7 150 4 is_stmt 0 view .LVU417
 1757 0034 DAF80030 		ldr	r3, [r10]
 1758              	.LBE3275:
 1759              	.LBE3277:
 1760              	.LBE3279:
 1761              	.LBB3280:
 1762              	.LBB3281:
 1763              	.LBB3282:
 1764              	.LBB3283:
 1765              	.LBB3284:
 1766              	.LBB3285:
 1767              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 214


   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 215


  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 216


 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 217


 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 218


 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 219


 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 220


 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 221


 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 222


 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 223


 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 224


 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 225


 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 226


 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 227


 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 228


 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 229


 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 230


 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 231


 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1768              		.loc 19 992 7 view .LVU418
 1769 0038 002D     		cmp	r5, #0
 1770              	.LBE3285:
 1771              	.LBE3284:
 1772              	.LBE3283:
 1773              	.LBE3282:
 1774              	.LBE3281:
 1775              	.LBE3280:
 1776              	.LBB3301:
 1777              	.LBB3278:
 1778              	.LBB3276:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1779              		.loc 7 150 4 view .LVU419
 1780 003a 4BF80530 		str	r3, [fp, r5]
 1781              	.LVL130:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1782              		.loc 7 150 4 view .LVU420
 1783              	.LBE3276:
 1784              	.LBE3278:
 1785              	.LBE3301:
 1786              	.LBB3302:
 1787              	.LBI3280:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1788              		.loc 14 465 7 is_stmt 1 view .LVU421
 1789              	.LBB3298:
 1790              	.LBB3295:
 1791              	.LBI3282:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1792              		.loc 14 453 7 view .LVU422
 1793              	.LBB3292:
 1794              	.LBI3283:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 232


1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 1795              		.loc 19 1022 5 view .LVU423
 1796              	.LBB3289:
 1797              	.LBI3284:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1798              		.loc 19 988 5 view .LVU424
 1799              	.LBB3286:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1800              		.loc 19 992 7 is_stmt 0 view .LVU425
 1801 003e 24DC     		bgt	.L105
 1802              	.LVL131:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1803              		.loc 19 992 7 view .LVU426
 1804              	.LBE3286:
 1805              	.LBE3289:
 1806              	.LBE3292:
 1807              	.LBE3295:
 1808              	.LBE3298:
 1809              	.LBE3302:
 1810              	.LBB3303:
 1811              	.LBB3304:
 1812              	.LBB3305:
 1813              	.LBB3306:
 1814              	.LBB3307:
 1815              	.LBB3308:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1816              		.loc 19 991 34 view .LVU427
 1817 0040 A9EB0709 		sub	r9, r9, r7
 1818              	.LVL132:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1819              		.loc 19 991 34 view .LVU428
 1820              	.LBE3308:
 1821              	.LBE3307:
 1822              	.LBE3306:
 1823              	.LBE3305:
 1824              	.LBE3304:
 1825              	.LBE3303:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 233


 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 1826              		.loc 16 464 8 view .LVU429
 1827 0044 0435     		adds	r5, r5, #4
 1828              	.LVL133:
 1829              	.LBB3344:
 1830              	.LBB3337:
 1831              	.LBB3330:
 1832              	.LBB3323:
 1833              	.LBB3316:
 1834              	.LBB3309:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1835              		.loc 19 992 7 view .LVU430
 1836 0046 B9F1000F 		cmp	r9, #0
 1837              	.LBE3309:
 1838              	.LBE3316:
 1839              	.LBE3323:
 1840              	.LBE3330:
 1841              	.LBE3337:
 1842              	.LBE3344:
 1843              		.loc 16 464 8 view .LVU431
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 234


 1844 004a 5D44     		add	r5, r5, fp
 1845              	.LVL134:
 1846              	.LBB3345:
 1847              	.LBI3303:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1848              		.loc 14 465 7 is_stmt 1 view .LVU432
 1849              	.LBB3338:
 1850              	.LBB3331:
 1851              	.LBI3305:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1852              		.loc 14 453 7 view .LVU433
 1853              	.LBB3324:
 1854              	.LBI3306:
 1855              		.loc 19 1022 5 view .LVU434
 1856              	.LBB3317:
 1857              	.LBI3307:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1858              		.loc 19 988 5 view .LVU435
 1859              	.LBB3310:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1860              		.loc 19 992 7 is_stmt 0 view .LVU436
 1861 004c 13DC     		bgt	.L90
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1862              		.loc 19 994 25 view .LVU437
 1863 004e 4D44     		add	r5, r5, r9
 1864              	.LVL135:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1865              		.loc 19 994 25 view .LVU438
 1866              	.LBE3310:
 1867              	.LBE3317:
 1868              	.LBE3324:
 1869              	.LBE3331:
 1870              	.LBE3338:
 1871              	.LBE3345:
 1872              	.LBB3346:
 1873              	.LBI3346:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1874              		.loc 14 350 7 is_stmt 1 view .LVU439
 1875              	.LBB3347:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1876              		.loc 14 353 2 is_stmt 0 view .LVU440
 1877 0050 B8F1000F 		cmp	r8, #0
 1878 0054 04D1     		bne	.L106
 1879              	.LVL136:
 1880              	.L93:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1881              		.loc 14 353 2 view .LVU441
 1882              	.LBE3347:
 1883              	.LBE3346:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 235


 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1884              		.loc 16 504 39 view .LVU442
 1885 0056 B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1886              		.loc 16 503 31 view .LVU443
 1887 0058 C6E900B5 		strd	fp, r5, [r6]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1888              		.loc 16 505 5 view .LVU444
 1889 005c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1890              	.LVL137:
 1891              	.L106:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 1892              		.loc 16 501 39 view .LVU445
 1893 0060 B168     		ldr	r1, [r6, #8]
 1894 0062 A1EB0801 		sub	r1, r1, r8
 1895              	.L95:
 1896              	.LVL138:
 1897              	.LBB3354:
 1898              	.LBB3352:
 1899              	.LBB3348:
 1900              	.LBI3348:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1901              		.loc 6 491 7 is_stmt 1 view .LVU446
 1902              	.LBB3349:
 1903              	.LBB3350:
 1904              	.LBI3350:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 236


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1905              		.loc 7 120 7 view .LVU447
 1906              	.LBB3351:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1907              		.loc 7 133 19 is_stmt 0 view .LVU448
 1908 0066 4046     		mov	r0, r8
 1909 0068 FFF7FEFF 		bl	_ZdlPvj
 1910              	.LVL139:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1911              		.loc 7 133 19 view .LVU449
 1912              	.LBE3351:
 1913              	.LBE3350:
 1914              	.LBE3349:
 1915              	.LBE3348:
 1916              	.LBE3352:
 1917              	.LBE3354:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1918              		.loc 16 504 39 view .LVU450
 1919 006c B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1920              		.loc 16 503 31 view .LVU451
 1921 006e C6E900B5 		strd	fp, r5, [r6]
 1922              		.loc 16 505 5 view .LVU452
 1923 0072 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1924              	.LVL140:
 1925              	.L90:
 1926              	.LBB3355:
 1927              	.LBB3339:
 1928              	.LBB3332:
 1929              	.LBB3325:
 1930              	.LBB3318:
 1931              	.LBB3311:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1932              		.loc 19 993 19 view .LVU453
 1933 0076 2846     		mov	r0, r5
 1934 0078 3946     		mov	r1, r7
 1935 007a 4A46     		mov	r2, r9
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1936              		.loc 19 994 25 view .LVU454
 1937 007c 4D44     		add	r5, r5, r9
 1938              	.LVL141:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1939              		.loc 19 993 19 view .LVU455
 1940 007e FFF7FEFF 		bl	memcpy
 1941              	.LVL142:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1942              		.loc 19 993 19 view .LVU456
 1943              	.LBE3311:
 1944              	.LBE3318:
 1945              	.LBE3325:
 1946              	.LBE3332:
 1947              	.LBE3339:
 1948              	.LBE3355:
 1949              	.LBB3356:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1950              		.loc 14 350 7 is_stmt 1 view .LVU457
 1951              	.LBB3353:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 237


 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1952              		.loc 14 353 2 is_stmt 0 view .LVU458
 1953 0082 B8F1000F 		cmp	r8, #0
 1954 0086 E6D0     		beq	.L93
 1955 0088 EAE7     		b	.L106
 1956              	.LVL143:
 1957              	.L105:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1958              		.loc 14 353 2 view .LVU459
 1959              	.LBE3353:
 1960              	.LBE3356:
 1961              	.LBB3357:
 1962              	.LBB3340:
 1963              	.LBB3333:
 1964              	.LBB3326:
 1965              	.LBB3319:
 1966              	.LBB3312:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1967              		.loc 19 991 34 view .LVU460
 1968 008a A9EB0709 		sub	r9, r9, r7
 1969              	.LVL144:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1970              		.loc 19 991 34 view .LVU461
 1971              	.LBE3312:
 1972              	.LBE3319:
 1973              	.LBE3326:
 1974              	.LBE3333:
 1975              	.LBE3340:
 1976              	.LBE3357:
 1977              	.LBB3358:
 1978              	.LBB3299:
 1979              	.LBB3296:
 1980              	.LBB3293:
 1981              	.LBB3290:
 1982              	.LBB3287:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1983              		.loc 19 993 19 view .LVU462
 1984 008e 2A46     		mov	r2, r5
 1985 0090 4146     		mov	r1, r8
 1986 0092 5846     		mov	r0, fp
 1987              	.LBE3287:
 1988              	.LBE3290:
 1989              	.LBE3293:
 1990              	.LBE3296:
 1991              	.LBE3299:
 1992              	.LBE3358:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 1993              		.loc 16 464 8 view .LVU463
 1994 0094 0435     		adds	r5, r5, #4
 1995              	.LVL145:
 1996              	.LBB3359:
 1997              	.LBB3300:
 1998              	.LBB3297:
 1999              	.LBB3294:
 2000              	.LBB3291:
 2001              	.LBB3288:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 238


 2002              		.loc 19 993 19 view .LVU464
 2003 0096 FFF7FEFF 		bl	memmove
 2004              	.LVL146:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 2005              		.loc 19 993 19 view .LVU465
 2006              	.LBE3288:
 2007              	.LBE3291:
 2008              	.LBE3294:
 2009              	.LBE3297:
 2010              	.LBE3300:
 2011              	.LBE3359:
 2012              	.LBB3360:
 2013              	.LBB3341:
 2014              	.LBB3334:
 2015              	.LBB3327:
 2016              	.LBB3320:
 2017              	.LBB3313:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2018              		.loc 19 992 7 view .LVU466
 2019 009a B9F1000F 		cmp	r9, #0
 2020              	.LBE3313:
 2021              	.LBE3320:
 2022              	.LBE3327:
 2023              	.LBE3334:
 2024              	.LBE3341:
 2025              	.LBE3360:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 2026              		.loc 16 464 8 view .LVU467
 2027 009e 5D44     		add	r5, r5, fp
 2028              	.LVL147:
 2029              	.LBB3361:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 2030              		.loc 14 465 7 is_stmt 1 view .LVU468
 2031              	.LBB3342:
 2032              	.LBB3335:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 2033              		.loc 14 453 7 view .LVU469
 2034              	.LBB3328:
 2035              		.loc 19 1022 5 view .LVU470
 2036              	.LBB3321:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 2037              		.loc 19 988 5 view .LVU471
 2038              	.LBB3314:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2039              		.loc 19 992 7 is_stmt 0 view .LVU472
 2040 00a0 E9DC     		bgt	.L90
 2041              	.LBE3314:
 2042              	.LBE3321:
 2043              	.LBE3328:
 2044              	.LBE3335:
 2045              	.LBE3342:
 2046              	.LBE3361:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 2047              		.loc 16 501 39 view .LVU473
 2048 00a2 B168     		ldr	r1, [r6, #8]
 2049              	.LBB3362:
 2050              	.LBB3343:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 239


 2051              	.LBB3336:
 2052              	.LBB3329:
 2053              	.LBB3322:
 2054              	.LBB3315:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 2055              		.loc 19 994 25 view .LVU474
 2056 00a4 4D44     		add	r5, r5, r9
 2057              	.LVL148:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 2058              		.loc 19 994 25 view .LVU475
 2059              	.LBE3315:
 2060              	.LBE3322:
 2061              	.LBE3329:
 2062              	.LBE3336:
 2063              	.LBE3343:
 2064              	.LBE3362:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 2065              		.loc 16 501 39 view .LVU476
 2066 00a6 A1EB0801 		sub	r1, r1, r8
 2067              	.LVL149:
 2068              	.LBB3363:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2069              		.loc 14 350 7 is_stmt 1 view .LVU477
 2070 00aa DCE7     		b	.L95
 2071              	.LVL150:
 2072              	.L104:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2073              		.loc 14 350 7 is_stmt 0 view .LVU478
 2074              	.LBE3363:
 2075              	.LBB3364:
 2076              	.LBB3271:
 2077              	.LBB3266:
 2078              	.LBB3267:
 2079              	.LBB3268:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2080              		.loc 7 115 41 view .LVU479
 2081 00ac 8C42     		cmp	r4, r1
 2082 00ae 28BF     		it	cs
 2083 00b0 0C46     		movcs	r4, r1
 2084              	.LVL151:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2085              		.loc 7 115 41 view .LVU480
 2086 00b2 A400     		lsls	r4, r4, #2
 2087              	.LVL152:
 2088              	.L87:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2089              		.loc 7 115 41 view .LVU481
 2090              	.LBE3268:
 2091              	.LBE3267:
 2092              	.LBI3266:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2093              		.loc 6 459 7 is_stmt 1 view .LVU482
 2094              	.LBB3270:
 2095              	.LBI3267:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2096              		.loc 7 103 7 view .LVU483
 2097              	.LBB3269:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 240


 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2098              		.loc 7 115 41 is_stmt 0 view .LVU484
 2099 00b4 2046     		mov	r0, r4
 2100              	.LVL153:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2101              		.loc 7 115 41 view .LVU485
 2102 00b6 FFF7FEFF 		bl	_Znwj
 2103              	.LVL154:
 2104 00ba 8346     		mov	fp, r0
 2105              	.LVL155:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2106              		.loc 7 115 41 view .LVU486
 2107              	.LBE3269:
 2108              	.LBE3270:
 2109              	.LBE3266:
 2110              	.LBE3271:
 2111              	.LBE3364:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 2112              		.loc 16 504 53 view .LVU487
 2113 00bc 0444     		add	r4, r4, r0
 2114              	.LBB3365:
 2115              	.LBB3272:
 2116 00be B9E7     		b	.L94
 2117              	.LVL156:
 2118              	.L85:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 2119              		.loc 16 504 53 view .LVU488
 2120              	.LBE3272:
 2121              	.LBE3365:
 2122              	.LBB3366:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2123              		.loc 14 811 7 is_stmt 1 view .LVU489
 2124              	.LBB3262:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 2125              		.loc 17 978 7 view .LVU490
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 2126              		.loc 17 978 7 is_stmt 0 view .LVU491
 2127              	.LBE3262:
 2128              	.LBE3366:
 2129              	.LBB3367:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 2130              		.loc 17 1202 5 is_stmt 1 view .LVU492
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 2131              		.loc 17 1202 5 is_stmt 0 view .LVU493
 2132              	.LBE3367:
 2133              	.LBB3368:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2134              		.loc 14 343 7 is_stmt 1 view .LVU494
 2135              	.LBE3368:
 2136              	.LBB3369:
 2137              	.LBB3259:
 2138              		.loc 17 1205 27 is_stmt 0 view .LVU495
 2139 00c0 024C     		ldr	r4, .L107
 2140 00c2 F7E7     		b	.L87
 2141              	.LVL157:
 2142              	.L103:
 2143              		.loc 17 1205 27 view .LVU496
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 241


 2144              	.LBE3259:
 2145              	.LBE3369:
 2146              	.LBB3370:
 2147              	.LBB3255:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 2148              		.loc 14 1759 24 view .LVU497
 2149 00c4 0248     		ldr	r0, .L107+4
 2150              	.LVL158:
 2151              		.loc 14 1759 24 view .LVU498
 2152 00c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 2153              	.LVL159:
 2154              	.L108:
 2155 00ca 00BF     		.align	2
 2156              	.L107:
 2157 00cc FCFFFF7F 		.word	2147483644
 2158 00d0 00000000 		.word	.LC0
 2159              	.LBE3255:
 2160              	.LBE3370:
 2161              		.cfi_endproc
 2162              	.LFE6423:
 2164              		.section	.text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_
 2165              		.align	1
 2166              		.p2align 2,,3
 2167              		.weak	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_E
 2168              		.syntax unified
 2169              		.thumb
 2170              		.thumb_func
 2171              		.fpu fpv5-d16
 2173              	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__d
 2174              	.LVL160:
 2175              	.LFB6567:
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2176              		.loc 3 1567 5 is_stmt 1 view -0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 0
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2180              		.loc 3 1567 5 is_stmt 0 view .LVU500
 2181 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2182              		.cfi_def_cfa_offset 32
 2183              		.cfi_offset 4, -32
 2184              		.cfi_offset 5, -28
 2185              		.cfi_offset 6, -24
 2186              		.cfi_offset 7, -20
 2187              		.cfi_offset 8, -16
 2188              		.cfi_offset 9, -12
 2189              		.cfi_offset 10, -8
 2190              		.cfi_offset 14, -4
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2191              		.loc 3 1567 5 view .LVU501
 2192 0004 9946     		mov	r9, r3
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 2193              		.loc 3 1573 20 view .LVU502
 2194 0006 0368     		ldr	r3, [r0]
 2195              	.LVL161:
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 2196              		.loc 3 1573 20 view .LVU503
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 242


 2197 0008 53F82160 		ldr	r6, [r3, r1, lsl #2]
 2198              	.LVL162:
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 2199              		.loc 3 1574 7 view .LVU504
 2200 000c 06B3     		cbz	r6, .L109
 2201              	.LBB3411:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 2202              		.loc 3 1577 25 view .LVU505
 2203 000e 3568     		ldr	r5, [r6]
 2204              	.LVL163:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 2205              		.loc 3 1577 25 view .LVU506
 2206 0010 0746     		mov	r7, r0
 2207 0012 8846     		mov	r8, r1
 2208 0014 9246     		mov	r10, r2
 2209              	.LBB3412:
 2210              	.LBB3413:
 2211              	.LBB3414:
 2212              	.LBB3415:
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 2213              		.loc 4 1787 28 view .LVU507
 2214 0016 2C6A     		ldr	r4, [r5, #32]
 2215 0018 0BE0     		b	.L112
 2216              	.LVL164:
 2217              	.L111:
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 2218              		.loc 4 1787 28 view .LVU508
 2219              	.LBE3415:
 2220              	.LBE3414:
 2221              	.LBE3413:
 2222              	.LBE3412:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 2223              		.loc 3 1583 14 view .LVU509
 2224 001a 2C68     		ldr	r4, [r5]
 2225              	.LVL165:
 2226              	.LBB3425:
 2227              	.LBI3425:
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 2228              		.loc 3 677 7 is_stmt 1 view .LVU510
 2229              	.LBB3426:
 2230              	.LBB3427:
 2231              	.LBI3427:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
 2232              		.loc 4 1388 7 view .LVU511
 2233 001c 2E46     		mov	r6, r5
 2234              	.LBE3427:
 2235              	.LBE3426:
 2236              	.LBE3425:
 2237 001e 2546     		mov	r5, r4
 2238              	.LVL166:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 2239              		.loc 3 1583 21 is_stmt 0 view .LVU512
 2240 0020 CCB1     		cbz	r4, .L113
 2241              	.LBB3433:
 2242              	.LBB3432:
 2243              	.LBB3431:
 2244              	.LBB3428:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 243


1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2245              		.loc 4 1391 29 view .LVU513
 2246 0022 246A     		ldr	r4, [r4, #32]
 2247              	.LVL167:
 2248              	.LBB3429:
 2249              	.LBI3429:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 2250              		.loc 4 431 5 is_stmt 1 view .LVU514
 2251              	.LBB3430:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2252              		.loc 4 433 7 view .LVU515
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2253              		.loc 4 433 22 is_stmt 0 view .LVU516
 2254 0024 7B68     		ldr	r3, [r7, #4]
 2255 0026 B4FBF3FC 		udiv	ip, r4, r3
 2256 002a 03FB1C4C 		mls	ip, r3, ip, r4
 2257              	.LBE3430:
 2258              	.LBE3429:
 2259              	.LBE3428:
 2260              	.LBE3431:
 2261              	.LBE3432:
 2262              	.LBE3433:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 2263              		.loc 3 1583 21 view .LVU517
 2264 002e E045     		cmp	r8, ip
 2265 0030 15D1     		bne	.L125
 2266              	.LVL168:
 2267              	.L112:
 2268              	.LBB3434:
 2269              	.LBI3412:
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2270              		.loc 4 1798 5 is_stmt 1 view .LVU518
 2271              	.LBB3424:
 2272              	.LBB3416:
 2273              	.LBI3414:
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
 2274              		.loc 4 1786 8 view .LVU519
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
 2275              		.loc 4 1786 8 is_stmt 0 view .LVU520
 2276              	.LBE3416:
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 2277              		.loc 4 1804 2 view .LVU521
 2278 0032 4C45     		cmp	r4, r9
 2279 0034 F1D1     		bne	.L111
 2280              	.LVL169:
 2281              	.LBB3417:
 2282              	.LBI3417:
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2283              		.loc 4 1798 5 is_stmt 1 view .LVU522
 2284              	.LBB3418:
 2285              	.LBI3418:
 2286              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_functi
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 244


   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 245


  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 246


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 247


 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 248


 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 249


 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 250


 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 2287              		.loc 20 355 7 view .LVU523
 2288 0036 DAF80420 		ldr	r2, [r10, #4]
 2289              	.LBB3419:
 2290              	.LBB3420:
 2291              	.LBI3420:
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 251


 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 252


 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 253


 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 254


 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 255


 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 256


 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 257


1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 258


1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 259


1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 260


1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 261


1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 262


1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 263


1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 264


1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 265


1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 266


1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 267


1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 268


1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 269


1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 270


1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 271


1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 272


1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 273


1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 274


2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 275


2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 276


2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 277


2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 278


2241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 279


2298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 280


2355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 281


2412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 282


2469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 283


2526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 284


2583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 285


2640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 286


2697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 287


2754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 288


2811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 289


2868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 290


2925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 291


2982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 292


3039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 293


3096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 294


3153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 295


3210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 296


3267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 297


3324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 298


3381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 299


3438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 300


3495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 301


3552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 302


3609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 303


3666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 304


3723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 305


3780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 306


3837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 307


3894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 308


3951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 309


4008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 310


4065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 311


4122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 312


4179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 313


4236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 314


4293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 315


4350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 316


4407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 317


4464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 318


4521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 319


4578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 320


4635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 321


4692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 322


4749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 323


4806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 324


4863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 325


4920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 326


4977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 327


5034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 328


5091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 329


5148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 330


5205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 331


5262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 332


5319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 333


5376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 334


5433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 335


5490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 336


5547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 337


5604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 338


5661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 339


5718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 340


5775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 341


5832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 342


5889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 343


5946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 344


6003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 345


6060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 346


6117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
 2292              		.loc 5 6171 5 view .LVU524
 2293              	.LVL170:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 347


 2294              	.LBB3421:
6172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
 2295              		.loc 5 6174 8 is_stmt 0 view .LVU525
 2296 003a AB68     		ldr	r3, [r5, #8]
 2297 003c 9A42     		cmp	r2, r3
 2298 003e ECD1     		bne	.L111
 2299              	.LVL171:
 2300              	.LBB3422:
 2301              	.LBI3422:
 2302              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 348


  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 349


 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 350


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 351


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 352


 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 353


 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 2303              		.loc 21 337 7 is_stmt 1 view .LVU526
 2304              	.LBB3423:
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 2305              		.loc 21 339 2 view .LVU527
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 2306              		.loc 21 347 2 view .LVU528
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 2307              		.loc 21 339 2 is_stmt 0 view .LVU529
 2308 0040 32B1     		cbz	r2, .L109
 2309              		.loc 21 347 25 view .LVU530
 2310 0042 6968     		ldr	r1, [r5, #4]
 2311 0044 DAF80000 		ldr	r0, [r10]
 2312 0048 FFF7FEFF 		bl	memcmp
 2313              	.LVL172:
 2314              		.loc 21 347 25 view .LVU531
 2315              	.LBE3423:
 2316              	.LBE3422:
 2317              		.loc 5 6174 8 view .LVU532
 2318 004c 0028     		cmp	r0, #0
 2319 004e E4D1     		bne	.L111
 2320              	.LVL173:
 2321              	.L109:
 2322              		.loc 5 6174 8 view .LVU533
 2323              	.LBE3421:
 2324              	.LBE3420:
 2325              	.LBE3419:
 2326              	.LBE3418:
 2327              	.LBE3417:
 2328              	.LBE3424:
 2329              	.LBE3434:
 2330              	.LBE3411:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2331              		.loc 3 1588 5 view .LVU534
 2332 0050 3046     		mov	r0, r6
 2333 0052 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2334              	.LVL174:
 2335              	.L113:
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2336              		.loc 3 1575 9 view .LVU535
 2337 0056 2646     		mov	r6, r4
 2338              	.LVL175:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 354


 2339              		.loc 3 1588 5 view .LVU536
 2340 0058 3046     		mov	r0, r6
 2341 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2342              	.LVL176:
 2343              	.L125:
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2344              		.loc 3 1575 9 view .LVU537
 2345 005e 0026     		movs	r6, #0
 2346              	.LVL177:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2347              		.loc 3 1588 5 view .LVU538
 2348 0060 3046     		mov	r0, r6
 2349 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2350              		.loc 3 1588 5 view .LVU539
 2351              		.cfi_endproc
 2352              	.LFE6567:
 2354 0066 00BF     		.section	.rodata._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5
 2355              		.align	2
 2356              	.LC1:
 2357 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 2357      635F7374 
 2357      72696E67 
 2357      3A3A5F4D 
 2357      5F636F6E 
 2358              		.section	.text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_i
 2359              		.align	1
 2360              		.p2align 2,,3
 2361              		.weak	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_EN
 2362              		.syntax unified
 2363              		.thumb
 2364              		.thumb_func
 2365              		.fpu fpv5-d16
 2367              	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__de
 2368              	.LVL178:
 2369              	.LFB6404:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2370              		.loc 3 1015 7 is_stmt 1 view -0
 2371              		.cfi_startproc
 2372              		@ args = 24, pretend = 0, frame = 16
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2374              		.loc 3 1015 7 is_stmt 0 view .LVU541
 2375 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2376              		.cfi_def_cfa_offset 36
 2377              		.cfi_offset 4, -36
 2378              		.cfi_offset 5, -32
 2379              		.cfi_offset 6, -28
 2380              		.cfi_offset 7, -24
 2381              		.cfi_offset 8, -20
 2382              		.cfi_offset 9, -16
 2383              		.cfi_offset 10, -12
 2384              		.cfi_offset 11, -8
 2385              		.cfi_offset 14, -4
 2386 0004 9146     		mov	r9, r2
 2387              	.LBB3676:
 2388              	.LBB3677:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 355


 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2389              		.loc 3 446 42 view .LVU542
 2390 0006 00F11802 		add	r2, r0, #24
 2391              	.LVL179:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2392              		.loc 3 446 42 view .LVU543
 2393              	.LBE3677:
 2394              	.LBE3676:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2395              		.loc 3 1015 7 view .LVU544
 2396 000a 0D46     		mov	r5, r1
 2397              	.LBB3702:
 2398              	.LBB3698:
 2399              	.LBB3678:
 2400              	.LBB3679:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2401              		.loc 4 218 41 view .LVU545
 2402 000c 0027     		movs	r7, #0
 2403              	.LBE3679:
 2404              	.LBE3678:
 2405              	.LBE3698:
 2406              	.LBE3702:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2407              		.loc 3 1015 7 view .LVU546
 2408 000e 0446     		mov	r4, r0
 2409              	.LVL180:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2410              		.loc 3 1015 7 view .LVU547
 2411 0010 2DED028B 		vpush.64	{d8}
 2412              		.cfi_def_cfa_offset 44
 2413              		.cfi_offset 80, -44
 2414              		.cfi_offset 81, -40
 2415 0014 87B0     		sub	sp, sp, #28
 2416              		.cfi_def_cfa_offset 72
 2417              	.LVL181:
 2418              	.LBB3703:
 2419              	.LBI3676:
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 2420              		.loc 3 442 7 is_stmt 1 view .LVU548
 2421              	.LBB3699:
 2422              	.LBB3680:
 2423              	.LBI3680:
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
 2424              		.loc 4 1792 5 view .LVU549
 2425              	.LBB3681:
 2426              	.LBI3681:
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
 2427              		.loc 4 1369 7 view .LVU550
 2428              	.LBB3682:
 2429              	.LBI3682:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2430              		.loc 4 1115 2 view .LVU551
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2431              		.loc 4 1115 2 is_stmt 0 view .LVU552
 2432              	.LBE3682:
 2433              	.LBB3683:
 2434              	.LBI3683:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 356


1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2435              		.loc 4 1115 2 is_stmt 1 view .LVU553
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2436              		.loc 4 1115 2 is_stmt 0 view .LVU554
 2437              	.LBE3683:
 2438              	.LBB3684:
 2439              	.LBI3684:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2440              		.loc 4 1115 2 is_stmt 1 view .LVU555
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2441              		.loc 4 1115 2 is_stmt 0 view .LVU556
 2442              	.LBE3684:
 2443              	.LBE3681:
 2444              	.LBB3685:
 2445              	.LBI3685:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2446              		.loc 4 1115 2 is_stmt 1 view .LVU557
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2447              		.loc 4 1115 2 is_stmt 0 view .LVU558
 2448              	.LBE3685:
 2449              	.LBE3680:
 2450              	.LBB3686:
 2451              	.LBI3686:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2452              		.loc 9 157 2 is_stmt 1 view .LVU559
 2453              	.LBB3687:
 2454              	.LBI3687:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2455              		.loc 7 79 7 view .LVU560
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2456              		.loc 7 79 7 is_stmt 0 view .LVU561
 2457              	.LBE3687:
 2458              	.LBE3686:
 2459              	.LBB3688:
 2460              	.LBI3688:
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
 2461              		.loc 4 1987 2 is_stmt 1 view .LVU562
 2462              	.LBB3689:
 2463              	.LBI3689:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2464              		.loc 4 1115 2 view .LVU563
 2465              	.LBB3690:
 2466              	.LBI3690:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2467              		.loc 9 147 7 view .LVU564
 2468              	.LBB3691:
 2469              	.LBI3691:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2470              		.loc 7 82 7 view .LVU565
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2471              		.loc 7 82 7 is_stmt 0 view .LVU566
 2472              	.LBE3691:
 2473              	.LBE3690:
 2474              	.LBE3689:
 2475              	.LBE3688:
 2476              	.LBB3692:
 2477              	.LBI3692:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 357


 2478              		.loc 9 162 7 is_stmt 1 view .LVU567
 2479              	.LBB3693:
 2480              	.LBI3693:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2481              		.loc 7 89 7 view .LVU568
 2482              	.LBE3693:
 2483              	.LBE3692:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2484              		.loc 3 446 42 is_stmt 0 view .LVU569
 2485 0016 0260     		str	r2, [r0]
 2486 0018 0392     		str	r2, [sp, #12]
 2487              	.LBE3699:
 2488              	.LBE3703:
 2489              	.LBB3704:
 2490              	.LBB3705:
 2491              	.LBB3706:
 2492              	.LBB3707:
 2493              	.LBB3708:
 2494              	.LBB3709:
 2495              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 358


  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__first != __last)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	{
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__first;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__n;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	}
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __n;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 359


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __last - __first;
 2496              		.loc 22 104 21 view .LVU570
 2497 001a A9EB0102 		sub	r2, r9, r1
 2498              		.loc 22 104 23 view .LVU571
 2499 001e 9349     		ldr	r1, .L185
 2500              	.LVL182:
 2501              		.loc 22 104 23 view .LVU572
 2502 0020 9210     		asrs	r2, r2, #2
 2503 0022 02FB01F1 		mul	r1, r2, r1
 2504              	.LBE3709:
 2505              	.LBE3708:
 2506              	.LBE3707:
 2507              	.LBE3706:
 2508              	.LBE3705:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2509              		.loc 3 1026 32 view .LVU573
 2510 0026 9942     		cmp	r1, r3
 2511 0028 38BF     		it	cc
 2512 002a 1946     		movcc	r1, r3
 2513              	.LBE3704:
 2514              	.LBB4104:
 2515              	.LBB3700:
 2516              	.LBB3694:
 2517              	.LBB3695:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2518              		.loc 4 450 48 view .LVU574
 2519 002c 4FF07E53 		mov	r3, #1065353216
 2520              	.LVL183:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2521              		.loc 4 450 48 view .LVU575
 2522 0030 0361     		str	r3, [r0, #16]	@ float
 2523              	.LBE3695:
 2524              	.LBE3694:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2525              		.loc 3 446 42 view .LVU576
 2526 0032 0123     		movs	r3, #1
 2527 0034 4360     		str	r3, [r0, #4]
 2528              	.LVL184:
 2529              	.LBB3696:
 2530              	.LBI3678:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2531              		.loc 4 218 5 is_stmt 1 view .LVU577
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2532              		.loc 4 218 5 is_stmt 0 view .LVU578
 2533              	.LBE3696:
 2534              	.LBB3697:
 2535              	.LBI3694:
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 360


 2536              		.loc 4 449 5 is_stmt 1 view .LVU579
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 2537              		.loc 4 449 5 is_stmt 0 view .LVU580
 2538              	.LBE3697:
 2539              	.LBE3700:
 2540              	.LBE4104:
 2541              	.LBB4105:
 2542              	.LBB3713:
 2543              	.LBI3705:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
 2544              		.loc 4 76 5 is_stmt 1 view .LVU581
 2545              	.LBB3712:
 2546              	.LBI3706:
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
 2547              		.loc 4 70 5 view .LVU582
 2548              	.LBB3711:
 2549              	.LBI3707:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #endif
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  n may be negative.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 2550              		.loc 22 138 5 view .LVU583
 2551              	.LBB3710:
 2552              	.LBI3708:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2553              		.loc 22 98 5 view .LVU584
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 361


 2554              		.loc 22 98 5 is_stmt 0 view .LVU585
 2555              	.LBE3710:
 2556              	.LBE3711:
 2557              	.LBE3712:
 2558              	.LBE3713:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2559              		.loc 3 1026 32 view .LVU586
 2560 0036 00F11003 		add	r3, r0, #16
 2561              	.LBE4105:
 2562              	.LBB4106:
 2563              	.LBB3701:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2564              		.loc 3 446 42 view .LVU587
 2565 003a C0E90277 		strd	r7, r7, [r0, #8]
 2566 003e C0E90577 		strd	r7, r7, [r0, #20]
 2567              	.LBE3701:
 2568              	.LBE4106:
 2569              	.LBB4107:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2570              		.loc 3 1026 32 view .LVU588
 2571 0042 1846     		mov	r0, r3
 2572              	.LVL185:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2573              		.loc 3 1026 32 view .LVU589
 2574 0044 08EE103A 		vmov	s16, r3	@ int
 2575              	.LVL186:
 2576              	.LBB3714:
 2577              	.LBI3714:
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 2578              		.loc 4 462 5 is_stmt 1 view .LVU590
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 2579              		.loc 4 462 5 is_stmt 0 view .LVU591
 2580              	.LBE3714:
 2581              	.LBE4107:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2582              		.loc 4 463 7 is_stmt 1 view .LVU592
 2583              	.LBB4108:
 2584              	.LBB3715:
 2585              	.LBI3715:
 2586              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 362


  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 363


  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 364


 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 365


 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 366


 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 2587              		.loc 23 254 5 view .LVU593
 2588              		.loc 23 254 5 is_stmt 0 view .LVU594
 2589              	.LBE3715:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2590              		.loc 3 1026 32 view .LVU595
 2591 0048 FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEj
 2592              	.LVL187:
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2593              		.loc 3 1030 2 view .LVU596
 2594 004c 6368     		ldr	r3, [r4, #4]
 2595 004e 8342     		cmp	r3, r0
 2596 0050 13D2     		bcs	.L127
 2597              	.LBB3716:
 2598              	.LBB3717:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2599              		.loc 3 392 2 view .LVU597
 2600 0052 0128     		cmp	r0, #1
 2601 0054 0646     		mov	r6, r0
 2602              	.LVL188:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2603              		.loc 3 392 2 view .LVU598
 2604              	.LBE3717:
 2605              	.LBI3716:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 2606              		.loc 3 390 7 is_stmt 1 view .LVU599
 2607              	.LBB3735:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2608              		.loc 3 392 2 is_stmt 0 view .LVU600
 2609 0056 00F0FB80 		beq	.L178
 2610              	.LVL189:
 2611              	.LBB3718:
 2612              	.LBI3718:
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2613              		.loc 4 2081 5 is_stmt 1 view .LVU601
 2614              	.LBB3719:
 2615              	.LBB3720:
 2616              	.LBI3720:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2617              		.loc 9 157 2 view .LVU602
 2618              	.LBB3721:
 2619              	.LBI3721:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2620              		.loc 7 79 7 view .LVU603
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2621              		.loc 7 79 7 is_stmt 0 view .LVU604
 2622              	.LBE3721:
 2623              	.LBE3720:
 2624              	.LBB3722:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 367


 2625              	.LBI3722:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2626              		.loc 6 459 7 is_stmt 1 view .LVU605
 2627              	.LBB3723:
 2628              	.LBI3723:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2629              		.loc 7 103 7 view .LVU606
 2630              	.LBB3724:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 2631              		.loc 7 105 2 is_stmt 0 view .LVU607
 2632 005a B0F1005F 		cmp	r0, #536870912
 2633 005e 80F0FF80 		bcs	.L143
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2634              		.loc 7 115 41 view .LVU608
 2635 0062 8200     		lsls	r2, r0, #2
 2636 0064 1046     		mov	r0, r2
 2637              	.LVL190:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2638              		.loc 7 115 41 view .LVU609
 2639 0066 0292     		str	r2, [sp, #8]
 2640 0068 FFF7FEFF 		bl	_Znwj
 2641              	.LVL191:
 2642              	.LBE3724:
 2643              	.LBE3723:
 2644              	.LBE3722:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 2645              		.loc 4 2087 23 view .LVU610
 2646 006c 3946     		mov	r1, r7
 2647 006e 029A     		ldr	r2, [sp, #8]
 2648              	.LBB3729:
 2649              	.LBB3727:
 2650              	.LBB3725:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2651              		.loc 7 115 41 view .LVU611
 2652 0070 0746     		mov	r7, r0
 2653              	.LVL192:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2654              		.loc 7 115 41 view .LVU612
 2655              	.LBE3725:
 2656              	.LBE3727:
 2657              	.LBE3729:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 2658              		.loc 4 2087 23 view .LVU613
 2659 0072 FFF7FEFF 		bl	memset
 2660              	.LVL193:
 2661              	.LBB3730:
 2662              	.LBI3730:
 2663              		.loc 9 162 7 is_stmt 1 view .LVU614
 2664              	.LBB3731:
 2665              	.LBI3731:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2666              		.loc 7 89 7 view .LVU615
 2667              	.L129:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2668              		.loc 7 89 7 is_stmt 0 view .LVU616
 2669              	.LBE3731:
 2670              	.LBE3730:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 368


 2671              	.LBE3719:
 2672              	.LBE3718:
 2673              	.LBE3735:
 2674              	.LBE3716:
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 2675              		.loc 3 1033 22 view .LVU617
 2676 0076 C4E90076 		strd	r7, r6, [r4]
 2677              	.LVL194:
 2678              	.L127:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2679              		.loc 3 1036 13 is_stmt 1 discriminator 2 view .LVU618
 2680 007a 4D45     		cmp	r5, r9
 2681 007c 05D1     		bne	.L131
 2682 007e 62E0     		b	.L161
 2683              	.LVL195:
 2684              	.L179:
 2685              	.LBB3738:
 2686              	.LBB3739:
 2687              	.LBB3740:
 2688              	.LBB3741:
 2689              	.LBB3742:
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
 2690              		.loc 3 1810 2 is_stmt 0 view .LVU619
 2691 0080 0368     		ldr	r3, [r0]
 2692 0082 ABB1     		cbz	r3, .L132
 2693              	.LVL196:
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
 2694              		.loc 3 1810 2 view .LVU620
 2695              	.LBE3742:
 2696              	.LBE3741:
 2697              	.LBE3740:
 2698              	.LBE3739:
 2699              	.LBE3738:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2700              		.loc 3 1036 2 is_stmt 1 view .LVU621
 2701 0084 1C35     		adds	r5, r5, #28
 2702              	.LVL197:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2703              		.loc 3 1036 13 view .LVU622
 2704 0086 A945     		cmp	r9, r5
 2705 0088 5DD0     		beq	.L161
 2706              	.LVL198:
 2707              	.L131:
 2708              	.LBB4092:
 2709              	.LBI3738:
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 2710              		.loc 4 836 7 view .LVU623
 2711              	.LBB4082:
 2712              	.LBB4071:
 2713              	.LBI4071:
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 2714              		.loc 4 161 7 view .LVU624
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 2715              		.loc 4 161 7 is_stmt 0 view .LVU625
 2716              	.LBE4071:
 2717              	.LBB4072:
 2718              	.LBI3740:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 369


1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2719              		.loc 3 1800 7 is_stmt 1 view .LVU626
 2720              	.LBB4061:
 2721              	.LBB3747:
 2722              	.LBI3747:
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 2723              		.loc 4 1375 7 view .LVU627
 2724              	.LBB3748:
 2725              	.LBI3748:
6175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
6190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 370


6223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 371


6280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes C string.
6284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string precedes string.
6296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const _CharT* __lhs,
6303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator >
6307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string follows string.
6309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string follows C string.
6322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string follows string.
6334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 372


6337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const _CharT* __lhs,
6341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <=
6345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow string.
6347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const _CharT* __lhs,
6379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator >=
6383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede string.
6385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 373


6394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const _CharT* __lhs,
6417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // three-way comparison
6420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Swap contents of two strings.
6423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline void
6430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { __lhs.swap(__rhs); }
6434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read stream into a string.
6438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents of @a __str are erased.
6447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
6450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 374


6451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<char>&
6455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Write string to a stream.
6459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __os  Output stream.
6460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  String to write out.
6461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the output stream.
6462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  writing a C string.
6465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 586. string inserter not a formatted function
6473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
6478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __delim  Character marking end of line.
6481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __str.
6488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
6491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
6496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __str.
6505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 375


6508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
6514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str, __delim); }
6519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
6521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str); }
6526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<char>&
6530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    char __delim);
6532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<wchar_t>&
6536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    wchar_t __delim);
6538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  
6539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** } // namespace
6542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/string_conversions.h>
6546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <bits/charconv.h>
6547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
6550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline int
6556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					__idx, __base); }
6559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long
6561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 376


6565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long
6566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long long
6571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long long
6576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: strtof vs strtod.
6581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline float
6582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline double
6586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long double
6590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1261. Insufficent overloads for to_string / to_wstring
6595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(int __val)
6598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned __uval = __neg ? (unsigned)~__val + 1u : __val;
6601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
6602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
6603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned __val)
6609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long __val)
6617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned long __uval = __neg ? (unsigned long)~__val + 1ul : __val;
6620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
6621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 377


6622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned long __val)
6628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long long __val)
6636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned long long __uval
6639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       = __neg ? (unsigned long long)~__val + 1ull : __val;
6640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
6641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
6642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned long long __val)
6648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: (v)snprintf vs sprintf.
6656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(float __val)
6659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
6661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%f", __val);
6664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(double __val)
6668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
6670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%f", __val);
6673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long double __val)
6677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 378


6679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%Lf", __val);
6682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_C99_STDIO
6684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR
6686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline int 
6687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)
6688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::wcstol, "stoi", __str.c_str(),
6689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					__idx, __base); }
6690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long 
6692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stol(const wstring& __str, size_t* __idx = 0, int __base = 10)
6693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(),
6694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long
6697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)
6698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(),
6699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long long
6702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)
6703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
6704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long long
6707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)
6708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
6709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: wcstof vs wcstod.
6712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline float
6713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stof(const wstring& __str, size_t* __idx = 0)
6714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
6715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline double
6717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stod(const wstring& __str, size_t* __idx = 0)
6718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
6719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long double
6721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stold(const wstring& __str, size_t* __idx = 0)
6722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
6723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1261.
6726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(int __val)
6728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
6729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%d", __val); }
6730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned __val)
6733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned),
6735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%u", __val); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 379


6736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long __val)
6739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
6740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%ld", __val); }
6741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned long __val)
6744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned long),
6746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%lu", __val); }
6747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long long __val)
6750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(long long),
6752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%lld", __val); }
6753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned long long __val)
6756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned long long),
6758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%llu", __val); }
6759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(float __val)
6762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%f", __val);
6767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(double __val)
6771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%f", __val);
6776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long double __val)
6780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%Lf", __val);
6785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_WCHAR_T && _GLIBCXX_USE_C99_WCHAR
6788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** } // namespace
6792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 380


6793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif /* C++11 */
6794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <bits/functional_hash.h>
6798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
6801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1182.
6804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _GLIBCXX_COMPATIBILITY_CXX0X
6806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// std::hash specialization for string.
6807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     struct hash<string>
6809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     : public __hash_base<size_t, string>
6810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_t
6812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator()(const string& __s) const noexcept
 2726              		.loc 5 6812 7 view .LVU628
 2727              	.LBE3748:
 2728              	.LBE3747:
 2729              	.LBE4061:
 2730              	.LBE4072:
 2731              	.LBE4082:
 2732              	.LBE4092:
 2733              	.LBE4108:
6813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return std::_Hash_impl::hash(__s.data(), __s.length()); }
 2734              		.loc 5 6813 9 view .LVU629
 2735              	.LBB4109:
 2736              	.LBB4093:
 2737              	.LBB4083:
 2738              	.LBB4073:
 2739              	.LBB4062:
 2740              	.LBB3758:
 2741              	.LBB3756:
 2742              	.LBB3749:
 2743              	.LBI3749:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 2744              		.loc 5 2311 7 view .LVU630
 2745              	.LBB3750:
 2746              	.LBI3750:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2747              		.loc 5 186 7 view .LVU631
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2748              		.loc 5 186 7 is_stmt 0 view .LVU632
 2749              	.LBE3750:
 2750              	.LBE3749:
 2751              	.LBB3751:
 2752              	.LBI3751:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2753              		.loc 5 907 7 is_stmt 1 view .LVU633
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2754              		.loc 5 907 7 is_stmt 0 view .LVU634
 2755              	.LBE3751:
 2756              	.LBB3752:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 381


 2757              	.LBI3752:
 2758              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functional
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // functional_hash.h header -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** /** @file bits/functional_hash.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifndef _FUNCTIONAL_HASH_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _FUNCTIONAL_HASH_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #include <bits/hash_bytes.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** {
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /** @defgroup hashes Hashes
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @ingroup functors
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *   Hashing functors taking a variable type and returning a @c std::size_t.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @{
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    */
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Result, typename _Arg>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_base
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Result     result_type _GLIBCXX17_DEPRECATED;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 382


  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash.
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, typename = void>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = false;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __poison_hash(__poison_hash&&);
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__poison_hash();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash<_Tp, __void_t<decltype(hash<_Tp>()(declval<_Tp>()))>>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = true;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for SFINAE-poisoning non-enum types.
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, bool = is_enum<_Tp>::value>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __hash_enum(__hash_enum&&);
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__hash_enum();
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for hash with enum types.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        using __type = typename underlying_type<_Tp>::type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        return hash<__type>{}(static_cast<__type>(__val));
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash, usable for enum types only.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Use with non-enum types still SFINAES.
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash : __hash_enum<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { };
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Partial specializations for pointer types.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp*> : public __hash_base<size_t, _Tp*>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp* __p) const noexcept
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return reinterpret_cast<size_t>(__p); }
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 383


 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Explicit specializations for integer types.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _Cxx_hashtable_define_trivial_hash(_Tp) 	\
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<>						\
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp> : public __hash_base<size_t, _Tp>  \
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {                                                   \
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t                                            \
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept              \
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return static_cast<size_t>(__val); }            \
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for bool.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(bool)
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char)
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for signed char.
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(signed char)
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned char.
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned char)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for wchar_t.
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(wchar_t)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char8_t.
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char8_t)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char16_t.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char16_t)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char32_t.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char32_t)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for short.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(short)
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for int.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(int)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for long.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(long)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for long long.
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(long long)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned short.
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned short)
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned int.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned int)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned long.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned long)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 384


 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned long long.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned long long)
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_0)
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_0 unsigned)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_1)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_1 unsigned)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_2)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_2 unsigned)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_3)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_3 unsigned)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #undef _Cxx_hashtable_define_trivial_hash
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   struct _Hash_impl
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     static size_t
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     hash(const void* __ptr, size_t __clength,
 2759              		.loc 24 195 5 is_stmt 1 view .LVU635
 2760              	.LBB3753:
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { return _Hash_bytes(__ptr, __clength, __seed); }
 2761              		.loc 24 197 7 view .LVU636
 2762              		.loc 24 197 25 is_stmt 0 view .LVU637
 2763 008a 794A     		ldr	r2, .L185+4
 2764 008c D5E90001 		ldrd	r0, r1, [r5]
 2765 0090 FFF7FEFF 		bl	_ZSt11_Hash_bytesPKvjj
 2766              	.LVL199:
 2767              		.loc 24 197 25 view .LVU638
 2768              	.LBE3753:
 2769              	.LBE3752:
 2770              	.LBE3756:
 2771              	.LBE3758:
 2772              	.LBB3759:
 2773              	.LBB3760:
 2774              	.LBB3761:
 2775              	.LBB3762:
 2776              	.LBB3763:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2777              		.loc 4 433 22 view .LVU639
 2778 0094 6168     		ldr	r1, [r4, #4]
 2779              	.LBE3763:
 2780              	.LBE3762:
 2781              	.LBE3761:
 2782              	.LBE3760:
 2783              	.LBE3759:
 2784              	.LBB3772:
 2785              	.LBB3757:
 2786              	.LBB3755:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 385


 2787              	.LBB3754:
 2788              		.loc 24 197 25 view .LVU640
 2789 0096 0646     		mov	r6, r0
 2790              	.LVL200:
 2791              		.loc 24 197 25 view .LVU641
 2792              	.LBE3754:
 2793              	.LBE3755:
 2794              	.LBE3757:
 2795              	.LBE3772:
 2796              	.LBB3773:
 2797              	.LBI3759:
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 2798              		.loc 3 681 7 is_stmt 1 view .LVU642
 2799              	.LBB3770:
 2800              	.LBB3768:
 2801              	.LBI3761:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 2802              		.loc 4 1383 7 view .LVU643
 2803              	.LBB3766:
 2804              	.LBI3762:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 2805              		.loc 4 431 5 view .LVU644
 2806              	.LBB3764:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2807              		.loc 4 433 7 view .LVU645
 2808              	.LBE3764:
 2809              	.LBE3766:
 2810              	.LBE3768:
 2811              	.LBE3770:
 2812              	.LBE3773:
 2813              	.LBB3774:
 2814              	.LBB3743:
 2815              	.LBB3744:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2816              		.loc 3 693 47 is_stmt 0 view .LVU646
 2817 0098 2A46     		mov	r2, r5
 2818 009a 2046     		mov	r0, r4
 2819              	.LVL201:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2820              		.loc 3 693 47 view .LVU647
 2821 009c 3346     		mov	r3, r6
 2822              	.LBE3744:
 2823              	.LBE3743:
 2824              	.LBE3774:
 2825              	.LBB3775:
 2826              	.LBB3771:
 2827              	.LBB3769:
 2828              	.LBB3767:
 2829              	.LBB3765:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2830              		.loc 4 433 22 view .LVU648
 2831 009e B6FBF1F7 		udiv	r7, r6, r1
 2832 00a2 01FB1767 		mls	r7, r1, r7, r6
 2833              	.LVL202:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2834              		.loc 4 433 22 view .LVU649
 2835              	.LBE3765:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 386


 2836              	.LBE3767:
 2837              	.LBE3769:
 2838              	.LBE3771:
 2839              	.LBE3775:
 2840              	.LBB3776:
 2841              	.LBB3746:
 2842              	.LBI3743:
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 2843              		.loc 3 690 7 is_stmt 1 view .LVU650
 2844              	.LBB3745:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2845              		.loc 3 693 47 is_stmt 0 view .LVU651
 2846 00a6 3946     		mov	r1, r7
 2847 00a8 FFF7FEFF 		bl	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt
 2848              	.LVL203:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 2849              		.loc 3 694 2 view .LVU652
 2850 00ac 0028     		cmp	r0, #0
 2851 00ae E7D1     		bne	.L179
 2852              	.LVL204:
 2853              	.L132:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 2854              		.loc 3 694 2 view .LVU653
 2855              	.LBE3745:
 2856              	.LBE3746:
 2857              	.LBE3776:
 2858              	.LBB3777:
 2859              	.LBI3777:
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 2860              		.loc 4 166 2 is_stmt 1 view .LVU654
 2861              	.LBB3778:
 2862              	.LBI3778:
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 2863              		.loc 4 2029 7 view .LVU655
 2864              	.LBB3779:
 2865              	.LBB3780:
 2866              	.LBI3780:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2867              		.loc 6 459 7 view .LVU656
 2868              	.LBB3781:
 2869              	.LBI3781:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2870              		.loc 7 103 7 view .LVU657
 2871              	.LBB3782:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2872              		.loc 7 115 41 is_stmt 0 view .LVU658
 2873 00b0 2420     		movs	r0, #36
 2874 00b2 FFF7FEFF 		bl	_Znwj
 2875              	.LVL205:
 2876              	.LBE3782:
 2877              	.LBE3781:
 2878              	.LBE3780:
 2879              	.LBB3785:
 2880              	.LBB3786:
 2881              	.LBB3787:
 2882              	.LBB3788:
 2883              	.LBB3789:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 387


 2884              	.LBB3790:
 2885              	.LBB3791:
 2886              	.LBB3792:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2887              		.loc 5 187 28 view .LVU659
 2888 00b6 D5F800A0 		ldr	r10, [r5]
 2889              	.LBE3792:
 2890              	.LBE3791:
 2891              	.LBB3793:
 2892              	.LBB3794:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2893              		.loc 5 908 16 view .LVU660
 2894 00ba 6B68     		ldr	r3, [r5, #4]
 2895              	.LBE3794:
 2896              	.LBE3793:
 2897              	.LBE3790:
 2898              	.LBE3789:
 2899              	.LBE3788:
 2900              	.LBE3787:
 2901              	.LBE3786:
 2902              	.LBE3785:
 2903              	.LBB3919:
 2904              	.LBB3920:
 2905              	.LBB3921:
 2906              	.LBB3922:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2907              		.loc 4 218 41 view .LVU661
 2908 00bc 0146     		mov	r1, r0
 2909 00be 0022     		movs	r2, #0
 2910              	.LBE3922:
 2911              	.LBE3921:
 2912              	.LBE3920:
 2913              	.LBE3919:
 2914              	.LBB3928:
 2915              	.LBB3784:
 2916              	.LBB3783:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2917              		.loc 7 115 41 view .LVU662
 2918 00c0 8046     		mov	r8, r0
 2919              	.LVL206:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2920              		.loc 7 115 41 view .LVU663
 2921              	.LBE3783:
 2922              	.LBE3784:
 2923              	.LBE3928:
 2924              	.LBE3779:
 2925              	.LBE3778:
 2926              	.LBE3777:
 2927              	.LBE4062:
 2928              	.LBE4073:
 2929              	.LBE4083:
 2930              	.LBE4093:
 2931              	.LBE4109:
 2932              		.loc 18 175 3 is_stmt 1 view .LVU664
 2933              	.LBB4110:
 2934              	.LBB4094:
 2935              	.LBB4084:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 388


 2936              	.LBB4074:
 2937              	.LBB4063:
 2938              	.LBB3950:
 2939              	.LBB3944:
 2940              	.LBB3938:
 2941              	.LBB3929:
 2942              	.LBI3919:
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2943              		.loc 4 264 12 view .LVU665
 2944              	.LBB3926:
 2945              	.LBI3920:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2946              		.loc 4 229 12 view .LVU666
 2947              	.LBB3924:
 2948              	.LBI3921:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2949              		.loc 4 218 5 view .LVU667
 2950              	.LBE3924:
 2951              	.LBE3926:
 2952              	.LBE3929:
 2953              	.LBB3930:
 2954              	.LBB3912:
 2955              	.LBB3906:
 2956              	.LBB3900:
 2957              	.LBB3895:
 2958              	.LBB3890:
 2959              	.LBB3795:
 2960              	.LBB3796:
 2961              	.LBB3797:
 2962              	.LBB3798:
 2963              	.LBB3799:
 2964              	.LBB3800:
 2965              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 389


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 390


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 391


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 392


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 2966              		.loc 25 211 42 is_stmt 0 view .LVU668
 2967 00c2 1AEB030F 		cmn	r10, r3
 2968              	.LBE3800:
 2969              	.LBE3799:
 2970              	.LBE3798:
 2971              	.LBE3797:
 2972              	.LBE3796:
 2973              	.LBE3795:
 2974              	.LBE3890:
 2975              	.LBE3895:
 2976              	.LBE3900:
 2977              	.LBE3906:
 2978              	.LBE3912:
 2979              	.LBE3930:
 2980              	.LBB3931:
 2981              	.LBB3927:
 2982              	.LBB3925:
 2983              	.LBB3923:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2984              		.loc 4 218 41 view .LVU669
 2985 00c6 41F80C2B 		str	r2, [r1], #12
 2986              	.LVL207:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2987              		.loc 4 218 41 view .LVU670
 2988              	.LBE3923:
 2989              	.LBE3925:
 2990              	.LBE3927:
 2991              	.LBE3931:
 2992              	.LBB3932:
 2993              	.LBI3785:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 2994              		.loc 6 507 2 is_stmt 1 view .LVU671
 2995              	.LBB3913:
 2996              	.LBI3786:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 2997              		.loc 7 148 2 view .LVU672
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 2998              		.loc 7 148 2 is_stmt 0 view .LVU673
 2999              	.LBE3913:
 3000              	.LBE3932:
 3001              	.LBE3938:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 393


 3002              	.LBE3944:
 3003              	.LBE3950:
 3004              	.LBE4063:
 3005              	.LBE4074:
 3006              	.LBE4084:
 3007              	.LBE4094:
 3008              	.LBE4110:
 3009              		.loc 18 175 3 is_stmt 1 view .LVU674
 3010              	.LBB4111:
 3011              	.LBB4095:
 3012              	.LBB4085:
 3013              	.LBB4075:
 3014              	.LBB4064:
 3015              	.LBB3951:
 3016              	.LBB3945:
 3017              	.LBB3939:
 3018              	.LBB3933:
 3019              	.LBB3914:
 3020              	.LBB3907:
 3021              	.LBI3787:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 394


 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 395


 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 3022              		.loc 8 314 17 view .LVU675
 3023              	.LBB3901:
 3024              	.LBB3896:
 3025              	.LBI3789:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 3026              		.loc 5 448 7 view .LVU676
 3027              	.LBB3891:
 3028              	.LBB3870:
 3029              	.LBI3870:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3030              		.loc 5 190 7 view .LVU677
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3031              		.loc 5 190 7 is_stmt 0 view .LVU678
 3032              	.LBE3870:
 3033              	.LBB3871:
 3034              	.LBI3871:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 3035              		.loc 5 290 7 is_stmt 1 view .LVU679
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 3036              		.loc 5 290 7 is_stmt 0 view .LVU680
 3037              	.LBE3871:
 3038              	.LBB3872:
 3039              	.LBI3872:
 3040              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 396


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 397


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 3041              		.loc 26 97 29 is_stmt 1 view .LVU681
 3042              	.LBB3873:
 3043              	.LBI3873:
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 3044              		.loc 6 558 7 view .LVU682
 3045              	.LBB3874:
 3046              	.LBI3874:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3047              		.loc 9 147 7 view .LVU683
 3048              	.LBB3875:
 3049              	.LBI3875:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 398


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3050              		.loc 7 82 7 view .LVU684
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3051              		.loc 7 82 7 is_stmt 0 view .LVU685
 3052              	.LBE3875:
 3053              	.LBE3874:
 3054              	.LBE3873:
 3055              	.LBE3872:
 3056              	.LBB3876:
 3057              	.LBI3876:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 3058              		.loc 5 159 2 is_stmt 1 view .LVU686
 3059              	.LBB3877:
 3060              	.LBB3878:
 3061              	.LBI3878:
 3062              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 399


  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 400


  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 3063              		.loc 27 101 5 view .LVU687
 3064              		.loc 27 101 5 is_stmt 0 view .LVU688
 3065              	.LBE3878:
 3066              	.LBB3879:
 3067              	.LBI3879:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3068              		.loc 9 147 7 is_stmt 1 view .LVU689
 3069              	.LBB3880:
 3070              	.LBI3880:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3071              		.loc 7 82 7 view .LVU690
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3072              		.loc 7 82 7 is_stmt 0 view .LVU691
 3073              	.LBE3880:
 3074              	.LBE3879:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 3075              		.loc 5 160 46 view .LVU692
 3076 00ca 4160     		str	r1, [r0, #4]
 3077              	.LVL208:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 3078              		.loc 5 160 46 view .LVU693
 3079              	.LBE3877:
 3080              	.LBE3876:
 3081              	.LBB3881:
 3082              	.LBI3881:
 3083              		.loc 9 162 7 is_stmt 1 view .LVU694
 3084              	.LBB3882:
 3085              	.LBI3882:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3086              		.loc 7 89 7 view .LVU695
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3087              		.loc 7 89 7 is_stmt 0 view .LVU696
 3088              	.LBE3882:
 3089              	.LBE3881:
 3090              	.LBB3883:
 3091              	.LBI3791:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3092              		.loc 5 186 7 is_stmt 1 view .LVU697
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3093              		.loc 5 186 7 is_stmt 0 view .LVU698
 3094              	.LBE3883:
 3095              	.LBB3884:
 3096              	.LBI3884:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3097              		.loc 5 186 7 is_stmt 1 view .LVU699
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3098              		.loc 5 186 7 is_stmt 0 view .LVU700
 3099              	.LBE3884:
 3100              	.LBB3885:
 3101              	.LBI3793:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3102              		.loc 5 907 7 is_stmt 1 view .LVU701
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3103              		.loc 5 907 7 is_stmt 0 view .LVU702
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 401


 3104              	.LBE3885:
 3105              	.LBB3886:
 3106              	.LBI3795:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 3107              		.loc 5 263 9 is_stmt 1 view .LVU703
 3108              	.LBB3866:
 3109              	.LBB3862:
 3110              	.LBI3797:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 3111              		.loc 5 243 9 view .LVU704
 3112              	.LBB3858:
 3113              	.LBB3854:
 3114              	.LBI3799:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3115              		.loc 25 206 7 view .LVU705
 3116              	.LBB3850:
 3117              		.loc 25 211 42 is_stmt 0 view .LVU706
 3118 00cc 03D0     		beq	.L134
 3119 00ce BAF1000F 		cmp	r10, #0
 3120 00d2 00F0C780 		beq	.L180
 3121              	.L134:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 3122              		.loc 25 217 2 view .LVU707
 3123 00d6 0F2B     		cmp	r3, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 3124              		.loc 25 215 12 view .LVU708
 3125 00d8 0493     		str	r3, [sp, #16]
 3126              		.loc 25 217 2 view .LVU709
 3127 00da 3FD8     		bhi	.L181
 3128              	.LVL209:
 3129              	.LBB3801:
 3130              	.LBI3801:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3131              		.loc 5 186 7 is_stmt 1 view .LVU710
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3132              		.loc 5 186 7 is_stmt 0 view .LVU711
 3133              	.LBE3801:
 3134              	.LBB3802:
 3135              	.LBI3802:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3136              		.loc 5 392 7 is_stmt 1 view .LVU712
 3137              	.LBB3803:
 3138              	.LBI3803:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3139              		.loc 5 346 7 view .LVU713
 3140              	.LBB3804:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3141              		.loc 5 348 2 is_stmt 0 view .LVU714
 3142 00dc 012B     		cmp	r3, #1
 3143 00de 38D1     		bne	.L137
 3144              	.LVL210:
 3145              	.LBB3805:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 402


 3146              	.LBI3805:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 3147              		.loc 21 321 7 is_stmt 1 view .LVU715
 3148              	.LBB3806:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3149              		.loc 21 322 9 view .LVU716
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3150              		.loc 21 322 16 is_stmt 0 view .LVU717
 3151 00e0 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 3152 00e4 0DF1100B 		add	fp, sp, #16
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3153              		.loc 21 322 14 view .LVU718
 3154 00e8 88F80C20 		strb	r2, [r8, #12]
 3155              	.LVL211:
 3156              	.L138:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3157              		.loc 21 322 14 view .LVU719
 3158              	.LBE3806:
 3159              	.LBE3805:
 3160              	.LBE3804:
 3161              	.LBE3803:
 3162              	.LBE3802:
 3163              	.LBB3822:
 3164              	.LBI3822:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3165              		.loc 5 214 7 is_stmt 1 view .LVU720
 3166              	.LBB3823:
 3167              	.LBB3824:
 3168              	.LBI3824:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 3169              		.loc 5 182 7 view .LVU721
 3170              	.LBE3824:
 3171              	.LBB3826:
 3172              	.LBB3827:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3173              		.loc 21 322 14 is_stmt 0 view .LVU722
 3174 00ec 4FF0000A 		mov	r10, #0
 3175              	.LVL212:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3176              		.loc 21 322 14 view .LVU723
 3177              	.LBE3827:
 3178              	.LBE3826:
 3179              	.LBB3830:
 3180              	.LBB3825:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3181              		.loc 5 183 26 view .LVU724
 3182 00f0 C8F80830 		str	r3, [r8, #8]
 3183              	.LVL213:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3184              		.loc 5 183 26 view .LVU725
 3185              	.LBE3825:
 3186              	.LBE3830:
 3187              	.LBB3831:
 3188              	.LBI3831:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3189              		.loc 5 186 7 is_stmt 1 view .LVU726
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 403


 3190              		.loc 5 186 7 is_stmt 0 view .LVU727
 3191              	.LBE3831:
 3192              	.LBB3833:
 3193              	.LBI3826:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 3194              		.loc 21 321 7 is_stmt 1 view .LVU728
 3195              	.LBB3828:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3196              		.loc 21 322 9 view .LVU729
 3197              	.LBE3828:
 3198              	.LBE3833:
 3199              	.LBE3823:
 3200              	.LBE3822:
 3201              	.LBE3850:
 3202              	.LBE3854:
 3203              	.LBE3858:
 3204              	.LBE3862:
 3205              	.LBE3866:
 3206              	.LBE3886:
 3207              	.LBE3891:
 3208              	.LBE3896:
 3209              	.LBE3901:
 3210              	.LBE3907:
 3211              	.LBE3914:
 3212              	.LBE3933:
 3213              	.LBE3939:
 3214              	.LBE3945:
 3215              	.LBE3951:
 3216              	.LBB3952:
 3217              	.LBB3953:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 3218              		.loc 3 1723 35 is_stmt 0 view .LVU730
 3219 00f4 5846     		mov	r0, fp
 3220              	.LBE3953:
 3221              	.LBE3952:
 3222              	.LBB4045:
 3223              	.LBB3946:
 3224              	.LBB3940:
 3225              	.LBB3934:
 3226              	.LBB3915:
 3227              	.LBB3908:
 3228              	.LBB3902:
 3229              	.LBB3897:
 3230              	.LBB3892:
 3231              	.LBB3887:
 3232              	.LBB3867:
 3233              	.LBB3863:
 3234              	.LBB3859:
 3235              	.LBB3855:
 3236              	.LBB3851:
 3237              	.LBB3838:
 3238              	.LBB3836:
 3239              	.LBB3834:
 3240              	.LBB3829:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3241              		.loc 21 322 14 view .LVU731
 3242 00f6 01F803A0 		strb	r10, [r1, r3]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 404


 3243              	.LVL214:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 3244              		.loc 21 322 14 view .LVU732
 3245              	.LBE3829:
 3246              	.LBE3834:
 3247              	.LBE3836:
 3248              	.LBE3838:
 3249              	.LBE3851:
 3250              	.LBE3855:
 3251              	.LBE3859:
 3252              	.LBE3863:
 3253              	.LBE3867:
 3254              	.LBE3887:
 3255              	.LBE3892:
 3256              	.LBE3897:
 3257              	.LBE3902:
 3258              	.LBE3908:
 3259              	.LBE3915:
 3260              	.LBE3934:
 3261              	.LBE3940:
 3262              	.LBE3946:
 3263              	.LBE4045:
 3264              	.LBB4046:
 3265              	.LBB4039:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 3266              		.loc 3 1723 35 view .LVU733
 3267 00fa 18EE101A 		vmov	r1, s16	@ int
 3268              	.LBE4039:
 3269              	.LBE4046:
 3270              	.LBB4047:
 3271              	.LBB3947:
 3272              	.LBB3941:
 3273              	.LBB3935:
 3274              	.LBB3916:
 3275              	.LBB3909:
 3276              	.LBB3903:
 3277              		.loc 8 314 17 view .LVU734
 3278 00fe AB69     		ldr	r3, [r5, #24]
 3279 0100 C8F81C30 		str	r3, [r8, #28]
 3280              	.LVL215:
 3281              		.loc 8 314 17 view .LVU735
 3282              	.LBE3903:
 3283              	.LBE3909:
 3284              	.LBE3916:
 3285              	.LBE3935:
 3286              	.LBE3941:
 3287              	.LBE3947:
 3288              	.LBE4047:
 3289              	.LBB4048:
 3290              	.LBI4048:
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 3291              		.loc 3 265 2 is_stmt 1 view .LVU736
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 3292              		.loc 3 265 2 is_stmt 0 view .LVU737
 3293              	.LBE4048:
 3294              	.LBB4049:
 3295              	.LBI3952:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 405


1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3296              		.loc 3 1714 5 is_stmt 1 view .LVU738
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3297              		.loc 3 1714 5 is_stmt 0 view .LVU739
 3298              	.LBE4049:
 3299              	.LBE4064:
 3300              	.LBE4075:
 3301              	.LBE4085:
 3302              	.LBE4095:
 3303              	.LBE4111:
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3304              		.loc 4 477 7 is_stmt 1 view .LVU740
 3305              	.LBB4112:
 3306              	.LBB4096:
 3307              	.LBB4086:
 3308              	.LBB4076:
 3309              	.LBB4065:
 3310              	.LBB4050:
 3311              	.LBB4040:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 3312              		.loc 3 1723 35 is_stmt 0 view .LVU741
 3313 0104 0123     		movs	r3, #1
 3314 0106 0093     		str	r3, [sp]
 3315 0108 E368     		ldr	r3, [r4, #12]
 3316 010a 6268     		ldr	r2, [r4, #4]
 3317 010c FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
 3318              	.LVL216:
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3319              		.loc 3 1726 7 view .LVU742
 3320 0110 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 3321 0114 002B     		cmp	r3, #0
 3322 0116 3AD1     		bne	.L139
 3323              	.LVL217:
 3324              	.LBB3954:
 3325              	.LBI3954:
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
 3326              		.loc 4 1394 7 is_stmt 1 view .LVU743
 3327              	.LBE3954:
 3328              	.LBB3957:
 3329              	.LBB3958:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3330              		.loc 3 1599 11 is_stmt 0 view .LVU744
 3331 0118 D4F800A0 		ldr	r10, [r4]
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3332              		.loc 3 1599 21 view .LVU745
 3333 011c 5AF82730 		ldr	r3, [r10, r7, lsl #2]
 3334 0120 0AEB8702 		add	r2, r10, r7, lsl #2
 3335              	.LBE3958:
 3336              	.LBE3957:
 3337              	.LBB3968:
 3338              	.LBB3955:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3339              		.loc 4 1395 27 view .LVU746
 3340 0124 C8F82060 		str	r6, [r8, #32]
 3341              	.LVL218:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3342              		.loc 4 1395 27 view .LVU747
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 406


 3343              	.LBE3955:
 3344              	.LBE3968:
 3345              	.LBB3969:
 3346              	.LBI3957:
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3347              		.loc 3 1595 5 is_stmt 1 view .LVU748
 3348              	.LBB3965:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3349              		.loc 3 1599 7 is_stmt 0 view .LVU749
 3350 0128 002B     		cmp	r3, #0
 3351 012a 6CD0     		beq	.L149
 3352              	.LVL219:
 3353              	.L184:
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 3354              		.loc 3 1603 40 view .LVU750
 3355 012c 1B68     		ldr	r3, [r3]
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 3356              		.loc 3 1603 19 view .LVU751
 3357 012e C8F80030 		str	r3, [r8]
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3358              		.loc 3 1604 14 view .LVU752
 3359 0132 5AF82730 		ldr	r3, [r10, r7, lsl #2]
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3360              		.loc 3 1604 30 view .LVU753
 3361 0136 C3F80080 		str	r8, [r3]
 3362              	.L150:
 3363              	.LVL220:
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3364              		.loc 3 1604 30 view .LVU754
 3365              	.LBE3965:
 3366              	.LBE3969:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 3367              		.loc 3 1736 7 view .LVU755
 3368 013a E368     		ldr	r3, [r4, #12]
 3369              	.LBE4040:
 3370              	.LBE4050:
 3371              	.LBE4065:
 3372              	.LBE4076:
 3373              	.LBE4086:
 3374              	.LBE4096:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3375              		.loc 3 1036 2 view .LVU756
 3376 013c 1C35     		adds	r5, r5, #28
 3377              	.LVL221:
 3378              	.LBB4097:
 3379              	.LBB4087:
 3380              	.LBB4077:
 3381              	.LBB4066:
 3382              	.LBB4051:
 3383              	.LBB4041:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 3384              		.loc 3 1736 7 view .LVU757
 3385 013e 0133     		adds	r3, r3, #1
 3386              	.LBE4041:
 3387              	.LBE4051:
 3388              	.LBE4066:
 3389              	.LBE4077:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 407


 3390              	.LBE4087:
 3391              	.LBE4097:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3392              		.loc 3 1036 13 view .LVU758
 3393 0140 A945     		cmp	r9, r5
 3394              	.LBB4098:
 3395              	.LBB4088:
 3396              	.LBB4078:
 3397              	.LBB4067:
 3398              	.LBB4052:
 3399              	.LBB4042:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 3400              		.loc 3 1736 7 view .LVU759
 3401 0142 E360     		str	r3, [r4, #12]
 3402              	.LVL222:
 3403              	.LBB3970:
 3404              	.LBI3970:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 3405              		.loc 4 340 7 is_stmt 1 view .LVU760
 3406              	.LBB3971:
 3407              	.LBI3971:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3408              		.loc 4 294 7 view .LVU761
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3409              		.loc 4 294 7 is_stmt 0 view .LVU762
 3410              	.LBE3971:
 3411              	.LBE3970:
 3412              	.LBE4042:
 3413              	.LBE4052:
 3414              	.LBB4053:
 3415              	.LBI4053:
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 408


 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 3416              		.loc 8 352 12 is_stmt 1 view .LVU763
 3417              	.LBB4054:
 3418              	.LBI4054:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3419              		.loc 27 76 5 view .LVU764
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3420              		.loc 27 76 5 is_stmt 0 view .LVU765
 3421              	.LBE4054:
 3422              	.LBB4055:
 3423              	.LBI4055:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3424              		.loc 27 76 5 is_stmt 1 view .LVU766
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3425              		.loc 27 76 5 is_stmt 0 view .LVU767
 3426              	.LBE4055:
 3427              	.LBE4053:
 3428              	.LBB4056:
 3429              	.LBI4056:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3430              		.loc 3 276 2 is_stmt 1 view .LVU768
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3431              		.loc 3 276 2 is_stmt 0 view .LVU769
 3432              	.LBE4056:
 3433              	.LBE4067:
 3434              	.LBE4078:
 3435              	.LBE4088:
 3436              	.LBE4098:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3437              		.loc 3 1036 2 is_stmt 1 view .LVU770
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3438              		.loc 3 1036 13 view .LVU771
 3439 0144 A1D1     		bne	.L131
 3440              	.LVL223:
 3441              	.L161:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3442              		.loc 3 1036 13 is_stmt 0 view .LVU772
 3443              	.LBE4112:
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3444              		.loc 3 1038 7 view .LVU773
 3445 0146 2046     		mov	r0, r4
 3446 0148 07B0     		add	sp, sp, #28
 3447              		.cfi_remember_state
 3448              		.cfi_def_cfa_offset 44
 3449              		@ sp needed
 3450 014a BDEC028B 		vldm	sp!, {d8}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 409


 3451              		.cfi_restore 80
 3452              		.cfi_restore 81
 3453              		.cfi_def_cfa_offset 36
 3454 014e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3455              	.LVL224:
 3456              	.L137:
 3457              		.cfi_restore_state
 3458              	.LBB4113:
 3459              	.LBB4099:
 3460              	.LBB4089:
 3461              	.LBB4079:
 3462              	.LBB4068:
 3463              	.LBB4057:
 3464              	.LBB3948:
 3465              	.LBB3942:
 3466              	.LBB3936:
 3467              	.LBB3917:
 3468              	.LBB3910:
 3469              	.LBB3904:
 3470              	.LBB3898:
 3471              	.LBB3893:
 3472              	.LBB3888:
 3473              	.LBB3868:
 3474              	.LBB3864:
 3475              	.LBB3860:
 3476              	.LBB3856:
 3477              	.LBB3852:
 3478              	.LBB3839:
 3479              	.LBB3819:
 3480              	.LBB3816:
 3481              	.LBB3807:
 3482              	.LBI3807:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3483              		.loc 5 346 7 is_stmt 1 view .LVU774
 3484              	.LBB3808:
 3485              	.LBI3808:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 410


 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 3486              		.loc 21 387 7 view .LVU775
 3487              	.LBB3809:
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 3488              		.loc 21 389 2 view .LVU776
 3489 0152 0DF1100B 		add	fp, sp, #16
 3490 0156 002B     		cmp	r3, #0
 3491 0158 C8D0     		beq	.L138
 3492 015a 0FE0     		b	.L136
 3493              	.LVL225:
 3494              	.L181:
 3495              		.loc 21 389 2 is_stmt 0 view .LVU777
 3496              	.LBE3809:
 3497              	.LBE3808:
 3498              	.LBE3807:
 3499              	.LBE3816:
 3500              	.LBE3819:
 3501              	.LBE3839:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 3502              		.loc 25 219 13 view .LVU778
 3503 015c 0DF1100B 		add	fp, sp, #16
 3504 0160 0022     		movs	r2, #0
 3505 0162 08F10400 		add	r0, r8, #4
 3506              	.LVL226:
 3507              		.loc 25 219 13 view .LVU779
 3508 0166 0293     		str	r3, [sp, #8]
 3509 0168 5946     		mov	r1, fp
 3510 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 3511              	.LVL227:
 3512              	.LBB3840:
 3513              	.LBB3841:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3514              		.loc 5 211 31 view .LVU780
 3515 016e 049A     		ldr	r2, [sp, #16]
 3516              	.LBE3841:
 3517              	.LBE3840:
 3518              		.loc 25 219 13 view .LVU781
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 411


 3519 0170 0146     		mov	r1, r0
 3520              	.LVL228:
 3521              	.LBB3843:
 3522              	.LBI3843:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 3523              		.loc 5 178 7 is_stmt 1 view .LVU782
 3524 0172 029B     		ldr	r3, [sp, #8]
 3525              	.LBB3844:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3526              		.loc 5 179 26 is_stmt 0 view .LVU783
 3527 0174 C8F80400 		str	r0, [r8, #4]
 3528              	.LVL229:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3529              		.loc 5 179 26 view .LVU784
 3530              	.LBE3844:
 3531              	.LBE3843:
 3532              	.LBB3845:
 3533              	.LBI3840:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3534              		.loc 5 210 7 is_stmt 1 view .LVU785
 3535              	.LBB3842:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3536              		.loc 5 211 31 is_stmt 0 view .LVU786
 3537 0178 C8F80C20 		str	r2, [r8, #12]
 3538              	.LVL230:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3539              		.loc 5 211 31 view .LVU787
 3540              	.LBE3842:
 3541              	.LBE3845:
 3542              	.LBB3846:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3543              		.loc 5 186 7 is_stmt 1 view .LVU788
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3544              		.loc 5 186 7 is_stmt 0 view .LVU789
 3545              	.LBE3846:
 3546              	.LBB3847:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3547              		.loc 5 392 7 is_stmt 1 view .LVU790
 3548              	.LBB3820:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3549              		.loc 5 346 7 view .LVU791
 3550              	.LBB3817:
 3551              	.LBB3814:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3552              		.loc 5 346 7 view .LVU792
 3553              	.LBB3812:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3554              		.loc 21 387 7 view .LVU793
 3555              	.LBB3810:
 3556              		.loc 21 389 2 view .LVU794
 3557              	.L136:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 412


 3558              		.loc 21 395 2 view .LVU795
 3559              		.loc 21 395 49 is_stmt 0 view .LVU796
 3560 017c 1A46     		mov	r2, r3
 3561 017e 0846     		mov	r0, r1
 3562 0180 5146     		mov	r1, r10
 3563              	.LVL231:
 3564              		.loc 21 395 49 view .LVU797
 3565 0182 FFF7FEFF 		bl	memcpy
 3566              	.LVL232:
 3567              		.loc 21 395 49 view .LVU798
 3568              	.LBE3810:
 3569              	.LBE3812:
 3570              	.LBE3814:
 3571              	.LBE3817:
 3572              	.LBE3820:
 3573              	.LBE3847:
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 3574              		.loc 25 232 15 view .LVU799
 3575 0186 049B     		ldr	r3, [sp, #16]
 3576              	.LBB3848:
 3577              	.LBB3837:
 3578              	.LBB3835:
 3579              	.LBB3832:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3580              		.loc 5 187 28 view .LVU800
 3581 0188 D8F80410 		ldr	r1, [r8, #4]
 3582              	.LBE3832:
 3583              	.LBE3835:
 3584              	.LBE3837:
 3585              	.LBE3848:
 3586              	.LBB3849:
 3587              	.LBB3821:
 3588              	.LBB3818:
 3589              	.LBB3815:
 3590              	.LBB3813:
 3591              	.LBB3811:
 3592              		.loc 21 395 66 view .LVU801
 3593 018c AEE7     		b	.L138
 3594              	.LVL233:
 3595              	.L139:
 3596              		.loc 21 395 66 view .LVU802
 3597              	.LBE3811:
 3598              	.LBE3813:
 3599              	.LBE3815:
 3600              	.LBE3818:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 413


 3601              	.LBE3821:
 3602              	.LBE3849:
 3603              	.LBE3852:
 3604              	.LBE3856:
 3605              	.LBE3860:
 3606              	.LBE3864:
 3607              	.LBE3868:
 3608              	.LBE3888:
 3609              	.LBE3893:
 3610              	.LBE3898:
 3611              	.LBE3904:
 3612              	.LBE3910:
 3613              	.LBE3917:
 3614              	.LBE3936:
 3615              	.LBE3942:
 3616              	.LBE3948:
 3617              	.LBE4057:
 3618              	.LBB4058:
 3619              	.LBB4043:
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
 3620              		.loc 3 1728 13 view .LVU803
 3621 018e 059F     		ldr	r7, [sp, #20]
 3622              	.LVL234:
 3623              	.LBB3972:
 3624              	.LBI3972:
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     rehash(size_type __bkt_count)
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= std::max(_M_rehash_policy._M_bkt_for_elements(_M_element_count + 1),
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __bkt_count);
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count);
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count != _M_bucket_count)
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__bkt_count, __saved_state);
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// No rehash, restore previous state to keep it consistent with
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// container state.
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash_policy._M_reset(__saved_state);
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 3625              		.loc 3 2064 5 is_stmt 1 view .LVU804
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 414


 3626              	.LBB3973:
 3627              	.LBI3973:
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash(size_type __bkt_count, const __rehash_state& __state)
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __try
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_aux(__bkt_count, __unique_keys());
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __catch(...)
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // A failure here means that buckets allocation failed.  We only
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // have to restore hash policy previous state.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_reset(__state);
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __throw_exception_again;
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Rehash when there is no equivalent elements.
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 3628              		.loc 3 2087 5 view .LVU805
 3629              	.LBB3974:
 3630              	.LBB3975:
 3631              	.LBI3975:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 3632              		.loc 3 390 7 view .LVU806
 3633              	.LBB3976:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 3634              		.loc 3 392 2 is_stmt 0 view .LVU807
 3635 0190 012F     		cmp	r7, #1
 3636 0192 60D0     		beq	.L182
 3637              	.LVL235:
 3638              	.LBB3977:
 3639              	.LBI3977:
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3640              		.loc 4 2081 5 is_stmt 1 view .LVU808
 3641              	.LBB3978:
 3642              	.LBB3979:
 3643              	.LBI3979:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3644              		.loc 9 157 2 view .LVU809
 3645              	.LBB3980:
 3646              	.LBI3980:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3647              		.loc 7 79 7 view .LVU810
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3648              		.loc 7 79 7 is_stmt 0 view .LVU811
 3649              	.LBE3980:
 3650              	.LBE3979:
 3651              	.LBB3981:
 3652              	.LBI3981:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 415


 3653              		.loc 6 459 7 is_stmt 1 view .LVU812
 3654              	.LBB3982:
 3655              	.LBI3982:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3656              		.loc 7 103 7 view .LVU813
 3657              	.LBB3983:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 3658              		.loc 7 105 2 is_stmt 0 view .LVU814
 3659 0194 B7F1005F 		cmp	r7, #536870912
 3660 0198 62D2     		bcs	.L143
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3661              		.loc 7 115 41 view .LVU815
 3662 019a BA00     		lsls	r2, r7, #2
 3663 019c 1046     		mov	r0, r2
 3664 019e 0292     		str	r2, [sp, #8]
 3665 01a0 FFF7FEFF 		bl	_Znwj
 3666              	.LVL236:
 3667              	.LBE3983:
 3668              	.LBE3982:
 3669              	.LBE3981:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 3670              		.loc 4 2087 23 view .LVU816
 3671 01a4 5146     		mov	r1, r10
 3672 01a6 029A     		ldr	r2, [sp, #8]
 3673              	.LBB3986:
 3674              	.LBB3985:
 3675              	.LBB3984:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3676              		.loc 7 115 41 view .LVU817
 3677 01a8 8246     		mov	r10, r0
 3678              	.LVL237:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3679              		.loc 7 115 41 view .LVU818
 3680              	.LBE3984:
 3681              	.LBE3985:
 3682              	.LBE3986:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 3683              		.loc 4 2087 23 view .LVU819
 3684 01aa FFF7FEFF 		bl	memset
 3685              	.LVL238:
 3686              	.LBB3987:
 3687              	.LBI3987:
 3688              		.loc 9 162 7 is_stmt 1 view .LVU820
 3689              	.LBB3988:
 3690              	.LBI3988:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3691              		.loc 7 89 7 view .LVU821
 3692              	.L142:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3693              		.loc 7 89 7 is_stmt 0 view .LVU822
 3694              	.LBE3988:
 3695              	.LBE3987:
 3696              	.LBE3978:
 3697              	.LBE3977:
 3698              	.LBE3976:
 3699              	.LBE3975:
 3700              	.LBB3990:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 416


 3701              	.LBI3990:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 3702              		.loc 3 420 7 is_stmt 1 view .LVU823
 3703              	.LBB3991:
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3704              		.loc 3 421 64 is_stmt 0 view .LVU824
 3705 01ae A068     		ldr	r0, [r4, #8]
 3706              	.LVL239:
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3707              		.loc 3 421 64 view .LVU825
 3708              	.LBE3991:
 3709              	.LBE3990:
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash_aux(size_type __bkt_count, true_type)
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type* __new_buckets = _M_allocate_buckets(__bkt_count);
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_begin();
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 3710              		.loc 3 2093 30 view .LVU826
 3711 01b0 0023     		movs	r3, #0
 3712 01b2 A360     		str	r3, [r4, #8]
 3713              	.LVL240:
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__p)
 3714              		.loc 3 2095 14 is_stmt 1 view .LVU827
 3715 01b4 88B1     		cbz	r0, .L144
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
 3716              		.loc 3 2094 19 is_stmt 0 view .LVU828
 3717 01b6 9C46     		mov	ip, r3
 3718              	.LVL241:
 3719              	.L145:
 3720              	.LBB3992:
 3721              	.LBB3993:
 3722              	.LBI3993:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 3723              		.loc 4 269 7 is_stmt 1 view .LVU829
 3724 01b8 0246     		mov	r2, r0
 3725              	.LBB3994:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 3726              		.loc 4 270 53 is_stmt 0 view .LVU830
 3727 01ba 0068     		ldr	r0, [r0]
 3728              	.LVL242:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 3729              		.loc 4 270 53 view .LVU831
 3730              	.LBE3994:
 3731              	.LBE3993:
 3732              	.LBB3995:
 3733              	.LBI3995:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
 3734              		.loc 4 1388 7 is_stmt 1 view .LVU832
 3735              	.LBB3996:
 3736              	.LBB3997:
 3737              	.LBI3997:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3738              		.loc 4 431 5 view .LVU833
 3739              	.LBB3998:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 417


 3740              		.loc 4 433 7 view .LVU834
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3741              		.loc 4 433 22 is_stmt 0 view .LVU835
 3742 01bc 136A     		ldr	r3, [r2, #32]
 3743 01be B3FBF7F1 		udiv	r1, r3, r7
 3744 01c2 07FB1133 		mls	r3, r7, r1, r3
 3745              	.LVL243:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3746              		.loc 4 433 22 view .LVU836
 3747              	.LBE3998:
 3748              	.LBE3997:
 3749              	.LBE3996:
 3750              	.LBE3995:
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __next = __p->_M_next();
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::size_t __bkt
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    = __hash_code_base::_M_bucket_index(__p, __bkt_count);
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__new_buckets[__bkt])
 3751              		.loc 3 2100 22 view .LVU837
 3752 01c6 5AF82310 		ldr	r1, [r10, r3, lsl #2]
 3753              		.loc 3 2100 4 view .LVU838
 3754 01ca 71B3     		cbz	r1, .L183
 3755              	.LVL244:
 3756              		.loc 3 2100 4 view .LVU839
 3757              	.LBE3992:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3758              		.loc 3 2095 14 is_stmt 1 view .LVU840
 3759              	.LBB3999:
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = _M_before_begin._M_nxt;
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
 3760              		.loc 3 2111 44 is_stmt 0 view .LVU841
 3761 01cc 0968     		ldr	r1, [r1]
 3762              		.loc 3 2111 20 view .LVU842
 3763 01ce 1160     		str	r1, [r2]
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt]->_M_nxt = __p;
 3764              		.loc 3 2112 21 view .LVU843
 3765 01d0 5AF82330 		ldr	r3, [r10, r3, lsl #2]
 3766              	.LVL245:
 3767              		.loc 3 2112 37 view .LVU844
 3768 01d4 1A60     		str	r2, [r3]
 3769              	.LBE3999:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3770              		.loc 3 2095 14 view .LVU845
 3771 01d6 0028     		cmp	r0, #0
 3772 01d8 EED1     		bne	.L145
 3773              	.LVL246:
 3774              	.L144:
 3775              	.LBB4000:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 418


 3776              	.LBI4000:
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 3777              		.loc 3 411 7 is_stmt 1 view .LVU846
 3778              	.LBB4001:
 3779              	.LBB4002:
 3780              	.LBB4003:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 3781              		.loc 3 404 2 is_stmt 0 view .LVU847
 3782 01da 039B     		ldr	r3, [sp, #12]
 3783              	.LBE4003:
 3784              	.LBE4002:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3785              		.loc 3 412 30 view .LVU848
 3786 01dc D4E90001 		ldrd	r0, r1, [r4]
 3787              	.LVL247:
 3788              	.LBB4014:
 3789              	.LBI4002:
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 3790              		.loc 3 402 7 is_stmt 1 view .LVU849
 3791              	.LBB4013:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 3792              		.loc 3 404 2 is_stmt 0 view .LVU850
 3793 01e0 8342     		cmp	r3, r0
 3794 01e2 02D0     		beq	.L148
 3795              	.LVL248:
 3796              	.LBB4004:
 3797              	.LBI4004:
 3798              		.loc 4 2093 5 is_stmt 1 view .LVU851
 3799              	.LBB4005:
 3800              	.LBB4006:
 3801              	.LBI4006:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3802              		.loc 9 157 2 view .LVU852
 3803              	.LBB4007:
 3804              	.LBI4007:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3805              		.loc 7 79 7 view .LVU853
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3806              		.loc 7 79 7 is_stmt 0 view .LVU854
 3807              	.LBE4007:
 3808              	.LBE4006:
 3809              	.LBB4008:
 3810              	.LBI4008:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3811              		.loc 6 491 7 is_stmt 1 view .LVU855
 3812              	.LBB4009:
 3813              	.LBI4009:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3814              		.loc 7 120 7 view .LVU856
 3815              	.LBB4010:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3816              		.loc 7 133 19 is_stmt 0 view .LVU857
 3817 01e4 8900     		lsls	r1, r1, #2
 3818              	.LVL249:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3819              		.loc 7 133 19 view .LVU858
 3820 01e6 FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 419


 3821              	.LVL250:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3822              		.loc 7 133 19 view .LVU859
 3823              	.LBE4010:
 3824              	.LBE4009:
 3825              	.LBE4008:
 3826              	.LBB4011:
 3827              	.LBI4011:
 3828              		.loc 9 162 7 is_stmt 1 view .LVU860
 3829              	.LBB4012:
 3830              	.LBI4012:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3831              		.loc 7 89 7 view .LVU861
 3832              	.L148:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3833              		.loc 7 89 7 is_stmt 0 view .LVU862
 3834              	.LBE4012:
 3835              	.LBE4011:
 3836              	.LBE4005:
 3837              	.LBE4004:
 3838              	.LBE4013:
 3839              	.LBE4014:
 3840              	.LBE4001:
 3841              	.LBE4000:
 3842              	.LBE3974:
 3843              	.LBE3973:
 3844              	.LBE3972:
 3845              	.LBB4024:
 3846              	.LBB4025:
 3847              	.LBB4026:
 3848              	.LBB4027:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3849              		.loc 4 433 22 view .LVU863
 3850 01ea B6FBF7F3 		udiv	r3, r6, r7
 3851              	.LBE4027:
 3852              	.LBE4026:
 3853              	.LBE4025:
 3854              	.LBE4024:
 3855              	.LBB4031:
 3856              	.LBB4021:
 3857              	.LBB4018:
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __p = __next;
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __bkt_count;
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = __new_buckets;
 3858              		.loc 3 2119 18 view .LVU864
 3859 01ee C4E900A7 		strd	r10, r7, [r4]
 3860              	.LVL251:
 3861              		.loc 3 2119 18 view .LVU865
 3862              	.LBE4018:
 3863              	.LBE4021:
 3864              	.LBE4031:
 3865              	.LBB4032:
 3866              	.LBI4024:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 420


 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 3867              		.loc 3 681 7 is_stmt 1 view .LVU866
 3868              	.LBB4030:
 3869              	.LBI4025:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 3870              		.loc 4 1383 7 view .LVU867
 3871              	.LBB4029:
 3872              	.LBI4026:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3873              		.loc 4 431 5 view .LVU868
 3874              	.LBB4028:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3875              		.loc 4 433 7 view .LVU869
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3876              		.loc 4 433 22 is_stmt 0 view .LVU870
 3877 01f2 07FB1367 		mls	r7, r7, r3, r6
 3878              	.LVL252:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3879              		.loc 4 433 22 view .LVU871
 3880              	.LBE4028:
 3881              	.LBE4029:
 3882              	.LBE4030:
 3883              	.LBE4032:
 3884              	.LBB4033:
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
 3885              		.loc 4 1394 7 is_stmt 1 view .LVU872
 3886              	.LBE4033:
 3887              	.LBB4034:
 3888              	.LBB3966:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3889              		.loc 3 1599 21 is_stmt 0 view .LVU873
 3890 01f6 5AF82730 		ldr	r3, [r10, r7, lsl #2]
 3891 01fa 0AEB8702 		add	r2, r10, r7, lsl #2
 3892              	.LBE3966:
 3893              	.LBE4034:
 3894              	.LBB4035:
 3895              	.LBB3956:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3896              		.loc 4 1395 27 view .LVU874
 3897 01fe C8F82060 		str	r6, [r8, #32]
 3898              	.LVL253:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3899              		.loc 4 1395 27 view .LVU875
 3900              	.LBE3956:
 3901              	.LBE4035:
 3902              	.LBB4036:
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3903              		.loc 3 1595 5 is_stmt 1 view .LVU876
 3904              	.LBB3967:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3905              		.loc 3 1599 7 is_stmt 0 view .LVU877
 3906 0202 002B     		cmp	r3, #0
 3907 0204 92D1     		bne	.L184
 3908              	.LVL254:
 3909              	.L149:
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 3910              		.loc 3 1611 37 view .LVU878
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 421


 3911 0206 A368     		ldr	r3, [r4, #8]
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
 3912              		.loc 3 1612 27 view .LVU879
 3913 0208 C4F80880 		str	r8, [r4, #8]
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 3914              		.loc 3 1611 19 view .LVU880
 3915 020c C8F80030 		str	r3, [r8]
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
 3916              		.loc 3 1613 4 view .LVU881
 3917 0210 3BB1     		cbz	r3, .L151
 3918              	.LVL255:
 3919              	.LBB3959:
 3920              	.LBI3959:
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 3921              		.loc 3 677 7 is_stmt 1 view .LVU882
 3922              	.LBB3960:
 3923              	.LBB3961:
 3924              	.LBI3961:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
 3925              		.loc 4 1388 7 view .LVU883
 3926              	.LBB3962:
 3927              	.LBB3963:
 3928              	.LBI3963:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3929              		.loc 4 431 5 view .LVU884
 3930              	.LBB3964:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3931              		.loc 4 433 7 view .LVU885
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3932              		.loc 4 433 22 is_stmt 0 view .LVU886
 3933 0212 1B6A     		ldr	r3, [r3, #32]
 3934 0214 6168     		ldr	r1, [r4, #4]
 3935 0216 B3FBF1F0 		udiv	r0, r3, r1
 3936 021a 01FB1033 		mls	r3, r1, r0, r3
 3937              	.LBE3964:
 3938              	.LBE3963:
 3939              	.LBE3962:
 3940              	.LBE3961:
 3941              	.LBE3960:
 3942              	.LBE3959:
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
 3943              		.loc 3 1616 53 view .LVU887
 3944 021e 4AF82380 		str	r8, [r10, r3, lsl #2]
 3945              	.L151:
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3946              		.loc 3 1617 25 view .LVU888
 3947 0222 04F10803 		add	r3, r4, #8
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3948              		.loc 3 1617 22 view .LVU889
 3949 0226 1360     		str	r3, [r2]
 3950 0228 87E7     		b	.L150
 3951              	.LVL256:
 3952              	.L183:
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3953              		.loc 3 1617 22 view .LVU890
 3954              	.LBE3967:
 3955              	.LBE4036:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 422


 3956              	.LBB4037:
 3957              	.LBB4022:
 3958              	.LBB4019:
 3959              	.LBB4015:
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 3960              		.loc 3 2102 38 view .LVU891
 3961 022a A168     		ldr	r1, [r4, #8]
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 3962              		.loc 3 2102 20 view .LVU892
 3963 022c 1160     		str	r1, [r2]
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
 3964              		.loc 3 2103 31 view .LVU893
 3965 022e 2146     		mov	r1, r4
 3966 0230 41F8082F 		str	r2, [r1, #8]!
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
 3967              		.loc 3 2104 29 view .LVU894
 3968 0234 4AF82310 		str	r1, [r10, r3, lsl #2]
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
 3969              		.loc 3 2105 8 view .LVU895
 3970 0238 1168     		ldr	r1, [r2]
 3971 023a 29B1     		cbz	r1, .L153
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
 3972              		.loc 3 2106 31 view .LVU896
 3973 023c 4AF82C20 		str	r2, [r10, ip, lsl #2]
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3974              		.loc 3 2107 21 view .LVU897
 3975 0240 9C46     		mov	ip, r3
 3976              	.LVL257:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3977              		.loc 3 2107 21 view .LVU898
 3978              	.LBE4015:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3979              		.loc 3 2095 14 is_stmt 1 view .LVU899
 3980 0242 0028     		cmp	r0, #0
 3981 0244 B8D1     		bne	.L145
 3982              	.LVL258:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3983              		.loc 3 2095 14 is_stmt 0 view .LVU900
 3984 0246 C8E7     		b	.L144
 3985              	.LVL259:
 3986              	.L153:
 3987              	.LBB4016:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3988              		.loc 3 2107 21 view .LVU901
 3989 0248 9C46     		mov	ip, r3
 3990              	.LVL260:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3991              		.loc 3 2107 21 view .LVU902
 3992              	.LBE4016:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3993              		.loc 3 2095 14 is_stmt 1 view .LVU903
 3994 024a 0028     		cmp	r0, #0
 3995 024c B4D1     		bne	.L145
 3996              	.LVL261:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3997              		.loc 3 2095 14 is_stmt 0 view .LVU904
 3998 024e C4E7     		b	.L144
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 423


 3999              	.LVL262:
 4000              	.L178:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4001              		.loc 3 2095 14 view .LVU905
 4002              	.LBE4019:
 4003              	.LBE4022:
 4004              	.LBE4037:
 4005              	.LBE4043:
 4006              	.LBE4058:
 4007              	.LBE4068:
 4008              	.LBE4079:
 4009              	.LBE4089:
 4010              	.LBE4099:
 4011              	.LBB4100:
 4012              	.LBB3736:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 4013              		.loc 3 394 23 view .LVU906
 4014 0250 A761     		str	r7, [r4, #24]
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4015              		.loc 3 395 14 view .LVU907
 4016 0252 039F     		ldr	r7, [sp, #12]
 4017 0254 0FE7     		b	.L129
 4018              	.LVL263:
 4019              	.L182:
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4020              		.loc 3 395 14 view .LVU908
 4021              	.LBE3736:
 4022              	.LBE4100:
 4023              	.LBB4101:
 4024              	.LBB4090:
 4025              	.LBB4080:
 4026              	.LBB4069:
 4027              	.LBB4059:
 4028              	.LBB4044:
 4029              	.LBB4038:
 4030              	.LBB4023:
 4031              	.LBB4020:
 4032              	.LBB4017:
 4033              	.LBB3989:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 4034              		.loc 3 394 23 view .LVU909
 4035 0256 C4F818A0 		str	r10, [r4, #24]
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4036              		.loc 3 395 14 view .LVU910
 4037 025a DDF80CA0 		ldr	r10, [sp, #12]
 4038 025e A6E7     		b	.L142
 4039              	.LVL264:
 4040              	.L143:
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4041              		.loc 3 395 14 view .LVU911
 4042              	.LBE3989:
 4043              	.LBE4017:
 4044              	.LBE4020:
 4045              	.LBE4023:
 4046              	.LBE4038:
 4047              	.LBE4044:
 4048              	.LBE4059:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 424


 4049              	.LBE4069:
 4050              	.LBE4080:
 4051              	.LBE4090:
 4052              	.LBE4101:
 4053              	.LBB4102:
 4054              	.LBB3737:
 4055              	.LBB3734:
 4056              	.LBB3733:
 4057              	.LBB3732:
 4058              	.LBB3728:
 4059              	.LBB3726:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4060              		.loc 7 106 26 view .LVU912
 4061 0260 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 4062              	.LVL265:
 4063              	.L180:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4064              		.loc 7 106 26 view .LVU913
 4065              	.LBE3726:
 4066              	.LBE3728:
 4067              	.LBE3732:
 4068              	.LBE3733:
 4069              	.LBE3734:
 4070              	.LBE3737:
 4071              	.LBE4102:
 4072              	.LBB4103:
 4073              	.LBB4091:
 4074              	.LBB4081:
 4075              	.LBB4070:
 4076              	.LBB4060:
 4077              	.LBB3949:
 4078              	.LBB3943:
 4079              	.LBB3937:
 4080              	.LBB3918:
 4081              	.LBB3911:
 4082              	.LBB3905:
 4083              	.LBB3899:
 4084              	.LBB3894:
 4085              	.LBB3889:
 4086              	.LBB3869:
 4087              	.LBB3865:
 4088              	.LBB3861:
 4089              	.LBB3857:
 4090              	.LBB3853:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 4091              		.loc 25 212 28 view .LVU914
 4092 0264 0348     		ldr	r0, .L185+8
 4093              	.LVL266:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 4094              		.loc 25 212 28 view .LVU915
 4095 0266 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 4096              	.LVL267:
 4097              	.L186:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 4098              		.loc 25 212 28 view .LVU916
 4099 026a 00BF     		.align	2
 4100              	.L185:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 425


 4101 026c B76DDBB6 		.word	-1227133513
 4102 0270 07690FC7 		.word	-955291385
 4103 0274 00000000 		.word	.LC1
 4104              	.LBE3853:
 4105              	.LBE3857:
 4106              	.LBE3861:
 4107              	.LBE3865:
 4108              	.LBE3869:
 4109              	.LBE3889:
 4110              	.LBE3894:
 4111              	.LBE3899:
 4112              	.LBE3905:
 4113              	.LBE3911:
 4114              	.LBE3918:
 4115              	.LBE3937:
 4116              	.LBE3943:
 4117              	.LBE3949:
 4118              	.LBE4060:
 4119              	.LBE4070:
 4120              	.LBE4081:
 4121              	.LBE4091:
 4122              	.LBE4103:
 4123              	.LBE4113:
 4124              		.cfi_endproc
 4125              	.LFE6404:
 4127              		.weak	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_EN
 4128              		.thumb_set _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaI
 4129              		.section	.rodata._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.
 4130              		.align	2
 4131              	.LC2:
 4132 0000 5F4D6170 		.ascii	"_Map_base::at\000"
 4132      5F626173 
 4132      653A3A61 
 4132      7400
 4133              		.section	.text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",%
 4134              		.align	1
 4135              		.p2align 2,,3
 4136              		.weak	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 4137              		.syntax unified
 4138              		.thumb
 4139              		.thumb_func
 4140              		.fpu fpv5-d16
 4142              	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 4143              	.LVL268:
 4144              	.LFB5416:
 4145              		.file 28 "utils.h"
   1:utils.h       **** #pragma once
   2:utils.h       **** #include <vector>
   3:utils.h       **** #include <unordered_map>
   4:utils.h       **** #include <cmath>
   5:utils.h       **** #include <string>
   6:utils.h       **** #include "InstrumentState.h"
   7:utils.h       **** 
   8:utils.h       **** /*
   9:utils.h       **** NO BASS FLAG = 255
  10:utils.h       **** Used by the Sequencer to signal to the ChordSynth
  11:utils.h       **** Not to play a bass note on a given 16th
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 426


  12:utils.h       **** */
  13:utils.h       **** constexpr uint8_t NBF = 255;
  14:utils.h       **** 
  15:utils.h       **** inline int note_name_to_midi(const std::string& note) {
 4146              		.loc 28 15 55 is_stmt 1 view -0
 4147              		.cfi_startproc
 4148              		@ args = 0, pretend = 0, frame = 360
 4149              		@ frame_needed = 0, uses_anonymous_args = 0
  16:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 4150              		.loc 28 16 5 view .LVU918
  15:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 4151              		.loc 28 15 55 is_stmt 0 view .LVU919
 4152 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4153              		.cfi_def_cfa_offset 36
 4154              		.cfi_offset 4, -36
 4155              		.cfi_offset 5, -32
 4156              		.cfi_offset 6, -28
 4157              		.cfi_offset 7, -24
 4158              		.cfi_offset 8, -20
 4159              		.cfi_offset 9, -16
 4160              		.cfi_offset 10, -12
 4161              		.cfi_offset 11, -8
 4162              		.cfi_offset 14, -4
  17:utils.h       ****     {"C", 60}, {"Db", 61}, {"D", 62}, {"Eb", 63},
  18:utils.h       ****     {"E", 64}, {"F", 65}, {"Gb", 66}, {"G", 67},
  19:utils.h       ****     {"Ab", 68}, {"A", 69}, {"Bb", 70}, {"B", 71}
  20:utils.h       ****     };
 4163              		.loc 28 20 5 view .LVU920
 4164 0004 754F     		ldr	r7, .L204
  15:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 4165              		.loc 28 15 55 view .LVU921
 4166 0006 E1B0     		sub	sp, sp, #388
 4167              		.cfi_def_cfa_offset 424
  15:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 4168              		.loc 28 15 55 view .LVU922
 4169 0008 0646     		mov	r6, r0
 4170              		.loc 28 20 5 view .LVU923
 4171 000a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4172 000c BFF35B8F 		dmb	ish
 4173 0010 13F00105 		ands	r5, r3, #1
 4174 0014 1AD0     		beq	.L203
 4175              	.LVL269:
 4176              	.L189:
  21:utils.h       ****     return fourth_octave.at(note);
 4177              		.loc 28 21 5 is_stmt 1 view .LVU924
 4178              	.LBB4841:
 4179              	.LBI4841:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _Hashtable _M_h;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     public:
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // typedefs:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Public typedefs.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_type	key_type;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::value_type	value_type;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 427


 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::mapped_type	mapped_type;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::hasher	hasher;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_equal	key_equal;
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::allocator_type allocator_type;
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Iterator-related typedefs.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::pointer		pointer;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_pointer	const_pointer;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::reference		reference;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_reference	const_reference;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::iterator		iterator;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_iterator	const_iterator;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::local_iterator	local_iterator;
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_local_iterator	const_local_iterator;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::size_type		size_type;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::difference_type	difference_type;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using node_type = typename _Hashtable::node_type;
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using insert_return_type = typename _Hashtable::insert_return_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //construct/destroy/copy
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Default constructor.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map() = default;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Default constructor creates no elements.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__n, __hf, __eql, __a)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from a range.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  An input iterator.
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  An input iterator.
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements from
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  [__first,__last).  This is linear in N (where N is
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  distance(__first,__last)).
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 428


 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n = 0,
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const hasher& __hf = hasher(),
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const key_equal& __eql = key_equal(),
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a = allocator_type())
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__first, __last, __n, __hf, __eql, __a)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy constructor.
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map&) = default;
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move constructor.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&&) = default;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Creates an %unordered_map with no elements.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a An allocator object.
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const allocator_type& __a)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__a)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Copy constructor with allocator argument.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __uset  Input %unordered_map to copy.
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __a  An allocator object.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map& __umap,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__umap._M_h, __a)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Move constructor with allocator argument.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __uset Input %unordered_map to move.
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a    An allocator object.
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&& __umap,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(std::move(__umap._M_h), __a)
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from an initializer_list.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a  An allocator object.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements in the
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  list. This is linear in N (where N is @a __l.size()).
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 429


 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__l, __n, __hf, __eql, __a)
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const allocator_type& __a)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, hasher(), key_equal(), __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const hasher& __hf,
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, __hf, key_equal(), __a)
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n,
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: unordered_map(__first, __last, __n, hasher(), key_equal(), __a)
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n, const hasher& __hf,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  : unordered_map(__first, __last, __n, __hf, key_equal(), __a)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n,
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, hasher(), key_equal(), __a)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n, const hasher& __hf,
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, __hf, key_equal(), __a)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy assignment operator.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(const unordered_map&) = default;
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move assignment operator.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(unordered_map&&) = default;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  %Unordered_map list assignment operator.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function fills an %unordered_map with copies of the elements in
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the initializer list @a __l.
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 430


 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the assignment completely changes the %unordered_map and
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  that the resulting %unordered_map's size is the same as the number
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  of elements assigned.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(initializer_list<value_type> __l)
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	_M_h = __l;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return *this;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the allocator object used by the %unordered_map.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       allocator_type
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       get_allocator() const noexcept
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.get_allocator(); }
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // size and capacity:
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns true if the %unordered_map is empty.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _GLIBCXX_NODISCARD bool
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       empty() const noexcept
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.empty(); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the size of the %unordered_map.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size() const noexcept
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.size(); }
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the maximum size of the %unordered_map.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       max_size() const noexcept
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.max_size(); }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // iterators.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points to the first element in the
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() noexcept
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points to the first
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() const noexcept
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cbegin() const noexcept
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 431


 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points one past the last element in
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() noexcept
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() const noexcept
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cend() const noexcept
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // modifiers.
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        part of the pair constructor).
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	std::pair<iterator, bool>
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace(_Args&&... __args)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         std::piecewise_contruct for passing arguments to each
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 432


 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         part of the pair constructor).
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	iterator
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__pos, std::forward<_Args>(__args)...); }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const_iterator __pos)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__glibcxx_assert(__pos != end());
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return _M_h.extract(__pos);
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const key_type& __key)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.extract(__key); }
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert_return_type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(node_type&& __nh)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator, node_type&& __nh)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)).position; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define __cpp_lib_unordered_map_try_emplace 201411
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 433


 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If a %pair is not inserted, this function has no effect.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the pair
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 434


 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does. However, if insertion did not take place,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  this function has no effect.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                     _Args&&... __args)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(__k),
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(std::move(__k)),
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	     creation of pairs).
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 435


 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const value_type& __x)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__x); }
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(value_type&& __x)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(std::move(__x)); }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value,
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      pair<iterator, bool>>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_Pair&& __x)
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         { return _M_h.emplace(std::forward<_Pair>(__x)); }
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                 pair should be inserted.
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               of pairs).
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.  Note that the first parameter is only a hint and can
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, const value_type& __x)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, __x); }
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, value_type&& __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, std::move(__x)); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 436


 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value, iterator>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(const_iterator __hint, _Pair&& __x)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__hint, std::forward<_Pair>(__x)); }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief A template function that attempts to insert a range of
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                   inserted.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_InputIterator __first, _InputIterator __last)
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ _M_h.insert(__first, __last); }
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a list of elements into the %unordered_map.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  A std::initializer_list<value_type> of elements
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               to be inserted.
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(initializer_list<value_type> __l)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.insert(__l); }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the map.
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered_map, the .second of 
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 437


 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  pair should be inserted.
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.         
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered map, the .second of
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 438


 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, const key_type& __k,
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                          _Obj&& __obj)
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(__k),
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases an element from an %unordered_map.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator pointing to the element immediately following
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          @a __position prior to the element being erased. If no such
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          element exists, end() is returned.
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases an element, pointed to by the given iterator,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  from an %unordered_map.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __position)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // LWG 2059.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(iterator __position)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 439


 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases elements according to the provided key.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of element to be erased.
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  The number of elements erased.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases all the elements located by the given key from
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  an %unordered_map. For an %unordered_map the result of this function
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  can only be 0 (not present) or 1 (present).
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const key_type& __x)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__x); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases a [__first,__last) range of elements from an
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  erased.
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __last  Iterator pointing to the end of the range to
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                be erased.
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return The iterator @a __last.
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases a sequence of elements from an %unordered_map.
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __first, const_iterator __last)
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__first, __last); }
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Erases all elements in an %unordered_map.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if the
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements themselves are pointers, the pointed-to memory is not touched
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       clear() noexcept
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.clear(); }
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Swaps data with another %unordered_map.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  An %unordered_map of the same element and allocator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  types.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This exchanges the elements between two %unordered_map in constant
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  time.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the global std::swap() function is specialized such that
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  std::swap(m1,m2) will feed to this function.
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 440


 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       swap(unordered_map& __x)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       noexcept( noexcept(_M_h.swap(__x._M_h)) )
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.swap(__x._M_h); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename, typename, typename>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	friend class std::_Hash_merge_helper;
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // observers.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the hash functor object with which the %unordered_map was
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hasher
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hash_function() const
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.hash_function(); }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the key comparison object with which the %unordered_map was
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_equal
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_eq() const
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.key_eq(); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // lookup.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Tries to locate an element in an %unordered_map.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 441


 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           found.
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function takes a key and tries to locate the element with which
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the key matches.  If successful the function returns an iterator
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  pointing to the sought after element.  If unsuccessful it returns the
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  past-the-end ( @c end() ) iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x)
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x) const
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds the number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to count.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Number of elements with specified key.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function only makes sense for %unordered_multimap; for
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map the result will either be 0 (not present) or 1
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  (present).
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       count(const key_type& __x) const
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.count(__x); }
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201703L
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds whether an element with the given key exists.
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of elements to be located.
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  True if there is any element with the specified key.
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       bool
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       contains(const key_type& __x) const
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x) != _M_h.end(); }
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Finds a subsequence matching given key.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Pair of iterators that possibly points to the subsequence
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           matching given key.
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function probably only makes sense for %unordered_multimap.
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, iterator>
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x)
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<const_iterator, const_iterator>
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x) const
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 442


 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Subscript ( @c [] ) access to %unordered_map data.
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )operator.  Returns
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  data associated with the key specified in subscript.  If the key does
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  not exist, a pair with that key is created using default values, which
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  is then returned.
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Lookup requires constant time.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](const key_type& __k)
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[__k]; }
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](key_type&& __k)
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Access to %unordered_map data.
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data whose key is equal to @a __k, if
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           such a data is present in the %unordered_map.
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       at(const key_type& __k)
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.at(__k); }
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const mapped_type&
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       at(const key_type& __k) const
 4180              		.loc 2 1004 7 view .LVU925
 4181              	.LBB4842:
 4182              	.LBI4842:
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 4183              		.loc 4 774 5 view .LVU926
 4184              	.LBB4843:
 4185              	.LBB4844:
 4186              	.LBI4844:
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 4187              		.loc 4 1375 7 view .LVU927
 4188              	.LBB4845:
 4189              	.LBI4845:
6812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return std::_Hash_impl::hash(__s.data(), __s.length()); }
 4190              		.loc 5 6812 7 view .LVU928
 4191              	.LBE4845:
 4192              	.LBE4844:
 4193              	.LBE4843:
 4194              	.LBE4842:
 4195              	.LBE4841:
 4196              		.loc 5 6813 9 view .LVU929
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 443


 4197              	.LBB4886:
 4198              	.LBB4884:
 4199              	.LBB4882:
 4200              	.LBB4858:
 4201              	.LBB4855:
 4202              	.LBB4846:
 4203              	.LBI4846:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 4204              		.loc 5 2311 7 view .LVU930
 4205              	.LBB4847:
 4206              	.LBI4847:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 4207              		.loc 5 186 7 view .LVU931
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 4208              		.loc 5 186 7 is_stmt 0 view .LVU932
 4209              	.LBE4847:
 4210              	.LBE4846:
 4211              	.LBB4848:
 4212              	.LBI4848:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 4213              		.loc 5 907 7 is_stmt 1 view .LVU933
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 4214              		.loc 5 907 7 is_stmt 0 view .LVU934
 4215              	.LBE4848:
 4216              	.LBB4849:
 4217              	.LBI4849:
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
 4218              		.loc 24 195 5 is_stmt 1 view .LVU935
 4219              	.LBB4850:
 4220              		.loc 24 197 7 view .LVU936
 4221              	.LBE4850:
 4222              	.LBE4849:
 4223              	.LBE4855:
 4224              	.LBE4858:
 4225              	.LBB4859:
 4226              	.LBB4860:
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4227              		.loc 3 682 60 is_stmt 0 view .LVU937
 4228 0016 724C     		ldr	r4, .L204+4
 4229              	.LBE4860:
 4230              	.LBE4859:
 4231              	.LBB4873:
 4232              	.LBB4856:
 4233              	.LBB4853:
 4234              	.LBB4851:
 4235              		.loc 24 197 25 view .LVU938
 4236 0018 724A     		ldr	r2, .L204+8
 4237 001a D6E90001 		ldrd	r0, r1, [r6]
 4238 001e FFF7FEFF 		bl	_ZSt11_Hash_bytesPKvjj
 4239              	.LVL270:
 4240              		.loc 24 197 25 view .LVU939
 4241              	.LBE4851:
 4242              	.LBE4853:
 4243              	.LBE4856:
 4244              	.LBE4873:
 4245              	.LBB4874:
 4246              	.LBB4870:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 444


 4247              	.LBB4861:
 4248              	.LBB4862:
 4249              	.LBB4863:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4250              		.loc 4 433 22 view .LVU940
 4251 0022 6168     		ldr	r1, [r4, #4]
 4252              	.LBE4863:
 4253              	.LBE4862:
 4254              	.LBE4861:
 4255              	.LBE4870:
 4256              	.LBE4874:
 4257              	.LBB4875:
 4258              	.LBB4857:
 4259              	.LBB4854:
 4260              	.LBB4852:
 4261              		.loc 24 197 25 view .LVU941
 4262 0024 0346     		mov	r3, r0
 4263              	.LVL271:
 4264              		.loc 24 197 25 view .LVU942
 4265              	.LBE4852:
 4266              	.LBE4854:
 4267              	.LBE4857:
 4268              	.LBE4875:
 4269              	.LBB4876:
 4270              	.LBI4859:
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 4271              		.loc 3 681 7 is_stmt 1 view .LVU943
 4272              	.LBB4871:
 4273              	.LBB4868:
 4274              	.LBI4861:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 4275              		.loc 4 1383 7 view .LVU944
 4276              	.LBB4866:
 4277              	.LBI4862:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 4278              		.loc 4 431 5 view .LVU945
 4279              	.LBB4864:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4280              		.loc 4 433 7 view .LVU946
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4281              		.loc 4 433 7 is_stmt 0 view .LVU947
 4282              	.LBE4864:
 4283              	.LBE4866:
 4284              	.LBE4868:
 4285              	.LBE4871:
 4286              	.LBE4876:
 4287              	.LBB4877:
 4288              	.LBI4877:
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 4289              		.loc 3 690 7 is_stmt 1 view .LVU948
 4290              	.LBB4878:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 4291              		.loc 3 693 47 is_stmt 0 view .LVU949
 4292 0026 2046     		mov	r0, r4
 4293              	.LVL272:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 4294              		.loc 3 693 47 view .LVU950
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 445


 4295 0028 3246     		mov	r2, r6
 4296              	.LBE4878:
 4297              	.LBE4877:
 4298              	.LBB4880:
 4299              	.LBB4872:
 4300              	.LBB4869:
 4301              	.LBB4867:
 4302              	.LBB4865:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4303              		.loc 4 433 22 view .LVU951
 4304 002a B3FBF1F4 		udiv	r4, r3, r1
 4305              	.LBE4865:
 4306              	.LBE4867:
 4307              	.LBE4869:
 4308              	.LBE4872:
 4309              	.LBE4880:
 4310              	.LBB4881:
 4311              	.LBB4879:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 4312              		.loc 3 693 47 view .LVU952
 4313 002e 01FB1431 		mls	r1, r1, r4, r3
 4314              	.LVL273:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 4315              		.loc 3 693 47 view .LVU953
 4316 0032 FFF7FEFF 		bl	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt
 4317              	.LVL274:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 4318              		.loc 3 694 2 view .LVU954
 4319 0036 0028     		cmp	r0, #0
 4320 0038 00F0CC80 		beq	.L193
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 4321              		.loc 3 695 55 view .LVU955
 4322 003c 0368     		ldr	r3, [r0]
 4323              	.LVL275:
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 4324              		.loc 3 695 55 view .LVU956
 4325              	.LBE4879:
 4326              	.LBE4881:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 4327              		.loc 4 784 7 view .LVU957
 4328 003e 002B     		cmp	r3, #0
 4329 0040 00F0C880 		beq	.L193
 4330              	.LVL276:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 4331              		.loc 4 784 7 view .LVU958
 4332              	.LBE4882:
 4333              	.LBE4884:
 4334              	.LBE4886:
  22:utils.h       **** }
 4335              		.loc 28 22 1 view .LVU959
 4336 0044 D869     		ldr	r0, [r3, #28]
 4337 0046 61B0     		add	sp, sp, #388
 4338              		.cfi_remember_state
 4339              		.cfi_def_cfa_offset 36
 4340              		@ sp needed
 4341 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4342              	.LVL277:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 446


 4343              	.L203:
 4344              		.cfi_restore_state
  20:utils.h       ****     return fourth_octave.at(note);
 4345              		.loc 28 20 5 discriminator 1 view .LVU960
 4346 004c 3846     		mov	r0, r7
 4347              	.LVL278:
  20:utils.h       ****     return fourth_octave.at(note);
 4348              		.loc 28 20 5 discriminator 1 view .LVU961
 4349 004e FFF7FEFF 		bl	__cxa_guard_acquire
 4350              	.LVL279:
 4351 0052 0028     		cmp	r0, #0
 4352 0054 DFD0     		beq	.L189
 4353              	.LVL280:
 4354              	.LBB4887:
 4355              	.LBI4887:
 4356              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU962
 4357              	.LBB4888:
 4358              	.LBB4889:
 4359              	.LBB4890:
 4360              	.LBI4890:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4361              		.loc 27 76 5 discriminator 2 view .LVU963
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4362              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU964
 4363              	.LBE4890:
 4364              	.LBB4891:
 4365              	.LBI4891:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4366              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU965
 4367              	.LBB4892:
 4368              	.LBI4892:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4369              		.loc 7 79 7 discriminator 2 view .LVU966
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4370              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU967
 4371              	.LBE4892:
 4372              	.LBE4891:
 4373              	.LBB4893:
 4374              	.LBI4893:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 4375              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU968
 4376              	.LBB4894:
 4377              	.LBB4895:
 4378              	.LBI4895:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4379              		.loc 5 190 7 discriminator 2 view .LVU969
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4380              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU970
 4381              	.LBE4895:
 4382              	.LBB4896:
 4383              	.LBI4896:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4384              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU971
 4385              	.LBB4897:
 4386              	.LBB4898:
 4387              	.LBB4899:
 4388              	.LBI4899:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 447


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4389              		.loc 9 147 7 discriminator 2 view .LVU972
 4390              	.LBB4900:
 4391              	.LBI4900:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4392              		.loc 7 82 7 discriminator 2 view .LVU973
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4393              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU974
 4394              	.LBE4900:
 4395              	.LBE4899:
 4396              	.LBE4898:
 4397              	.LBE4897:
 4398              	.LBE4896:
 4399              	.LBE4894:
 4400              	.LBE4893:
 4401              	.LBE4889:
 4402              	.LBE4888:
 4403              	.LBE4887:
 4404              	.LBB4994:
 4405              	.LBB4995:
 4406              	.LBB4996:
 4407              	.LBB4997:
 4408              	.LBB4998:
 4409              	.LBB4999:
 4410              	.LBB5000:
 4411              	.LBB5001:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4412              		.loc 5 157 35 discriminator 2 view .LVU975
 4413 0056 0DF1540A 		add	r10, sp, #84
 4414              	.LBE5001:
 4415              	.LBE5000:
 4416              	.LBE4999:
 4417              	.LBE4998:
 4418              	.LBE4997:
 4419              	.LBE4996:
 4420              	.LBE4995:
 4421              	.LBE4994:
 4422              	.LBB5114:
 4423              	.LBB4987:
 4424              	.LBB4980:
 4425              	.LBB4969:
 4426              	.LBB4961:
 4427              	.LBB4907:
 4428              	.LBB4904:
 4429              	.LBB4901:
 4430 005a 0EAB     		add	r3, sp, #56
 4431              	.LVL281:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4432              		.loc 5 157 35 discriminator 2 view .LVU976
 4433              	.LBE4901:
 4434              	.LBE4904:
 4435              	.LBE4907:
 4436              	.LBE4961:
 4437              	.LBE4969:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 4438              		.loc 8 353 64 discriminator 2 view .LVU977
 4439 005c 4FF03C0B 		mov	fp, #60
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 448


 4440              	.LBB4970:
 4441              	.LBB4962:
 4442              	.LBB4908:
 4443              	.LBB4905:
 4444              	.LBB4902:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4445              		.loc 5 157 35 discriminator 2 view .LVU978
 4446 0060 0CAC     		add	r4, sp, #48
 4447              	.LVL282:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4448              		.loc 5 157 35 discriminator 2 view .LVU979
 4449              	.LBE4902:
 4450              	.LBE4905:
 4451              	.LBE4908:
 4452              	.LBE4962:
 4453              	.LBE4970:
 4454              	.LBE4980:
 4455              	.LBE4987:
 4456              	.LBE5114:
 4457              	.LBB5115:
 4458              	.LBB5106:
 4459              	.LBB5098:
 4460              	.LBB5084:
 4461              	.LBB5076:
 4462              	.LBB5008:
 4463              	.LBB5006:
 4464              	.LBB5004:
 4465 0062 C4F81CA0 		str	r10, [r4, #28]
 4466              	.LBE5004:
 4467              	.LBE5006:
 4468              	.LBE5008:
 4469              	.LBE5076:
 4470              	.LBE5084:
 4471              		.loc 8 353 64 discriminator 2 view .LVU980
 4472 0066 4FF03D0A 		mov	r10, #61
 4473              	.LBB5085:
 4474              	.LBB5077:
 4475              	.LBB5009:
 4476              	.LBB5010:
 4477              	.LBB5011:
 4478              	.LBB5012:
 4479              	.LBB5013:
 4480              	.LBB5014:
 4481              	.LBB5015:
 4482              	.LBB5016:
 4483              	.LBB5017:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4484              		.loc 5 183 26 discriminator 2 view .LVU981
 4485 006a 0222     		movs	r2, #2
 4486              	.LBE5017:
 4487              	.LBE5016:
 4488              	.LBE5015:
 4489              	.LBE5014:
 4490              	.LBE5013:
 4491              	.LBE5012:
 4492              	.LBE5011:
 4493              	.LBE5010:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 449


 4494              	.LBE5009:
 4495              	.LBE5077:
 4496              	.LBE5085:
 4497              	.LBE5098:
 4498              	.LBE5106:
 4499              	.LBE5115:
 4500              	.LBB5116:
 4501              	.LBB5117:
 4502              	.LBB5118:
 4503              	.LBB5119:
 4504              	.LBB5120:
 4505              	.LBB5121:
 4506              	.LBB5122:
 4507              	.LBB5123:
 4508              	.LBB5124:
 4509              	.LBB5125:
 4510              	.LBB5126:
 4511              	.LBB5127:
 4512              	.LBB5128:
 4513              	.LBB5129:
 4514              	.LBB5130:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4515              		.loc 21 322 14 discriminator 2 view .LVU982
 4516 006c 4FF0450C 		mov	ip, #69
 4517              	.LBE5130:
 4518              	.LBE5129:
 4519              	.LBE5128:
 4520              	.LBE5127:
 4521              	.LBE5126:
 4522              	.LBE5125:
 4523              	.LBE5124:
 4524              	.LBE5123:
 4525              	.LBE5122:
 4526              	.LBE5121:
 4527              	.LBE5120:
 4528              	.LBE5119:
 4529              	.LBE5118:
 4530              	.LBE5117:
 4531              	.LBE5116:
 4532              	.LBB5209:
 4533              	.LBB5107:
 4534              	.LBB5099:
 4535              		.loc 8 353 64 discriminator 2 view .LVU983
 4536 0070 C4F834A0 		str	r10, [r4, #52]
 4537              	.LBE5099:
 4538              	.LBE5107:
 4539              	.LBE5209:
 4540              	.LBB5210:
 4541              	.LBB5211:
 4542              	.LBB5212:
 4543              	.LBB5213:
 4544              	.LBB5214:
 4545              	.LBB5215:
 4546              	.LBB5216:
 4547              	.LBB5217:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4548              		.loc 5 157 35 discriminator 2 view .LVU984
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 450


 4549 0074 0DF1700A 		add	r10, sp, #112
 4550              	.LBE5217:
 4551              	.LBE5216:
 4552              	.LBE5215:
 4553              	.LBE5214:
 4554              	.LBE5213:
 4555              	.LBE5212:
 4556              	.LBE5211:
 4557              	.LBE5210:
 4558              	.LBB5303:
 4559              	.LBB5304:
 4560              	.LBB5305:
 4561              		.loc 8 353 64 discriminator 2 view .LVU985
 4562 0078 4FF0410E 		mov	lr, #65
 4563              	.LBB5306:
 4564              	.LBB5307:
 4565              	.LBB5308:
 4566              	.LBB5309:
 4567              	.LBB5310:
 4568              	.LBB5311:
 4569              	.LBB5312:
 4570              	.LBB5313:
 4571              	.LBB5314:
 4572              	.LBB5315:
 4573              	.LBB5316:
 4574              	.LBB5317:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4575              		.loc 21 322 14 discriminator 2 view .LVU986
 4576 007c 4620     		movs	r0, #70
 4577              	.LBE5317:
 4578              	.LBE5316:
 4579              	.LBE5315:
 4580              	.LBE5314:
 4581              	.LBE5313:
 4582              	.LBE5312:
 4583              	.LBE5311:
 4584              	.LBE5310:
 4585              	.LBE5309:
 4586              	.LBE5308:
 4587              	.LBE5307:
 4588              	.LBE5306:
 4589              	.LBE5305:
 4590              	.LBE5304:
 4591              	.LBE5303:
 4592              	.LBB5396:
 4593              	.LBB5295:
 4594              	.LBB5287:
 4595              	.LBB5275:
 4596              	.LBB5269:
 4597              	.LBB5224:
 4598              	.LBB5222:
 4599              	.LBB5220:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4600              		.loc 5 157 35 discriminator 2 view .LVU987
 4601 007e C4F838A0 		str	r10, [r4, #56]
 4602              	.LBE5220:
 4603              	.LBE5222:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 451


 4604              	.LBE5224:
 4605              	.LBE5269:
 4606              	.LBE5275:
 4607              		.loc 8 353 64 discriminator 2 view .LVU988
 4608 0082 4FF03E0A 		mov	r10, #62
 4609              	.LBE5287:
 4610              	.LBE5295:
 4611              	.LBE5396:
 4612              	.LBB5397:
 4613              	.LBB5398:
 4614              	.LBB5399:
 4615 0086 4221     		movs	r1, #66
 4616              	.LBE5399:
 4617              	.LBE5398:
 4618              	.LBE5397:
 4619              	.LBB5504:
 4620              	.LBB4988:
 4621              	.LBB4981:
 4622              	.LBB4971:
 4623              	.LBB4963:
 4624              	.LBB4909:
 4625              	.LBB4910:
 4626              	.LBB4911:
 4627              	.LBB4912:
 4628              	.LBB4913:
 4629              	.LBB4914:
 4630              	.LBB4915:
 4631              	.LBB4916:
 4632              	.LBB4917:
 4633              	.LBB4918:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4634              		.loc 21 322 14 discriminator 2 view .LVU989
 4635 0088 4FF04309 		mov	r9, #67
 4636              	.LBE4918:
 4637              	.LBE4917:
 4638              	.LBE4916:
 4639              	.LBE4915:
 4640              	.LBE4914:
 4641              	.LBE4913:
 4642              	.LBE4912:
 4643              	.LBE4911:
 4644              	.LBE4910:
 4645              	.LBE4909:
 4646              	.LBE4963:
 4647              	.LBE4971:
 4648              	.LBE4981:
 4649              	.LBE4988:
 4650              	.LBE5504:
 4651              	.LBB5505:
 4652              	.LBB5296:
 4653              	.LBB5288:
 4654              		.loc 8 353 64 discriminator 2 view .LVU990
 4655 008c C4F850A0 		str	r10, [r4, #80]
 4656              	.LBE5288:
 4657              	.LBE5296:
 4658              	.LBE5505:
 4659              	.LBB5506:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 452


 4660              	.LBB5507:
 4661              	.LBB5508:
 4662              	.LBB5509:
 4663              	.LBB5510:
 4664              	.LBB5511:
 4665              	.LBB5512:
 4666              	.LBB5513:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4667              		.loc 5 157 35 discriminator 2 view .LVU991
 4668 0090 0DF18C0A 		add	r10, sp, #140
 4669              	.LBE5513:
 4670              	.LBE5512:
 4671              	.LBE5511:
 4672              	.LBE5510:
 4673              	.LBE5509:
 4674              	.LBE5508:
 4675              	.LBE5507:
 4676              	.LBE5506:
 4677              	.LBB5611:
 4678              	.LBB5297:
 4679              	.LBB5289:
 4680              	.LBB5276:
 4681              	.LBB5270:
 4682              	.LBB5225:
 4683              	.LBB5226:
 4684              	.LBB5227:
 4685              	.LBB5228:
 4686              	.LBB5229:
 4687              	.LBB5230:
 4688              	.LBB5231:
 4689              	.LBB5232:
 4690              	.LBB5233:
 4691              	.LBB5234:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4692              		.loc 21 322 14 discriminator 2 view .LVU992
 4693 0094 4FF04408 		mov	r8, #68
 4694              	.LBE5234:
 4695              	.LBE5233:
 4696              	.LBE5232:
 4697              	.LBE5231:
 4698              	.LBE5230:
 4699              	.LBE5229:
 4700              	.LBE5228:
 4701              	.LBE5227:
 4702              	.LBE5226:
 4703              	.LBE5225:
 4704              	.LBE5270:
 4705              	.LBE5276:
 4706              	.LBE5289:
 4707              	.LBE5297:
 4708              	.LBE5611:
 4709              	.LBB5612:
 4710              	.LBB4989:
 4711              	.LBB4982:
 4712              	.LBB4972:
 4713              	.LBB4964:
 4714              	.LBB4955:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 453


 4715              	.LBB4906:
 4716              	.LBB4903:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4717              		.loc 5 157 35 discriminator 2 view .LVU993
 4718 0098 2360     		str	r3, [r4]
 4719              	.LVL283:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4720              		.loc 5 157 35 discriminator 2 view .LVU994
 4721              	.LBE4903:
 4722              	.LBE4906:
 4723              	.LBE4955:
 4724              	.LBB4956:
 4725              	.LBI4956:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 4726              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU995
 4727              	.LBE4956:
 4728              	.LBE4964:
 4729              	.LBE4972:
 4730              	.LBE4982:
 4731              	.LBE4989:
 4732              	.LBE5612:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 4733              		.loc 21 357 2 discriminator 2 view .LVU996
 4734              	.LBB5613:
 4735              	.LBB4990:
 4736              	.LBB4983:
 4737              	.LBB4973:
 4738              	.LBB4965:
 4739              	.LBB4957:
 4740              	.LBI4909:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 4741              		.loc 5 263 9 discriminator 2 view .LVU997
 4742              	.LBB4951:
 4743              	.LBB4947:
 4744              	.LBI4911:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 4745              		.loc 5 243 9 discriminator 2 view .LVU998
 4746              	.LBB4943:
 4747              	.LBB4939:
 4748              	.LBI4913:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 4749              		.loc 25 206 7 discriminator 2 view .LVU999
 4750              	.LBB4935:
 4751              	.LBB4925:
 4752              	.LBI4915:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 4753              		.loc 5 396 7 discriminator 2 view .LVU1000
 4754              	.LBB4923:
 4755              	.LBI4916:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4756              		.loc 5 346 7 discriminator 2 view .LVU1001
 4757              	.LBB4921:
 4758              	.LBI4917:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 4759              		.loc 21 321 7 discriminator 2 view .LVU1002
 4760              	.LBB4919:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 454


 4761              		.loc 21 322 9 discriminator 2 view .LVU1003
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4762              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1004
 4763              	.LBE4919:
 4764              	.LBE4921:
 4765              	.LBE4923:
 4766              	.LBE4925:
 4767              	.LBB4926:
 4768              	.LBI4926:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4769              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1005
 4770              	.LBB4927:
 4771              	.LBI4927:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4772              		.loc 5 182 7 discriminator 2 view .LVU1006
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4773              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1007
 4774              	.LBE4927:
 4775              	.LBE4926:
 4776              	.LBE4935:
 4777              	.LBE4939:
 4778              	.LBE4943:
 4779              	.LBE4947:
 4780              	.LBE4951:
 4781              	.LBE4957:
 4782              	.LBE4965:
 4783              	.LBE4973:
 4784              	.LBE4983:
 4785              	.LBE4990:
 4786              	.LBE5613:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4787              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1008
 4788              	.LBB5614:
 4789              	.LBB5604:
 4790              	.LBB5597:
 4791              	.LBB5585:
 4792              	.LBB5579:
 4793              	.LBB5520:
 4794              	.LBB5518:
 4795              	.LBB5516:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4796              		.loc 5 157 35 is_stmt 0 discriminator 2 view .LVU1009
 4797 009a C4F854A0 		str	r10, [r4, #84]
 4798              	.LBE5516:
 4799              	.LBE5518:
 4800              	.LBE5520:
 4801              	.LBB5521:
 4802              	.LBB5522:
 4803              	.LBB5523:
 4804              	.LBB5524:
 4805              	.LBB5525:
 4806              	.LBB5526:
 4807              	.LBB5527:
 4808              	.LBB5528:
 4809              	.LBB5529:
 4810              	.LBB5530:
 4811              	.LBB5531:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 455


 4812              		.loc 21 395 49 discriminator 2 view .LVU1010
 4813 009e 46F2452A 		movw	r10, #25157
 4814              	.LBE5531:
 4815              	.LBE5530:
 4816              	.LBE5529:
 4817              	.LBE5528:
 4818              	.LBE5527:
 4819              	.LBE5526:
 4820              	.LBE5525:
 4821              	.LBE5524:
 4822              	.LBE5523:
 4823              	.LBE5522:
 4824              	.LBE5521:
 4825              	.LBE5579:
 4826              	.LBE5585:
 4827              	.LBE5597:
 4828              	.LBE5604:
 4829              	.LBE5614:
 4830              	.LBB5615:
 4831              	.LBB4991:
 4832              	.LBB4984:
 4833              	.LBB4974:
 4834              	.LBB4966:
 4835              	.LBB4958:
 4836              	.LBB4952:
 4837              	.LBB4948:
 4838              	.LBB4944:
 4839              	.LBB4940:
 4840              	.LBB4936:
 4841              	.LBB4932:
 4842              	.LBB4930:
 4843              	.LBB4928:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4844              		.loc 5 183 26 discriminator 2 view .LVU1011
 4845 00a2 0123     		movs	r3, #1
 4846              	.LBE4928:
 4847              	.LBE4930:
 4848              	.LBE4932:
 4849              	.LBE4936:
 4850              	.LBE4940:
 4851              	.LBE4944:
 4852              	.LBE4948:
 4853              	.LBE4952:
 4854              	.LBE4958:
 4855              	.LBE4966:
 4856              	.LBE4974:
 4857              		.loc 8 353 64 discriminator 2 view .LVU1012
 4858 00a4 C4F818B0 		str	fp, [r4, #24]
 4859              	.LBE4984:
 4860              	.LBE4991:
 4861              	.LBE5615:
 4862              	.LBB5616:
 4863              	.LBB5605:
 4864              	.LBB5598:
 4865              	.LBB5586:
 4866              	.LBB5580:
 4867              	.LBB5572:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 456


 4868              	.LBB5568:
 4869              	.LBB5564:
 4870              	.LBB5560:
 4871              	.LBB5556:
 4872              	.LBB5552:
 4873              	.LBB5540:
 4874              	.LBB5538:
 4875              	.LBB5536:
 4876              	.LBB5534:
 4877              	.LBB5532:
 4878              		.loc 21 395 49 discriminator 2 view .LVU1013
 4879 00a8 ADF88CA0 		strh	r10, [sp, #140]	@ movhi
 4880              	.LBE5532:
 4881              	.LBE5534:
 4882              	.LBE5536:
 4883              	.LBE5538:
 4884              	.LBE5540:
 4885              	.LBE5552:
 4886              	.LBE5556:
 4887              	.LBE5560:
 4888              	.LBE5564:
 4889              	.LBE5568:
 4890              	.LBE5572:
 4891              	.LBE5580:
 4892              	.LBE5586:
 4893              		.loc 8 353 64 discriminator 2 view .LVU1014
 4894 00ac 4FF03F0A 		mov	r10, #63
 4895              	.LBE5598:
 4896              	.LBE5605:
 4897              	.LBE5616:
 4898              	.LBB5617:
 4899              	.LBB5108:
 4900              	.LBB5100:
 4901              	.LBB5086:
 4902              	.LBB5078:
 4903              	.LBB5068:
 4904              	.LBB5063:
 4905              	.LBB5058:
 4906              	.LBB5053:
 4907              	.LBB5048:
 4908              	.LBB5043:
 4909              	.LBB5025:
 4910              	.LBB5026:
 4911              	.LBB5027:
 4912              	.LBB5028:
 4913              	.LBB5029:
 4914              		.loc 21 395 49 discriminator 2 view .LVU1015
 4915 00b0 46F2442B 		movw	fp, #25156
 4916              	.LBE5029:
 4917              	.LBE5028:
 4918              	.LBE5027:
 4919              	.LBE5026:
 4920              	.LBE5025:
 4921              	.LBE5043:
 4922              	.LBE5048:
 4923              	.LBE5053:
 4924              	.LBE5058:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 457


 4925              	.LBE5063:
 4926              	.LBE5068:
 4927              	.LBE5078:
 4928              	.LBE5086:
 4929              	.LBE5100:
 4930              	.LBE5108:
 4931              	.LBE5617:
 4932              	.LBB5618:
 4933              	.LBB5201:
 4934              	.LBB5193:
 4935              	.LBB5181:
 4936              	.LBB5175:
 4937              	.LBB5159:
 4938              	.LBB5156:
 4939              	.LBB5153:
 4940              	.LBB5150:
 4941              	.LBB5147:
 4942              	.LBB5144:
 4943              	.LBB5137:
 4944              	.LBB5135:
 4945              	.LBB5133:
 4946              	.LBB5131:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4947              		.loc 21 322 14 discriminator 2 view .LVU1016
 4948 00b4 A4F878C0 		strh	ip, [r4, #120]	@ movhi
 4949              	.LBE5131:
 4950              	.LBE5133:
 4951              	.LBE5135:
 4952              	.LBE5137:
 4953              	.LBE5144:
 4954              	.LBE5147:
 4955              	.LBE5150:
 4956              	.LBE5153:
 4957              	.LBE5156:
 4958              	.LBE5159:
 4959              	.LBE5175:
 4960              	.LBE5181:
 4961              	.LBE5193:
 4962              	.LBE5201:
 4963              	.LBE5618:
 4964              	.LBB5619:
 4965              	.LBB5606:
 4966              	.LBB5599:
 4967              		.loc 8 353 64 discriminator 2 view .LVU1017
 4968 00b8 C4F86CA0 		str	r10, [r4, #108]
 4969              	.LBE5599:
 4970              	.LBE5606:
 4971              	.LBE5619:
 4972              	.LBB5620:
 4973              	.LBB5202:
 4974              	.LBB5194:
 4975              	.LBB5182:
 4976              	.LBB5176:
 4977              	.LBB5160:
 4978              	.LBB5161:
 4979              	.LBB5162:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 458


 4980              		.loc 5 157 35 discriminator 2 view .LVU1018
 4981 00bc 0DF1A80A 		add	r10, sp, #168
 4982              	.LBE5162:
 4983              	.LBE5161:
 4984              	.LBE5160:
 4985              	.LBE5176:
 4986              	.LBE5182:
 4987              	.LBE5194:
 4988              	.LBE5202:
 4989              	.LBE5620:
 4990              	.LBB5621:
 4991              	.LBB5388:
 4992              	.LBB5380:
 4993              		.loc 8 353 64 discriminator 2 view .LVU1019
 4994 00c0 C4F8A4E0 		str	lr, [r4, #164]
 4995              	.LBE5380:
 4996              	.LBE5388:
 4997              	.LBE5621:
 4998              	.LBB5622:
 4999              	.LBB5203:
 5000              	.LBB5195:
 5001              	.LBB5183:
 5002              	.LBB5177:
 5003              	.LBB5169:
 5004              	.LBB5167:
 5005              	.LBB5165:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5006              		.loc 5 157 35 discriminator 2 view .LVU1020
 5007 00c4 C4F870A0 		str	r10, [r4, #112]
 5008              	.LBE5165:
 5009              	.LBE5167:
 5010              	.LBE5169:
 5011              	.LBE5177:
 5012              	.LBE5183:
 5013              		.loc 8 353 64 discriminator 2 view .LVU1021
 5014 00c8 4FF0400A 		mov	r10, #64
 5015              	.LBE5195:
 5016              	.LBE5203:
 5017              	.LBE5622:
 5018              	.LBB5623:
 5019              	.LBB4992:
 5020              	.LBB4985:
 5021              	.LBB4975:
 5022              	.LBB4967:
 5023              	.LBB4959:
 5024              	.LBB4953:
 5025              	.LBB4949:
 5026              	.LBB4945:
 5027              	.LBB4941:
 5028              	.LBB4937:
 5029              	.LBB4933:
 5030              	.LBB4931:
 5031              	.LBB4929:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5032              		.loc 5 183 26 discriminator 2 view .LVU1022
 5033 00cc 6360     		str	r3, [r4, #4]
 5034              	.LBE4929:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 459


 5035              	.LBE4931:
 5036              	.LBE4933:
 5037              	.LBE4937:
 5038              	.LBE4941:
 5039              	.LBE4945:
 5040              	.LBE4949:
 5041              	.LBE4953:
 5042              	.LBE4959:
 5043              	.LBE4967:
 5044              	.LBE4975:
 5045              	.LBE4985:
 5046              	.LBE4992:
 5047              	.LBE5623:
 5048              	.LBB5624:
 5049              	.LBB5204:
 5050              	.LBB5196:
 5051              		.loc 8 353 64 discriminator 2 view .LVU1023
 5052 00ce C4F888A0 		str	r10, [r4, #136]
 5053              	.LBE5196:
 5054              	.LBE5204:
 5055              	.LBE5624:
 5056              	.LBB5625:
 5057              	.LBB5389:
 5058              	.LBB5381:
 5059              	.LBB5368:
 5060              	.LBB5362:
 5061              	.LBB5346:
 5062              	.LBB5347:
 5063              	.LBB5348:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5064              		.loc 5 157 35 discriminator 2 view .LVU1024
 5065 00d2 0DF1C40A 		add	r10, sp, #196
 5066              	.LBE5348:
 5067              	.LBE5347:
 5068              	.LBE5346:
 5069              	.LBE5362:
 5070              	.LBE5368:
 5071              	.LBE5381:
 5072              	.LBE5389:
 5073              	.LBE5625:
 5074              	.LBB5626:
 5075              	.LBB5298:
 5076              	.LBB5290:
 5077              	.LBB5277:
 5078              	.LBB5271:
 5079              	.LBB5263:
 5080              	.LBB5260:
 5081              	.LBB5257:
 5082              	.LBB5254:
 5083              	.LBB5251:
 5084              	.LBB5248:
 5085              	.LBB5241:
 5086              	.LBB5242:
 5087              	.LBB5243:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5088              		.loc 5 183 26 discriminator 2 view .LVU1025
 5089 00d6 E363     		str	r3, [r4, #60]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 460


 5090              	.LBE5243:
 5091              	.LBE5242:
 5092              	.LBE5241:
 5093              	.LBE5248:
 5094              	.LBE5251:
 5095              	.LBE5254:
 5096              	.LBE5257:
 5097              	.LBE5260:
 5098              	.LBE5263:
 5099              	.LBE5271:
 5100              	.LBE5277:
 5101              	.LBE5290:
 5102              	.LBE5298:
 5103              	.LBE5626:
 5104              	.LBB5627:
 5105              	.LBB5390:
 5106              	.LBB5382:
 5107              	.LBB5369:
 5108              	.LBB5363:
 5109              	.LBB5355:
 5110              	.LBB5353:
 5111              	.LBB5351:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5112              		.loc 5 157 35 discriminator 2 view .LVU1026
 5113 00d8 C4F88CA0 		str	r10, [r4, #140]
 5114              	.LBE5351:
 5115              	.LBE5353:
 5116              	.LBE5355:
 5117              	.LBE5363:
 5118              	.LBE5369:
 5119              	.LBE5382:
 5120              	.LBE5390:
 5121              	.LBE5627:
 5122              	.LBB5628:
 5123              	.LBB5496:
 5124              	.LBB5488:
 5125              	.LBB5400:
 5126              	.LBB5401:
 5127              	.LBB5402:
 5128              	.LBB5403:
 5129              	.LBB5404:
 5130 00dc 0DF1E00A 		add	r10, sp, #224
 5131              	.LBE5404:
 5132              	.LBE5403:
 5133              	.LBE5402:
 5134              	.LBE5401:
 5135              	.LBE5400:
 5136              	.LBE5488:
 5137              	.LBE5496:
 5138              	.LBE5628:
 5139              	.LBB5629:
 5140              	.LBB5205:
 5141              	.LBB5197:
 5142              	.LBB5184:
 5143              	.LBB5178:
 5144              	.LBB5170:
 5145              	.LBB5157:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 461


 5146              	.LBB5154:
 5147              	.LBB5151:
 5148              	.LBB5148:
 5149              	.LBB5145:
 5150              	.LBB5138:
 5151              	.LBB5139:
 5152              	.LBB5140:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5153              		.loc 5 183 26 discriminator 2 view .LVU1027
 5154 00e0 6367     		str	r3, [r4, #116]
 5155              	.LBE5140:
 5156              	.LBE5139:
 5157              	.LBE5138:
 5158              	.LBE5145:
 5159              	.LBE5148:
 5160              	.LBE5151:
 5161              	.LBE5154:
 5162              	.LBE5157:
 5163              	.LBE5170:
 5164              	.LBE5178:
 5165              	.LBE5184:
 5166              	.LBE5197:
 5167              	.LBE5205:
 5168              	.LBE5629:
 5169              	.LBB5630:
 5170              	.LBB5497:
 5171              	.LBB5489:
 5172              	.LBB5476:
 5173              	.LBB5470:
 5174              	.LBB5411:
 5175              	.LBB5409:
 5176              	.LBB5407:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5177              		.loc 5 157 35 discriminator 2 view .LVU1028
 5178 00e2 C4F8A8A0 		str	r10, [r4, #168]
 5179              	.LBE5407:
 5180              	.LBE5409:
 5181              	.LBE5411:
 5182              	.LBB5412:
 5183              	.LBB5413:
 5184              	.LBB5414:
 5185              	.LBB5415:
 5186              	.LBB5416:
 5187              	.LBB5417:
 5188              	.LBB5418:
 5189              	.LBB5419:
 5190              	.LBB5420:
 5191              	.LBB5421:
 5192              	.LBB5422:
 5193              		.loc 21 395 49 discriminator 2 view .LVU1029
 5194 00e6 46F2472A 		movw	r10, #25159
 5195              	.LBE5422:
 5196              	.LBE5421:
 5197              	.LBE5420:
 5198              	.LBE5419:
 5199              	.LBE5418:
 5200              	.LBE5417:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 462


 5201              	.LBE5416:
 5202              	.LBE5415:
 5203              	.LBE5414:
 5204              	.LBE5413:
 5205              	.LBE5412:
 5206              	.LBE5470:
 5207              	.LBE5476:
 5208              	.LBE5489:
 5209              	.LBE5497:
 5210              	.LBE5630:
 5211              	.LBB5631:
 5212              	.LBB5391:
 5213              	.LBB5383:
 5214              	.LBB5370:
 5215              	.LBB5364:
 5216              	.LBB5356:
 5217              	.LBB5343:
 5218              	.LBB5340:
 5219              	.LBB5337:
 5220              	.LBB5334:
 5221              	.LBB5331:
 5222              	.LBB5324:
 5223              	.LBB5325:
 5224              	.LBB5326:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5225              		.loc 5 183 26 discriminator 2 view .LVU1030
 5226 00ea C4F89030 		str	r3, [r4, #144]
 5227              	.LBE5326:
 5228              	.LBE5325:
 5229              	.LBE5324:
 5230              	.LBE5331:
 5231              	.LBE5334:
 5232              	.LBE5337:
 5233              	.LBE5340:
 5234              	.LBE5343:
 5235              	.LBE5356:
 5236              	.LBE5364:
 5237              	.LBE5370:
 5238              	.LBE5383:
 5239              	.LBE5391:
 5240              	.LBE5631:
 5241              	.LBB5632:
 5242              	.LBB5498:
 5243              	.LBB5490:
 5244              	.LBB5477:
 5245              	.LBB5471:
 5246              	.LBB5463:
 5247              	.LBB5459:
 5248              	.LBB5455:
 5249              	.LBB5451:
 5250              	.LBB5447:
 5251              	.LBB5443:
 5252              	.LBB5431:
 5253              	.LBB5429:
 5254              	.LBB5427:
 5255              	.LBB5425:
 5256              	.LBB5423:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 463


 5257              		.loc 21 395 49 discriminator 2 view .LVU1031
 5258 00ee ADF8E0A0 		strh	r10, [sp, #224]	@ movhi
 5259              	.LBE5423:
 5260              	.LBE5425:
 5261              	.LBE5427:
 5262              	.LBE5429:
 5263              	.LBE5431:
 5264              	.LBE5443:
 5265              	.LBE5447:
 5266              	.LBE5451:
 5267              	.LBE5455:
 5268              	.LBE5459:
 5269              	.LBE5463:
 5270              	.LBE5471:
 5271              	.LBE5477:
 5272              	.LBE5490:
 5273              	.LBE5498:
 5274              	.LBE5632:
 5275              	.LBB5633:
 5276              	.LBB5634:
 5277              	.LBB5635:
 5278              	.LBB5636:
 5279              	.LBB5637:
 5280              	.LBB5638:
 5281              	.LBB5639:
 5282              	.LBB5640:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5283              		.loc 5 157 35 discriminator 2 view .LVU1032
 5284 00f2 0DF1FC0A 		add	r10, sp, #252
 5285              	.LBE5640:
 5286              	.LBE5639:
 5287              	.LBE5638:
 5288              	.LBE5637:
 5289              	.LBE5636:
 5290              	.LBE5635:
 5291              	.LBE5634:
 5292              	.LBE5633:
 5293              	.LBB5696:
 5294              	.LBB5109:
 5295              	.LBB5101:
 5296              	.LBB5087:
 5297              	.LBB5079:
 5298              	.LBB5069:
 5299              	.LBB5064:
 5300              	.LBB5059:
 5301              	.LBB5054:
 5302              	.LBB5049:
 5303              	.LBB5044:
 5304              	.LBB5038:
 5305              	.LBB5019:
 5306              	.LBB5018:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5307              		.loc 5 183 26 discriminator 2 view .LVU1033
 5308 00f6 2262     		str	r2, [r4, #32]
 5309              	.LBE5018:
 5310              	.LBE5019:
 5311              	.LBE5038:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 464


 5312              	.LBE5044:
 5313              	.LBE5049:
 5314              	.LBE5054:
 5315              	.LBE5059:
 5316              	.LBE5064:
 5317              	.LBE5069:
 5318              	.LBE5079:
 5319              	.LBE5087:
 5320              	.LBE5101:
 5321              	.LBE5109:
 5322              	.LBE5696:
 5323              	.LBB5697:
 5324              	.LBB5607:
 5325              	.LBB5600:
 5326              	.LBB5587:
 5327              	.LBB5581:
 5328              	.LBB5573:
 5329              	.LBB5569:
 5330              	.LBB5565:
 5331              	.LBB5561:
 5332              	.LBB5557:
 5333              	.LBB5553:
 5334              	.LBB5541:
 5335              	.LBB5542:
 5336              	.LBB5543:
 5337 00f8 A265     		str	r2, [r4, #88]
 5338              	.LBE5543:
 5339              	.LBE5542:
 5340              	.LBE5541:
 5341              	.LBE5553:
 5342              	.LBE5557:
 5343              	.LBE5561:
 5344              	.LBE5565:
 5345              	.LBE5569:
 5346              	.LBE5573:
 5347              	.LBE5581:
 5348              	.LBE5587:
 5349              	.LBE5600:
 5350              	.LBE5607:
 5351              	.LBE5697:
 5352              	.LBB5698:
 5353              	.LBB5499:
 5354              	.LBB5491:
 5355              	.LBB5478:
 5356              	.LBB5472:
 5357              	.LBB5464:
 5358              	.LBB5460:
 5359              	.LBB5456:
 5360              	.LBB5452:
 5361              	.LBB5448:
 5362              	.LBB5444:
 5363              	.LBB5432:
 5364              	.LBB5433:
 5365              	.LBB5434:
 5366 00fa C4F8AC20 		str	r2, [r4, #172]
 5367              	.LBE5434:
 5368              	.LBE5433:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 465


 5369              	.LBE5432:
 5370              	.LBE5444:
 5371              	.LBE5448:
 5372              	.LBE5452:
 5373              	.LBE5456:
 5374              	.LBE5460:
 5375              	.LBE5464:
 5376              	.LBE5472:
 5377              	.LBE5478:
 5378              	.LBE5491:
 5379              	.LBE5499:
 5380              	.LBE5698:
 5381              	.LBB5699:
 5382              	.LBB5392:
 5383              	.LBB5384:
 5384              	.LBB5371:
 5385              	.LBB5365:
 5386              	.LBB5357:
 5387              	.LBB5344:
 5388              	.LBB5341:
 5389              	.LBB5338:
 5390              	.LBB5335:
 5391              	.LBB5332:
 5392              	.LBB5328:
 5393              	.LBB5322:
 5394              	.LBB5320:
 5395              	.LBB5318:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5396              		.loc 21 322 14 discriminator 2 view .LVU1034
 5397 00fe A4F89400 		strh	r0, [r4, #148]	@ movhi
 5398              	.LBE5318:
 5399              	.LBE5320:
 5400              	.LBE5322:
 5401              	.LBE5328:
 5402              	.LBE5332:
 5403              	.LBE5335:
 5404              	.LBE5338:
 5405              	.LBE5341:
 5406              	.LBE5344:
 5407              	.LBE5357:
 5408              	.LBE5365:
 5409              	.LBE5371:
 5410              	.LBE5384:
 5411              	.LBE5392:
 5412              	.LBE5699:
 5413              	.LBB5700:
 5414              	.LBB5500:
 5415              	.LBB5492:
 5416              		.loc 8 353 64 discriminator 2 view .LVU1035
 5417 0102 C4F8C010 		str	r1, [r4, #192]
 5418              	.LBE5492:
 5419              	.LBE5500:
 5420              	.LBE5700:
 5421              	.LBB5701:
 5422              	.LBB5608:
 5423              	.LBB5601:
 5424              	.LBB5588:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 466


 5425              	.LBB5582:
 5426              	.LBB5574:
 5427              	.LBB5570:
 5428              	.LBB5566:
 5429              	.LBB5562:
 5430              	.LBB5558:
 5431              	.LBB5554:
 5432              	.LBB5549:
 5433              	.LBB5544:
 5434              	.LBB5545:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5435              		.loc 21 322 14 discriminator 2 view .LVU1036
 5436 0106 84F85E50 		strb	r5, [r4, #94]
 5437              	.LBE5545:
 5438              	.LBE5544:
 5439              	.LBE5549:
 5440              	.LBE5554:
 5441              	.LBE5558:
 5442              	.LBE5562:
 5443              	.LBE5566:
 5444              	.LBE5570:
 5445              	.LBE5574:
 5446              	.LBE5582:
 5447              	.LBE5588:
 5448              	.LBE5601:
 5449              	.LBE5608:
 5450              	.LBE5701:
 5451              	.LBB5702:
 5452              	.LBB5501:
 5453              	.LBB5493:
 5454              	.LBB5479:
 5455              	.LBB5473:
 5456              	.LBB5465:
 5457              	.LBB5461:
 5458              	.LBB5457:
 5459              	.LBB5453:
 5460              	.LBB5449:
 5461              	.LBB5445:
 5462              	.LBB5440:
 5463              	.LBB5435:
 5464              	.LBB5436:
 5465 010a 84F8B250 		strb	r5, [r4, #178]
 5466              	.LBE5436:
 5467              	.LBE5435:
 5468              	.LBE5440:
 5469              	.LBE5445:
 5470              	.LBE5449:
 5471              	.LBE5453:
 5472              	.LBE5457:
 5473              	.LBE5461:
 5474              	.LBE5465:
 5475              	.LBE5473:
 5476              	.LBE5479:
 5477              	.LBE5493:
 5478              	.LBE5501:
 5479              	.LBE5702:
 5480              	.LBB5703:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 467


 5481              	.LBB5110:
 5482              	.LBB5102:
 5483              	.LBB5088:
 5484              	.LBB5080:
 5485              	.LBB5070:
 5486              	.LBB5065:
 5487              	.LBB5060:
 5488              	.LBB5055:
 5489              	.LBB5050:
 5490              	.LBB5045:
 5491              	.LBB5039:
 5492              	.LBB5020:
 5493              	.LBB5021:
 5494 010e 84F82650 		strb	r5, [r4, #38]
 5495              	.LBE5021:
 5496              	.LBE5020:
 5497              	.LBE5039:
 5498              	.LBE5045:
 5499              	.LBE5050:
 5500              	.LBE5055:
 5501              	.LBE5060:
 5502              	.LBE5065:
 5503              	.LBE5070:
 5504              	.LBE5080:
 5505              	.LBE5088:
 5506              	.LBE5102:
 5507              	.LBE5110:
 5508              	.LBE5703:
 5509              	.LBB5704:
 5510              	.LBB4993:
 5511              	.LBB4986:
 5512              	.LBB4976:
 5513              	.LBB4968:
 5514              	.LBB4960:
 5515              	.LBB4954:
 5516              	.LBB4950:
 5517              	.LBB4946:
 5518              	.LBB4942:
 5519              	.LBB4938:
 5520              	.LBB4934:
 5521              	.LBB4924:
 5522              	.LBB4922:
 5523              	.LBB4920:
 5524 0112 A4F80890 		strh	r9, [r4, #8]	@ movhi
 5525              	.LVL284:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5526              		.loc 21 322 14 discriminator 2 view .LVU1037
 5527              	.LBE4920:
 5528              	.LBE4922:
 5529              	.LBE4924:
 5530              	.LBE4934:
 5531              	.LBE4938:
 5532              	.LBE4942:
 5533              	.LBE4946:
 5534              	.LBE4950:
 5535              	.LBE4954:
 5536              	.LBE4960:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 468


 5537              	.LBE4968:
 5538              	.LBE4976:
 5539              	.LBB4977:
 5540              	.LBI4977:
 5541              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1038
 5542              	.LBB4978:
 5543              	.LBI4978:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5544              		.loc 7 89 7 discriminator 2 view .LVU1039
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5545              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1040
 5546              	.LBE4978:
 5547              	.LBE4977:
 5548              	.LBB4979:
 5549              	.LBI4979:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5550              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1041
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5551              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1042
 5552              	.LBE4979:
 5553              	.LBE4986:
 5554              	.LBE4993:
 5555              	.LBE5704:
 5556              	.LBB5705:
 5557              	.LBI4994:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5558              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1043
 5559              	.LBB5111:
 5560              	.LBB5103:
 5561              	.LBB5089:
 5562              	.LBI5089:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5563              		.loc 27 76 5 discriminator 2 view .LVU1044
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5564              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1045
 5565              	.LBE5089:
 5566              	.LBB5090:
 5567              	.LBI5090:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5568              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1046
 5569              	.LBB5091:
 5570              	.LBI5091:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5571              		.loc 7 79 7 discriminator 2 view .LVU1047
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5572              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1048
 5573              	.LBE5091:
 5574              	.LBE5090:
 5575              	.LBB5092:
 5576              	.LBI4997:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5577              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1049
 5578              	.LBB5081:
 5579              	.LBB5071:
 5580              	.LBI5071:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5581              		.loc 5 190 7 discriminator 2 view .LVU1050
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 469


 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5582              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1051
 5583              	.LBE5071:
 5584              	.LBB5072:
 5585              	.LBI4999:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5586              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1052
 5587              	.LBB5007:
 5588              	.LBB5005:
 5589              	.LBB5002:
 5590              	.LBI5002:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5591              		.loc 9 147 7 discriminator 2 view .LVU1053
 5592              	.LBB5003:
 5593              	.LBI5003:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5594              		.loc 7 82 7 discriminator 2 view .LVU1054
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5595              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1055
 5596              	.LBE5003:
 5597              	.LBE5002:
 5598              	.LBE5005:
 5599              	.LBE5007:
 5600              	.LBE5072:
 5601              	.LBB5073:
 5602              	.LBI5073:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5603              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1056
 5604              	.LBE5073:
 5605              	.LBE5081:
 5606              	.LBE5092:
 5607              	.LBE5103:
 5608              	.LBE5111:
 5609              	.LBE5705:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5610              		.loc 21 357 2 discriminator 2 view .LVU1057
 5611              	.LBB5706:
 5612              	.LBB5112:
 5613              	.LBB5104:
 5614              	.LBB5093:
 5615              	.LBB5082:
 5616              	.LBB5074:
 5617              	.LBI5009:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5618              		.loc 5 263 9 discriminator 2 view .LVU1058
 5619              	.LBB5066:
 5620              	.LBB5061:
 5621              	.LBI5011:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5622              		.loc 5 243 9 discriminator 2 view .LVU1059
 5623              	.LBB5056:
 5624              	.LBB5051:
 5625              	.LBI5013:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5626              		.loc 25 206 7 discriminator 2 view .LVU1060
 5627              	.LBB5046:
 5628              	.LBB5040:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 470


 5629              	.LBI5025:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5630              		.loc 5 396 7 discriminator 2 view .LVU1061
 5631              	.LBB5036:
 5632              	.LBI5026:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5633              		.loc 5 346 7 discriminator 2 view .LVU1062
 5634              	.LBB5034:
 5635              	.LBI5027:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5636              		.loc 5 346 7 discriminator 2 view .LVU1063
 5637              	.LBB5032:
 5638              	.LBI5028:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5639              		.loc 21 387 7 discriminator 2 view .LVU1064
 5640              	.LBB5030:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 5641              		.loc 21 389 2 discriminator 2 view .LVU1065
 5642              		.loc 21 395 2 discriminator 2 view .LVU1066
 5643              	.LBE5030:
 5644              	.LBE5032:
 5645              	.LBE5034:
 5646              	.LBE5036:
 5647              	.LBE5040:
 5648              	.LBE5046:
 5649              	.LBE5051:
 5650              	.LBE5056:
 5651              	.LBE5061:
 5652              	.LBE5066:
 5653              	.LBE5074:
 5654              	.LBE5082:
 5655              	.LBE5093:
 5656              	.LBE5104:
 5657              	.LBE5112:
 5658              	.LBE5706:
 5659              	.LBB5707:
 5660              	.LBB5299:
 5661              	.LBB5291:
 5662              	.LBB5278:
 5663              	.LBB5272:
 5664              	.LBB5264:
 5665              	.LBB5261:
 5666              	.LBB5258:
 5667              	.LBB5255:
 5668              	.LBB5252:
 5669              	.LBB5249:
 5670              	.LBB5245:
 5671              	.LBB5239:
 5672              	.LBB5237:
 5673              	.LBB5235:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5674              		.loc 21 322 14 is_stmt 0 discriminator 2 view .LVU1067
 5675 0116 A4F84080 		strh	r8, [r4, #64]	@ movhi
 5676              	.LBE5235:
 5677              	.LBE5237:
 5678              	.LBE5239:
 5679              	.LBE5245:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 471


 5680              	.LBE5249:
 5681              	.LBE5252:
 5682              	.LBE5255:
 5683              	.LBE5258:
 5684              	.LBE5261:
 5685              	.LBE5264:
 5686              	.LBE5272:
 5687              	.LBE5278:
 5688              	.LBE5291:
 5689              	.LBE5299:
 5690              	.LBE5707:
 5691              	.LBB5708:
 5692              	.LBB5113:
 5693              	.LBB5105:
 5694              	.LBB5094:
 5695              	.LBB5083:
 5696              	.LBB5075:
 5697              	.LBB5067:
 5698              	.LBB5062:
 5699              	.LBB5057:
 5700              	.LBB5052:
 5701              	.LBB5047:
 5702              	.LBB5041:
 5703              	.LBB5037:
 5704              	.LBB5035:
 5705              	.LBB5033:
 5706              	.LBB5031:
 5707              		.loc 21 395 49 discriminator 2 view .LVU1068
 5708 011a ADF854B0 		strh	fp, [sp, #84]	@ movhi
 5709              	.LVL285:
 5710              		.loc 21 395 49 discriminator 2 view .LVU1069
 5711              	.LBE5031:
 5712              	.LBE5033:
 5713              	.LBE5035:
 5714              	.LBE5037:
 5715              	.LBE5041:
 5716              	.LBB5042:
 5717              	.LBI5015:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5718              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1070
 5719              	.LBB5023:
 5720              	.LBI5016:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5721              		.loc 5 182 7 discriminator 2 view .LVU1071
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5722              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1072
 5723              	.LBE5023:
 5724              	.LBB5024:
 5725              	.LBI5020:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5726              		.loc 21 321 7 is_stmt 1 discriminator 2 view .LVU1073
 5727              	.LBB5022:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5728              		.loc 21 322 9 discriminator 2 view .LVU1074
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5729              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1075
 5730              	.LBE5022:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 472


 5731              	.LBE5024:
 5732              	.LBE5042:
 5733              	.LBE5047:
 5734              	.LBE5052:
 5735              	.LBE5057:
 5736              	.LBE5062:
 5737              	.LBE5067:
 5738              	.LBE5075:
 5739              	.LBE5083:
 5740              	.LBE5094:
 5741              	.LBB5095:
 5742              	.LBI5095:
 5743              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1076
 5744              	.LBB5096:
 5745              	.LBI5096:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5746              		.loc 7 89 7 discriminator 2 view .LVU1077
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5747              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1078
 5748              	.LBE5096:
 5749              	.LBE5095:
 5750              	.LBB5097:
 5751              	.LBI5097:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5752              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1079
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5753              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1080
 5754              	.LBE5097:
 5755              	.LBE5105:
 5756              	.LBE5113:
 5757              	.LBE5708:
 5758              	.LBB5709:
 5759              	.LBI5210:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5760              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1081
 5761              	.LBB5300:
 5762              	.LBB5292:
 5763              	.LBB5279:
 5764              	.LBI5279:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5765              		.loc 27 76 5 discriminator 2 view .LVU1082
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5766              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1083
 5767              	.LBE5279:
 5768              	.LBB5280:
 5769              	.LBI5280:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5770              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1084
 5771              	.LBB5281:
 5772              	.LBI5281:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5773              		.loc 7 79 7 discriminator 2 view .LVU1085
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5774              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1086
 5775              	.LBE5281:
 5776              	.LBE5280:
 5777              	.LBB5282:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 473


 5778              	.LBI5213:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5779              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1087
 5780              	.LBB5273:
 5781              	.LBB5265:
 5782              	.LBI5265:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5783              		.loc 5 190 7 discriminator 2 view .LVU1088
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5784              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1089
 5785              	.LBE5265:
 5786              	.LBB5266:
 5787              	.LBI5215:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5788              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1090
 5789              	.LBB5223:
 5790              	.LBB5221:
 5791              	.LBB5218:
 5792              	.LBI5218:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5793              		.loc 9 147 7 discriminator 2 view .LVU1091
 5794              	.LBB5219:
 5795              	.LBI5219:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5796              		.loc 7 82 7 discriminator 2 view .LVU1092
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5797              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1093
 5798              	.LBE5219:
 5799              	.LBE5218:
 5800              	.LBE5221:
 5801              	.LBE5223:
 5802              	.LBE5266:
 5803              	.LBB5267:
 5804              	.LBI5267:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5805              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1094
 5806              	.LBE5267:
 5807              	.LBE5273:
 5808              	.LBE5282:
 5809              	.LBE5292:
 5810              	.LBE5300:
 5811              	.LBE5709:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5812              		.loc 21 357 2 discriminator 2 view .LVU1095
 5813              	.LBB5710:
 5814              	.LBB5301:
 5815              	.LBB5293:
 5816              	.LBB5283:
 5817              	.LBB5274:
 5818              	.LBB5268:
 5819              	.LBI5225:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5820              		.loc 5 263 9 discriminator 2 view .LVU1096
 5821              	.LBB5262:
 5822              	.LBB5259:
 5823              	.LBI5227:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 474


 5824              		.loc 5 243 9 discriminator 2 view .LVU1097
 5825              	.LBB5256:
 5826              	.LBB5253:
 5827              	.LBI5229:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5828              		.loc 25 206 7 discriminator 2 view .LVU1098
 5829              	.LBB5250:
 5830              	.LBB5246:
 5831              	.LBI5231:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5832              		.loc 5 396 7 discriminator 2 view .LVU1099
 5833              	.LBB5240:
 5834              	.LBI5232:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5835              		.loc 5 346 7 discriminator 2 view .LVU1100
 5836              	.LBB5238:
 5837              	.LBI5233:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5838              		.loc 21 321 7 discriminator 2 view .LVU1101
 5839              	.LBB5236:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5840              		.loc 21 322 9 discriminator 2 view .LVU1102
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5841              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1103
 5842              	.LBE5236:
 5843              	.LBE5238:
 5844              	.LBE5240:
 5845              	.LBE5246:
 5846              	.LBB5247:
 5847              	.LBI5241:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5848              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1104
 5849              	.LBB5244:
 5850              	.LBI5242:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5851              		.loc 5 182 7 discriminator 2 view .LVU1105
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5852              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1106
 5853              	.LBE5244:
 5854              	.LBE5247:
 5855              	.LBE5250:
 5856              	.LBE5253:
 5857              	.LBE5256:
 5858              	.LBE5259:
 5859              	.LBE5262:
 5860              	.LBE5268:
 5861              	.LBE5274:
 5862              	.LBE5283:
 5863              	.LBE5293:
 5864              	.LBE5301:
 5865              	.LBE5710:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5866              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1107
 5867              	.LBB5711:
 5868              	.LBB5302:
 5869              	.LBB5294:
 5870              	.LBB5284:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 475


 5871              	.LBI5284:
 5872              		.loc 9 162 7 discriminator 2 view .LVU1108
 5873              	.LBB5285:
 5874              	.LBI5285:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5875              		.loc 7 89 7 discriminator 2 view .LVU1109
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5876              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1110
 5877              	.LBE5285:
 5878              	.LBE5284:
 5879              	.LBB5286:
 5880              	.LBI5286:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5881              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1111
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5882              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1112
 5883              	.LBE5286:
 5884              	.LBE5294:
 5885              	.LBE5302:
 5886              	.LBE5711:
 5887              	.LBB5712:
 5888              	.LBI5506:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5889              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1113
 5890              	.LBB5609:
 5891              	.LBB5602:
 5892              	.LBB5589:
 5893              	.LBI5589:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5894              		.loc 27 76 5 discriminator 2 view .LVU1114
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5895              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1115
 5896              	.LBE5589:
 5897              	.LBB5590:
 5898              	.LBI5590:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5899              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1116
 5900              	.LBB5591:
 5901              	.LBI5591:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5902              		.loc 7 79 7 discriminator 2 view .LVU1117
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5903              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1118
 5904              	.LBE5591:
 5905              	.LBE5590:
 5906              	.LBB5592:
 5907              	.LBI5509:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5908              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1119
 5909              	.LBB5583:
 5910              	.LBB5575:
 5911              	.LBI5575:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5912              		.loc 5 190 7 discriminator 2 view .LVU1120
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5913              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1121
 5914              	.LBE5575:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 476


 5915              	.LBB5576:
 5916              	.LBI5511:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5917              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1122
 5918              	.LBB5519:
 5919              	.LBB5517:
 5920              	.LBB5514:
 5921              	.LBI5514:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5922              		.loc 9 147 7 discriminator 2 view .LVU1123
 5923              	.LBB5515:
 5924              	.LBI5515:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5925              		.loc 7 82 7 discriminator 2 view .LVU1124
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5926              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1125
 5927              	.LBE5515:
 5928              	.LBE5514:
 5929              	.LBE5517:
 5930              	.LBE5519:
 5931              	.LBE5576:
 5932              	.LBB5577:
 5933              	.LBI5577:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5934              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1126
 5935              	.LBE5577:
 5936              	.LBE5583:
 5937              	.LBE5592:
 5938              	.LBE5602:
 5939              	.LBE5609:
 5940              	.LBE5712:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5941              		.loc 21 357 2 discriminator 2 view .LVU1127
 5942              	.LBB5713:
 5943              	.LBB5610:
 5944              	.LBB5603:
 5945              	.LBB5593:
 5946              	.LBB5584:
 5947              	.LBB5578:
 5948              	.LBI5521:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5949              		.loc 5 263 9 discriminator 2 view .LVU1128
 5950              	.LBB5571:
 5951              	.LBB5567:
 5952              	.LBI5523:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5953              		.loc 5 243 9 discriminator 2 view .LVU1129
 5954              	.LBB5563:
 5955              	.LBB5559:
 5956              	.LBI5525:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5957              		.loc 25 206 7 discriminator 2 view .LVU1130
 5958              	.LBB5555:
 5959              	.LBB5550:
 5960              	.LBI5527:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5961              		.loc 5 396 7 discriminator 2 view .LVU1131
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 477


 5962              	.LBB5539:
 5963              	.LBI5528:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5964              		.loc 5 346 7 discriminator 2 view .LVU1132
 5965              	.LBB5537:
 5966              	.LBI5529:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5967              		.loc 5 346 7 discriminator 2 view .LVU1133
 5968              	.LBB5535:
 5969              	.LBI5530:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5970              		.loc 21 387 7 discriminator 2 view .LVU1134
 5971              	.LBB5533:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 5972              		.loc 21 389 2 discriminator 2 view .LVU1135
 5973              		.loc 21 395 2 discriminator 2 view .LVU1136
 5974              		.loc 21 395 2 is_stmt 0 discriminator 2 view .LVU1137
 5975              	.LBE5533:
 5976              	.LBE5535:
 5977              	.LBE5537:
 5978              	.LBE5539:
 5979              	.LBE5550:
 5980              	.LBB5551:
 5981              	.LBI5541:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5982              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1138
 5983              	.LBB5547:
 5984              	.LBI5542:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5985              		.loc 5 182 7 discriminator 2 view .LVU1139
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5986              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1140
 5987              	.LBE5547:
 5988              	.LBB5548:
 5989              	.LBI5544:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5990              		.loc 21 321 7 is_stmt 1 discriminator 2 view .LVU1141
 5991              	.LBB5546:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5992              		.loc 21 322 9 discriminator 2 view .LVU1142
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5993              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1143
 5994              	.LBE5546:
 5995              	.LBE5548:
 5996              	.LBE5551:
 5997              	.LBE5555:
 5998              	.LBE5559:
 5999              	.LBE5563:
 6000              	.LBE5567:
 6001              	.LBE5571:
 6002              	.LBE5578:
 6003              	.LBE5584:
 6004              	.LBE5593:
 6005              	.LBB5594:
 6006              	.LBI5594:
 6007              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1144
 6008              	.LBB5595:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 478


 6009              	.LBI5595:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6010              		.loc 7 89 7 discriminator 2 view .LVU1145
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6011              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1146
 6012              	.LBE5595:
 6013              	.LBE5594:
 6014              	.LBB5596:
 6015              	.LBI5596:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6016              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1147
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6017              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1148
 6018              	.LBE5596:
 6019              	.LBE5603:
 6020              	.LBE5610:
 6021              	.LBE5713:
 6022              	.LBB5714:
 6023              	.LBI5116:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6024              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1149
 6025              	.LBB5206:
 6026              	.LBB5198:
 6027              	.LBB5185:
 6028              	.LBI5185:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6029              		.loc 27 76 5 discriminator 2 view .LVU1150
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6030              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1151
 6031              	.LBE5185:
 6032              	.LBB5186:
 6033              	.LBI5186:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6034              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1152
 6035              	.LBB5187:
 6036              	.LBI5187:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6037              		.loc 7 79 7 discriminator 2 view .LVU1153
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6038              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1154
 6039              	.LBE5187:
 6040              	.LBE5186:
 6041              	.LBB5188:
 6042              	.LBI5119:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6043              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1155
 6044              	.LBB5179:
 6045              	.LBB5171:
 6046              	.LBI5171:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6047              		.loc 5 190 7 discriminator 2 view .LVU1156
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6048              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1157
 6049              	.LBE5171:
 6050              	.LBB5172:
 6051              	.LBI5160:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 479


 6052              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1158
 6053              	.LBB5168:
 6054              	.LBB5166:
 6055              	.LBB5163:
 6056              	.LBI5163:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6057              		.loc 9 147 7 discriminator 2 view .LVU1159
 6058              	.LBB5164:
 6059              	.LBI5164:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6060              		.loc 7 82 7 discriminator 2 view .LVU1160
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6061              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1161
 6062              	.LBE5164:
 6063              	.LBE5163:
 6064              	.LBE5166:
 6065              	.LBE5168:
 6066              	.LBE5172:
 6067              	.LBB5173:
 6068              	.LBI5173:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6069              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1162
 6070              	.LBE5173:
 6071              	.LBE5179:
 6072              	.LBE5188:
 6073              	.LBE5198:
 6074              	.LBE5206:
 6075              	.LBE5714:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6076              		.loc 21 357 2 discriminator 2 view .LVU1163
 6077              	.LBB5715:
 6078              	.LBB5207:
 6079              	.LBB5199:
 6080              	.LBB5189:
 6081              	.LBB5180:
 6082              	.LBB5174:
 6083              	.LBI5121:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6084              		.loc 5 263 9 discriminator 2 view .LVU1164
 6085              	.LBB5158:
 6086              	.LBB5155:
 6087              	.LBI5123:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6088              		.loc 5 243 9 discriminator 2 view .LVU1165
 6089              	.LBB5152:
 6090              	.LBB5149:
 6091              	.LBI5125:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6092              		.loc 25 206 7 discriminator 2 view .LVU1166
 6093              	.LBB5146:
 6094              	.LBB5142:
 6095              	.LBI5127:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6096              		.loc 5 396 7 discriminator 2 view .LVU1167
 6097              	.LBB5136:
 6098              	.LBI5128:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 480


 6099              		.loc 5 346 7 discriminator 2 view .LVU1168
 6100              	.LBB5134:
 6101              	.LBI5129:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6102              		.loc 21 321 7 discriminator 2 view .LVU1169
 6103              	.LBB5132:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6104              		.loc 21 322 9 discriminator 2 view .LVU1170
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6105              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1171
 6106              	.LBE5132:
 6107              	.LBE5134:
 6108              	.LBE5136:
 6109              	.LBE5142:
 6110              	.LBB5143:
 6111              	.LBI5138:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6112              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1172
 6113              	.LBB5141:
 6114              	.LBI5139:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6115              		.loc 5 182 7 discriminator 2 view .LVU1173
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6116              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1174
 6117              	.LBE5141:
 6118              	.LBE5143:
 6119              	.LBE5146:
 6120              	.LBE5149:
 6121              	.LBE5152:
 6122              	.LBE5155:
 6123              	.LBE5158:
 6124              	.LBE5174:
 6125              	.LBE5180:
 6126              	.LBE5189:
 6127              	.LBE5199:
 6128              	.LBE5207:
 6129              	.LBE5715:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6130              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1175
 6131              	.LBB5716:
 6132              	.LBB5208:
 6133              	.LBB5200:
 6134              	.LBB5190:
 6135              	.LBI5190:
 6136              		.loc 9 162 7 discriminator 2 view .LVU1176
 6137              	.LBB5191:
 6138              	.LBI5191:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6139              		.loc 7 89 7 discriminator 2 view .LVU1177
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6140              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1178
 6141              	.LBE5191:
 6142              	.LBE5190:
 6143              	.LBB5192:
 6144              	.LBI5192:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6145              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1179
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 481


  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6146              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1180
 6147              	.LBE5192:
 6148              	.LBE5200:
 6149              	.LBE5208:
 6150              	.LBE5716:
 6151              	.LBB5717:
 6152              	.LBI5303:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6153              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1181
 6154              	.LBB5393:
 6155              	.LBB5385:
 6156              	.LBB5372:
 6157              	.LBI5372:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6158              		.loc 27 76 5 discriminator 2 view .LVU1182
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6159              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1183
 6160              	.LBE5372:
 6161              	.LBB5373:
 6162              	.LBI5373:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6163              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1184
 6164              	.LBB5374:
 6165              	.LBI5374:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6166              		.loc 7 79 7 discriminator 2 view .LVU1185
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6167              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1186
 6168              	.LBE5374:
 6169              	.LBE5373:
 6170              	.LBB5375:
 6171              	.LBI5306:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6172              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1187
 6173              	.LBB5366:
 6174              	.LBB5358:
 6175              	.LBI5358:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6176              		.loc 5 190 7 discriminator 2 view .LVU1188
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6177              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1189
 6178              	.LBE5358:
 6179              	.LBB5359:
 6180              	.LBI5346:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6181              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1190
 6182              	.LBB5354:
 6183              	.LBB5352:
 6184              	.LBB5349:
 6185              	.LBI5349:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6186              		.loc 9 147 7 discriminator 2 view .LVU1191
 6187              	.LBB5350:
 6188              	.LBI5350:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6189              		.loc 7 82 7 discriminator 2 view .LVU1192
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 482


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6190              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1193
 6191              	.LBE5350:
 6192              	.LBE5349:
 6193              	.LBE5352:
 6194              	.LBE5354:
 6195              	.LBE5359:
 6196              	.LBB5360:
 6197              	.LBI5360:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6198              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1194
 6199              	.LBE5360:
 6200              	.LBE5366:
 6201              	.LBE5375:
 6202              	.LBE5385:
 6203              	.LBE5393:
 6204              	.LBE5717:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6205              		.loc 21 357 2 discriminator 2 view .LVU1195
 6206              	.LBB5718:
 6207              	.LBB5394:
 6208              	.LBB5386:
 6209              	.LBB5376:
 6210              	.LBB5367:
 6211              	.LBB5361:
 6212              	.LBI5308:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6213              		.loc 5 263 9 discriminator 2 view .LVU1196
 6214              	.LBB5345:
 6215              	.LBB5342:
 6216              	.LBI5310:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6217              		.loc 5 243 9 discriminator 2 view .LVU1197
 6218              	.LBB5339:
 6219              	.LBB5336:
 6220              	.LBI5312:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6221              		.loc 25 206 7 discriminator 2 view .LVU1198
 6222              	.LBB5333:
 6223              	.LBB5329:
 6224              	.LBI5314:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6225              		.loc 5 396 7 discriminator 2 view .LVU1199
 6226              	.LBB5323:
 6227              	.LBI5315:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6228              		.loc 5 346 7 discriminator 2 view .LVU1200
 6229              	.LBB5321:
 6230              	.LBI5316:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6231              		.loc 21 321 7 discriminator 2 view .LVU1201
 6232              	.LBB5319:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6233              		.loc 21 322 9 discriminator 2 view .LVU1202
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6234              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1203
 6235              	.LBE5319:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 483


 6236              	.LBE5321:
 6237              	.LBE5323:
 6238              	.LBE5329:
 6239              	.LBB5330:
 6240              	.LBI5324:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6241              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1204
 6242              	.LBB5327:
 6243              	.LBI5325:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6244              		.loc 5 182 7 discriminator 2 view .LVU1205
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6245              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1206
 6246              	.LBE5327:
 6247              	.LBE5330:
 6248              	.LBE5333:
 6249              	.LBE5336:
 6250              	.LBE5339:
 6251              	.LBE5342:
 6252              	.LBE5345:
 6253              	.LBE5361:
 6254              	.LBE5367:
 6255              	.LBE5376:
 6256              	.LBE5386:
 6257              	.LBE5394:
 6258              	.LBE5718:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6259              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1207
 6260              	.LBB5719:
 6261              	.LBB5395:
 6262              	.LBB5387:
 6263              	.LBB5377:
 6264              	.LBI5377:
 6265              		.loc 9 162 7 discriminator 2 view .LVU1208
 6266              	.LBB5378:
 6267              	.LBI5378:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6268              		.loc 7 89 7 discriminator 2 view .LVU1209
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6269              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1210
 6270              	.LBE5378:
 6271              	.LBE5377:
 6272              	.LBB5379:
 6273              	.LBI5379:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6274              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1211
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6275              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1212
 6276              	.LBE5379:
 6277              	.LBE5387:
 6278              	.LBE5395:
 6279              	.LBE5719:
 6280              	.LBB5720:
 6281              	.LBI5397:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6282              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1213
 6283              	.LBB5502:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 484


 6284              	.LBB5494:
 6285              	.LBB5480:
 6286              	.LBI5480:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6287              		.loc 27 76 5 discriminator 2 view .LVU1214
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6288              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1215
 6289              	.LBE5480:
 6290              	.LBB5481:
 6291              	.LBI5481:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6292              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1216
 6293              	.LBB5482:
 6294              	.LBI5482:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6295              		.loc 7 79 7 discriminator 2 view .LVU1217
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6296              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1218
 6297              	.LBE5482:
 6298              	.LBE5481:
 6299              	.LBB5483:
 6300              	.LBI5400:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6301              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1219
 6302              	.LBB5474:
 6303              	.LBB5466:
 6304              	.LBI5466:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6305              		.loc 5 190 7 discriminator 2 view .LVU1220
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6306              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1221
 6307              	.LBE5466:
 6308              	.LBB5467:
 6309              	.LBI5402:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6310              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1222
 6311              	.LBB5410:
 6312              	.LBB5408:
 6313              	.LBB5405:
 6314              	.LBI5405:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6315              		.loc 9 147 7 discriminator 2 view .LVU1223
 6316              	.LBB5406:
 6317              	.LBI5406:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6318              		.loc 7 82 7 discriminator 2 view .LVU1224
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6319              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1225
 6320              	.LBE5406:
 6321              	.LBE5405:
 6322              	.LBE5408:
 6323              	.LBE5410:
 6324              	.LBE5467:
 6325              	.LBB5468:
 6326              	.LBI5468:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6327              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1226
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 485


 6328              	.LBE5468:
 6329              	.LBE5474:
 6330              	.LBE5483:
 6331              	.LBE5494:
 6332              	.LBE5502:
 6333              	.LBE5720:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6334              		.loc 21 357 2 discriminator 2 view .LVU1227
 6335              	.LBB5721:
 6336              	.LBB5503:
 6337              	.LBB5495:
 6338              	.LBB5484:
 6339              	.LBB5475:
 6340              	.LBB5469:
 6341              	.LBI5412:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6342              		.loc 5 263 9 discriminator 2 view .LVU1228
 6343              	.LBB5462:
 6344              	.LBB5458:
 6345              	.LBI5414:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6346              		.loc 5 243 9 discriminator 2 view .LVU1229
 6347              	.LBB5454:
 6348              	.LBB5450:
 6349              	.LBI5416:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6350              		.loc 25 206 7 discriminator 2 view .LVU1230
 6351              	.LBB5446:
 6352              	.LBB5441:
 6353              	.LBI5418:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6354              		.loc 5 396 7 discriminator 2 view .LVU1231
 6355              	.LBB5430:
 6356              	.LBI5419:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6357              		.loc 5 346 7 discriminator 2 view .LVU1232
 6358              	.LBB5428:
 6359              	.LBI5420:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6360              		.loc 5 346 7 discriminator 2 view .LVU1233
 6361              	.LBB5426:
 6362              	.LBI5421:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6363              		.loc 21 387 7 discriminator 2 view .LVU1234
 6364              	.LBB5424:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 6365              		.loc 21 389 2 discriminator 2 view .LVU1235
 6366              		.loc 21 395 2 discriminator 2 view .LVU1236
 6367              		.loc 21 395 2 is_stmt 0 discriminator 2 view .LVU1237
 6368              	.LBE5424:
 6369              	.LBE5426:
 6370              	.LBE5428:
 6371              	.LBE5430:
 6372              	.LBE5441:
 6373              	.LBB5442:
 6374              	.LBI5432:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 486


 6375              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1238
 6376              	.LBB5438:
 6377              	.LBI5433:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6378              		.loc 5 182 7 discriminator 2 view .LVU1239
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6379              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1240
 6380              	.LBE5438:
 6381              	.LBB5439:
 6382              	.LBI5435:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6383              		.loc 21 321 7 is_stmt 1 discriminator 2 view .LVU1241
 6384              	.LBB5437:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6385              		.loc 21 322 9 discriminator 2 view .LVU1242
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6386              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1243
 6387              	.LBE5437:
 6388              	.LBE5439:
 6389              	.LBE5442:
 6390              	.LBE5446:
 6391              	.LBE5450:
 6392              	.LBE5454:
 6393              	.LBE5458:
 6394              	.LBE5462:
 6395              	.LBE5469:
 6396              	.LBE5475:
 6397              	.LBE5484:
 6398              	.LBB5485:
 6399              	.LBI5485:
 6400              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1244
 6401              	.LBB5486:
 6402              	.LBI5486:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6403              		.loc 7 89 7 discriminator 2 view .LVU1245
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6404              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1246
 6405              	.LBE5486:
 6406              	.LBE5485:
 6407              	.LBB5487:
 6408              	.LBI5487:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6409              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1247
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6410              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1248
 6411              	.LBE5487:
 6412              	.LBE5495:
 6413              	.LBE5503:
 6414              	.LBE5721:
 6415              	.LBB5722:
 6416              	.LBI5633:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6417              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1249
 6418              	.LBB5692:
 6419              	.LBB5688:
 6420              	.LBB5679:
 6421              	.LBI5679:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 487


  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6422              		.loc 27 76 5 discriminator 2 view .LVU1250
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6423              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1251
 6424              	.LBE5679:
 6425              	.LBB5680:
 6426              	.LBI5680:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6427              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1252
 6428              	.LBB5681:
 6429              	.LBI5681:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6430              		.loc 7 79 7 discriminator 2 view .LVU1253
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6431              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1254
 6432              	.LBE5681:
 6433              	.LBE5680:
 6434              	.LBB5682:
 6435              	.LBI5636:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6436              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1255
 6437              	.LBB5676:
 6438              	.LBB5645:
 6439              	.LBI5645:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6440              		.loc 5 190 7 discriminator 2 view .LVU1256
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6441              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1257
 6442              	.LBE5645:
 6443              	.LBB5646:
 6444              	.LBI5638:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6445              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1258
 6446              	.LBB5644:
 6447              	.LBB5643:
 6448              	.LBB5641:
 6449              	.LBI5641:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6450              		.loc 9 147 7 discriminator 2 view .LVU1259
 6451              	.LBB5642:
 6452              	.LBI5642:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6453              		.loc 7 82 7 discriminator 2 view .LVU1260
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6454              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1261
 6455              	.LBE5642:
 6456              	.LBE5641:
 6457              	.LBE5643:
 6458              	.LBE5644:
 6459              	.LBE5646:
 6460              	.LBB5647:
 6461              	.LBB5648:
 6462              	.LBB5649:
 6463              	.LBB5650:
 6464              	.LBB5651:
 6465              	.LBB5652:
 6466              	.LBB5653:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 488


 6467              	.LBB5654:
 6468              	.LBB5655:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6469              		.loc 5 183 26 discriminator 2 view .LVU1262
 6470 011e C4E931A3 		strd	r10, r3, [r4, #196]
 6471              	.LBE5655:
 6472              	.LBE5654:
 6473              	.LBE5653:
 6474              	.LBE5652:
 6475              	.LBE5651:
 6476              	.LBE5650:
 6477              	.LBE5649:
 6478              	.LBE5648:
 6479              	.LBE5647:
 6480              	.LBE5676:
 6481              	.LBE5682:
 6482              	.LBE5688:
 6483              	.LBE5692:
 6484              	.LBE5722:
 6485              	.LBB5723:
 6486              	.LBB5724:
 6487              	.LBB5725:
 6488              	.LBB5726:
 6489              	.LBB5727:
 6490              	.LBB5728:
 6491              	.LBB5729:
 6492              	.LBB5730:
 6493              	.LBB5731:
 6494              	.LBB5732:
 6495              	.LBB5733:
 6496              	.LBB5734:
 6497              	.LBB5735:
 6498              	.LBB5736:
 6499 0122 C4F8E420 		str	r2, [r4, #228]
 6500              	.LBE5736:
 6501              	.LBE5735:
 6502              	.LBE5734:
 6503              	.LBE5733:
 6504              	.LBE5732:
 6505              	.LBE5731:
 6506              	.LBE5730:
 6507              	.LBE5729:
 6508              	.LBE5728:
 6509              	.LBE5727:
 6510              	.LBE5726:
 6511              	.LBE5725:
 6512              	.LBE5724:
 6513              	.LBE5723:
 6514              	.LBB5795:
 6515              	.LBB5796:
 6516              	.LBB5797:
 6517              	.LBB5798:
 6518              	.LBB5799:
 6519              	.LBB5800:
 6520              	.LBB5801:
 6521              	.LBB5802:
 6522              	.LBB5803:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 489


 6523              	.LBB5804:
 6524              	.LBB5805:
 6525              	.LBB5806:
 6526              	.LBB5807:
 6527              	.LBB5808:
 6528 0126 C4F81C21 		str	r2, [r4, #284]
 6529              	.LBE5808:
 6530              	.LBE5807:
 6531              	.LBE5806:
 6532              	.LBE5805:
 6533              	.LBE5804:
 6534              	.LBE5803:
 6535              	.LBE5802:
 6536              	.LBE5801:
 6537              	.LBE5800:
 6538              	.LBE5799:
 6539              	.LBE5798:
 6540              	.LBE5797:
 6541              	.LBE5796:
 6542              	.LBE5795:
 6543              	.LBB5860:
 6544              	.LBB5861:
 6545              	.LBB5862:
 6546              	.LBB5863:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6547              		.loc 3 504 26 discriminator 2 view .LVU1263
 6548 012a 08AA     		add	r2, sp, #32
 6549              	.LBE5863:
 6550              	.LBE5862:
 6551              	.LBE5861:
 6552              	.LBE5860:
 6553              	.LBB5875:
 6554              	.LBB5876:
 6555              	.LBB5877:
 6556              	.LBB5878:
 6557              	.LBB5879:
 6558              	.LBB5880:
 6559              	.LBB5881:
 6560              	.LBB5882:
 6561              	.LBB5883:
 6562              	.LBB5884:
 6563              	.LBB5885:
 6564              	.LBB5886:
 6565              	.LBB5887:
 6566              	.LBB5888:
 6567              	.LBB5889:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6568              		.loc 21 322 14 discriminator 2 view .LVU1264
 6569 012c A4F804E1 		strh	lr, [r4, #260]	@ movhi
 6570              	.LBE5889:
 6571              	.LBE5888:
 6572              	.LBE5887:
 6573              	.LBE5886:
 6574              	.LBE5885:
 6575              	.LBE5884:
 6576              	.LBE5883:
 6577              	.LBE5882:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 490


 6578              	.LBE5881:
 6579              	.LBE5880:
 6580              	.LBE5879:
 6581              	.LBE5878:
 6582              		.loc 8 353 64 discriminator 2 view .LVU1265
 6583 0130 C4F814C1 		str	ip, [r4, #276]
 6584              	.LBE5877:
 6585              	.LBE5876:
 6586              	.LBE5875:
 6587              	.LBB5938:
 6588              	.LBB5856:
 6589              	.LBB5852:
 6590 0134 C4F83001 		str	r0, [r4, #304]
 6591              	.LBE5852:
 6592              	.LBE5856:
 6593              	.LBE5938:
 6594              	.LBB5939:
 6595              	.LBB5940:
 6596              	.LBB5941:
 6597              	.LBB5942:
 6598              	.LBB5943:
 6599              	.LBB5944:
 6600              	.LBB5945:
 6601              	.LBB5946:
 6602              	.LBB5947:
 6603              	.LBB5948:
 6604              	.LBB5949:
 6605              	.LBB5950:
 6606              	.LBB5951:
 6607              	.LBB5952:
 6608              	.LBB5953:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6609              		.loc 21 322 14 discriminator 2 view .LVU1266
 6610 0138 A4F83C11 		strh	r1, [r4, #316]	@ movhi
 6611              	.LBE5953:
 6612              	.LBE5952:
 6613              	.LBE5951:
 6614              	.LBE5950:
 6615              	.LBE5949:
 6616              	.LBE5948:
 6617              	.LBE5947:
 6618              	.LBE5946:
 6619              	.LBE5945:
 6620              	.LBE5944:
 6621              	.LBE5943:
 6622              	.LBE5942:
 6623              	.LBE5941:
 6624              	.LBE5940:
 6625              	.LBE5939:
 6626              	.LBB6004:
 6627              	.LBB5693:
 6628              	.LBB5689:
 6629              	.LBB5683:
 6630              	.LBB5677:
 6631              	.LBB5674:
 6632              	.LBB5672:
 6633              	.LBB5670:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 491


 6634              	.LBB5668:
 6635              	.LBB5666:
 6636              	.LBB5664:
 6637              	.LBB5656:
 6638              	.LBB5657:
 6639              	.LBB5658:
 6640              	.LBB5659:
 6641 013c 4721     		movs	r1, #71
 6642              	.LBE5659:
 6643              	.LBE5658:
 6644              	.LBE5657:
 6645              	.LBE5656:
 6646              	.LBE5664:
 6647              	.LBE5666:
 6648              	.LBE5668:
 6649              	.LBE5670:
 6650              	.LBE5672:
 6651              	.LBE5674:
 6652              	.LBE5677:
 6653              	.LBE5683:
 6654              	.LBE5689:
 6655              	.LBE5693:
 6656              	.LBE6004:
 6657              	.LBB6005:
 6658              	.LBB5790:
 6659              	.LBB5785:
 6660              	.LBB5775:
 6661              	.LBB5771:
 6662              	.LBB5759:
 6663              	.LBB5757:
 6664              	.LBB5755:
 6665              	.LBB5753:
 6666              	.LBB5751:
 6667              	.LBB5749:
 6668              	.LBB5742:
 6669              	.LBB5737:
 6670              	.LBB5738:
 6671 013e 84F8EA50 		strb	r5, [r4, #234]
 6672              	.LBE5738:
 6673              	.LBE5737:
 6674              	.LBE5742:
 6675              	.LBE5749:
 6676              	.LBE5751:
 6677              	.LBE5753:
 6678              	.LBE5755:
 6679              	.LBE5757:
 6680              	.LBE5759:
 6681              	.LBE5771:
 6682              	.LBE5775:
 6683              	.LBE5785:
 6684              	.LBE5790:
 6685              	.LBE6005:
 6686              	.LBB6006:
 6687              	.LBB5934:
 6688              	.LBB5930:
 6689              	.LBB5921:
 6690              	.LBB5918:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 492


 6691              	.LBB5909:
 6692              	.LBB5907:
 6693              	.LBB5905:
 6694              	.LBB5903:
 6695              	.LBB5901:
 6696              	.LBB5899:
 6697              	.LBB5893:
 6698              	.LBB5894:
 6699              	.LBB5895:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6700              		.loc 5 183 26 discriminator 2 view .LVU1267
 6701 0142 C4F80031 		str	r3, [r4, #256]
 6702              	.LBE5895:
 6703              	.LBE5894:
 6704              	.LBE5893:
 6705              	.LBE5899:
 6706              	.LBE5901:
 6707              	.LBE5903:
 6708              	.LBE5905:
 6709              	.LBE5907:
 6710              	.LBE5909:
 6711              	.LBE5918:
 6712              	.LBE5921:
 6713              	.LBE5930:
 6714              	.LBE5934:
 6715              	.LBE6006:
 6716              	.LBB6007:
 6717              	.LBB5999:
 6718              	.LBB5994:
 6719              	.LBB5985:
 6720              	.LBB5982:
 6721              	.LBB5973:
 6722              	.LBB5971:
 6723              	.LBB5969:
 6724              	.LBB5967:
 6725              	.LBB5965:
 6726              	.LBB5963:
 6727              	.LBB5957:
 6728              	.LBB5958:
 6729              	.LBB5959:
 6730 0146 C4F83831 		str	r3, [r4, #312]
 6731              	.LBE5959:
 6732              	.LBE5958:
 6733              	.LBE5957:
 6734              	.LBE5963:
 6735              	.LBE5965:
 6736              	.LBE5967:
 6737              	.LBE5969:
 6738              	.LBE5971:
 6739              	.LBE5973:
 6740              	.LBE5982:
 6741              	.LBE5985:
 6742              	.LBE5994:
 6743              	.LBE5999:
 6744              	.LBE6007:
 6745              	.LBB6008:
 6746              	.LBB5872:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 493


 6747              	.LBB5869:
 6748              	.LBB5866:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6749              		.loc 3 504 26 discriminator 2 view .LVU1268
 6750 014a 2B46     		mov	r3, r5
 6751              	.LBE5866:
 6752              	.LBE5869:
 6753              	.LBE5872:
 6754              	.LBE6008:
 6755              	.LBB6009:
 6756              	.LBB5857:
 6757              	.LBB5853:
 6758              	.LBB5843:
 6759              	.LBB5840:
 6760              	.LBB5831:
 6761              	.LBB5829:
 6762              	.LBB5827:
 6763              	.LBB5825:
 6764              	.LBB5823:
 6765              	.LBB5821:
 6766              	.LBB5814:
 6767              	.LBB5809:
 6768              	.LBB5810:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6769              		.loc 21 322 14 discriminator 2 view .LVU1269
 6770 014c 84F82251 		strb	r5, [r4, #290]
 6771              	.LBE5810:
 6772              	.LBE5809:
 6773              	.LBE5814:
 6774              	.LBE5821:
 6775              	.LBE5823:
 6776              	.LBE5825:
 6777              	.LBE5827:
 6778              	.LBE5829:
 6779              	.LBE5831:
 6780              	.LBE5840:
 6781              	.LBE5843:
 6782              	.LBE5853:
 6783              	.LBE5857:
 6784              	.LBE6009:
  20:utils.h       ****     return fourth_octave.at(note);
 6785              		.loc 28 20 5 discriminator 2 view .LVU1270
 6786 0150 60AD     		add	r5, sp, #384
 6787              	.LBB6010:
 6788              	.LBB5694:
 6789              	.LBB5690:
 6790              		.loc 8 353 64 discriminator 2 view .LVU1271
 6791 0152 C4F8DC90 		str	r9, [r4, #220]
 6792              	.LBE5690:
 6793              	.LBE5694:
 6794              	.LBE6010:
 6795              	.LBB6011:
 6796              	.LBB5791:
 6797              	.LBB5786:
 6798 0156 C4F8F880 		str	r8, [r4, #248]
 6799              	.LBE5786:
 6800              	.LBE5791:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 494


 6801              	.LBE6011:
 6802              	.LBB6012:
 6803              	.LBB5873:
 6804              	.LBB5870:
 6805              	.LBB5867:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6806              		.loc 3 504 26 discriminator 2 view .LVU1272
 6807 015a 0592     		str	r2, [sp, #20]
 6808 015c 09AA     		add	r2, sp, #36
 6809 015e 2048     		ldr	r0, .L204+4
 6810 0160 0492     		str	r2, [sp, #16]
 6811 0162 07AA     		add	r2, sp, #28
 6812 0164 0392     		str	r2, [sp, #12]
 6813 0166 0AAA     		add	r2, sp, #40
 6814 0168 0292     		str	r2, [sp, #8]
 6815 016a 0BAA     		add	r2, sp, #44
 6816 016c 0192     		str	r2, [sp, #4]
 6817 016e 06AA     		add	r2, sp, #24
 6818 0170 0092     		str	r2, [sp]
 6819 0172 60AA     		add	r2, sp, #384
 6820              	.LBE5867:
 6821              	.LBE5870:
 6822              	.LBE5873:
 6823              	.LBE6012:
 6824              	.LBB6013:
 6825              	.LBB5695:
 6826              	.LBB5691:
 6827              	.LBB5684:
 6828              	.LBB5678:
 6829              	.LBB5675:
 6830              	.LBB5673:
 6831              	.LBB5671:
 6832              	.LBB5669:
 6833              	.LBB5667:
 6834              	.LBB5665:
 6835              	.LBB5663:
 6836              	.LBB5662:
 6837              	.LBB5661:
 6838              	.LBB5660:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6839              		.loc 21 322 14 discriminator 2 view .LVU1273
 6840 0174 A4F8CC10 		strh	r1, [r4, #204]	@ movhi
 6841              	.LVL286:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6842              		.loc 21 322 14 discriminator 2 view .LVU1274
 6843              	.LBE5660:
 6844              	.LBE5661:
 6845              	.LBE5662:
 6846              	.LBE5663:
 6847              	.LBE5665:
 6848              	.LBE5667:
 6849              	.LBE5669:
 6850              	.LBE5671:
 6851              	.LBE5673:
 6852              	.LBE5675:
 6853              	.LBE5678:
 6854              	.LBE5684:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 495


 6855              	.LBB5685:
 6856              	.LBI5685:
 6857              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1275
 6858              	.LBB5686:
 6859              	.LBI5686:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6860              		.loc 7 89 7 discriminator 2 view .LVU1276
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6861              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1277
 6862              	.LBE5686:
 6863              	.LBE5685:
 6864              	.LBB5687:
 6865              	.LBI5687:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6866              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1278
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6867              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1279
 6868              	.LBE5687:
 6869              	.LBE5691:
 6870              	.LBE5695:
 6871              	.LBE6013:
 6872              	.LBB6014:
 6873              	.LBI5723:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6874              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1280
 6875              	.LBB5792:
 6876              	.LBB5787:
 6877              	.LBB5776:
 6878              	.LBI5776:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6879              		.loc 27 76 5 discriminator 2 view .LVU1281
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6880              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1282
 6881              	.LBE5776:
 6882              	.LBB5777:
 6883              	.LBI5777:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6884              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1283
 6885              	.LBB5778:
 6886              	.LBI5778:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6887              		.loc 7 79 7 discriminator 2 view .LVU1284
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6888              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1285
 6889              	.LBE5778:
 6890              	.LBE5777:
 6891              	.LBB5779:
 6892              	.LBI5726:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6893              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1286
 6894              	.LBB5772:
 6895              	.LBB5760:
 6896              	.LBI5760:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6897              		.loc 5 190 7 discriminator 2 view .LVU1287
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6898              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1288
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 496


 6899              	.LBE5760:
 6900              	.LBB5761:
 6901              	.LBI5761:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6902              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1289
 6903              	.LBB5762:
 6904              	.LBB5763:
 6905              	.LBB5764:
 6906              	.LBI5764:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6907              		.loc 9 147 7 discriminator 2 view .LVU1290
 6908              	.LBB5765:
 6909              	.LBI5765:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6910              		.loc 7 82 7 discriminator 2 view .LVU1291
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6911              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1292
 6912              	.LBE5765:
 6913              	.LBE5764:
 6914              	.LBE5763:
 6915              	.LBE5762:
 6916              	.LBE5761:
 6917              	.LBE5772:
 6918              	.LBE5779:
 6919              	.LBE5787:
 6920              	.LBE5792:
 6921              	.LBE6014:
 6922              	.LBB6015:
 6923              	.LBB6000:
 6924              	.LBB5995:
 6925              		.loc 8 353 64 discriminator 2 view .LVU1293
 6926 0178 C4F84C11 		str	r1, [r4, #332]
 6927              	.LBE5995:
 6928              	.LBE6000:
 6929              	.LBE6015:
 6930              	.LBB6016:
 6931              	.LBB5793:
 6932              	.LBB5788:
 6933              	.LBB5780:
 6934              	.LBB5773:
 6935              	.LBB5768:
 6936              	.LBB5767:
 6937              	.LBB5766:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6938              		.loc 5 157 35 discriminator 2 view .LVU1294
 6939 017c 46A9     		add	r1, sp, #280
 6940              	.LVL287:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6941              		.loc 5 157 35 discriminator 2 view .LVU1295
 6942 017e C4F8E010 		str	r1, [r4, #224]
 6943              	.LVL288:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6944              		.loc 5 157 35 discriminator 2 view .LVU1296
 6945              	.LBE5766:
 6946              	.LBE5767:
 6947              	.LBE5768:
 6948              	.LBB5769:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 497


 6949              	.LBI5769:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6950              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1297
 6951              	.LBE5769:
 6952              	.LBE5773:
 6953              	.LBE5780:
 6954              	.LBE5788:
 6955              	.LBE5793:
 6956              	.LBE6016:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6957              		.loc 21 357 2 discriminator 2 view .LVU1298
 6958              	.LBB6017:
 6959              	.LBB5794:
 6960              	.LBB5789:
 6961              	.LBB5781:
 6962              	.LBB5774:
 6963              	.LBB5770:
 6964              	.LBI5728:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6965              		.loc 5 263 9 discriminator 2 view .LVU1299
 6966              	.LBB5758:
 6967              	.LBB5756:
 6968              	.LBI5730:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6969              		.loc 5 243 9 discriminator 2 view .LVU1300
 6970              	.LBB5754:
 6971              	.LBB5752:
 6972              	.LBI5732:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6973              		.loc 25 206 7 discriminator 2 view .LVU1301
 6974              	.LBB5750:
 6975              	.LBB5743:
 6976              	.LBI5743:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6977              		.loc 5 396 7 discriminator 2 view .LVU1302
 6978              	.LBB5744:
 6979              	.LBI5744:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6980              		.loc 5 346 7 discriminator 2 view .LVU1303
 6981              	.LBB5745:
 6982              	.LBI5745:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6983              		.loc 5 346 7 discriminator 2 view .LVU1304
 6984              	.LBB5746:
 6985              	.LBI5746:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6986              		.loc 21 387 7 discriminator 2 view .LVU1305
 6987              	.LBB5747:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 6988              		.loc 21 389 2 discriminator 2 view .LVU1306
 6989              		.loc 21 395 2 discriminator 2 view .LVU1307
 6990              		.loc 21 395 49 is_stmt 0 discriminator 2 view .LVU1308
 6991 0182 46F24121 		movw	r1, #25153
 6992              	.LVL289:
 6993              		.loc 21 395 49 discriminator 2 view .LVU1309
 6994 0186 ADF81811 		strh	r1, [sp, #280]	@ movhi
 6995              	.LVL290:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 498


 6996              		.loc 21 395 49 discriminator 2 view .LVU1310
 6997              	.LBE5747:
 6998              	.LBE5746:
 6999              	.LBE5745:
 7000              	.LBE5744:
 7001              	.LBE5743:
 7002              	.LBB5748:
 7003              	.LBI5734:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7004              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1311
 7005              	.LBB5740:
 7006              	.LBI5735:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7007              		.loc 5 182 7 discriminator 2 view .LVU1312
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7008              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1313
 7009              	.LBE5740:
 7010              	.LBB5741:
 7011              	.LBI5737:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7012              		.loc 21 321 7 is_stmt 1 discriminator 2 view .LVU1314
 7013              	.LBB5739:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7014              		.loc 21 322 9 discriminator 2 view .LVU1315
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7015              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1316
 7016              	.LBE5739:
 7017              	.LBE5741:
 7018              	.LBE5748:
 7019              	.LBE5750:
 7020              	.LBE5752:
 7021              	.LBE5754:
 7022              	.LBE5756:
 7023              	.LBE5758:
 7024              	.LBE5770:
 7025              	.LBE5774:
 7026              	.LBE5781:
 7027              	.LBB5782:
 7028              	.LBI5782:
 7029              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1317
 7030              	.LBB5783:
 7031              	.LBI5783:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7032              		.loc 7 89 7 discriminator 2 view .LVU1318
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7033              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1319
 7034              	.LBE5783:
 7035              	.LBE5782:
 7036              	.LBB5784:
 7037              	.LBI5784:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7038              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1320
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7039              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1321
 7040              	.LBE5784:
 7041              	.LBE5789:
 7042              	.LBE5794:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 499


 7043              	.LBE6017:
 7044              	.LBB6018:
 7045              	.LBI5875:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 7046              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1322
 7047              	.LBB5935:
 7048              	.LBB5931:
 7049              	.LBB5922:
 7050              	.LBI5922:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7051              		.loc 27 76 5 discriminator 2 view .LVU1323
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7052              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1324
 7053              	.LBE5922:
 7054              	.LBB5923:
 7055              	.LBI5923:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7056              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1325
 7057              	.LBB5924:
 7058              	.LBI5924:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7059              		.loc 7 79 7 discriminator 2 view .LVU1326
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7060              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1327
 7061              	.LBE5924:
 7062              	.LBE5923:
 7063              	.LBB5925:
 7064              	.LBI5878:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 7065              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1328
 7066              	.LBB5919:
 7067              	.LBB5910:
 7068              	.LBI5910:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7069              		.loc 5 190 7 discriminator 2 view .LVU1329
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7070              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1330
 7071              	.LBE5910:
 7072              	.LBB5911:
 7073              	.LBI5911:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7074              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1331
 7075              	.LBB5912:
 7076              	.LBB5913:
 7077              	.LBB5914:
 7078              	.LBI5914:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7079              		.loc 9 147 7 discriminator 2 view .LVU1332
 7080              	.LBB5915:
 7081              	.LBI5915:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7082              		.loc 7 82 7 discriminator 2 view .LVU1333
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7083              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1334
 7084              	.LBE5915:
 7085              	.LBE5914:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 500


 7086              		.loc 5 157 35 discriminator 2 view .LVU1335
 7087 018a 4DA9     		add	r1, sp, #308
 7088              	.LVL291:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7089              		.loc 5 157 35 discriminator 2 view .LVU1336
 7090 018c C4F8FC10 		str	r1, [r4, #252]
 7091              	.LVL292:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7092              		.loc 5 157 35 discriminator 2 view .LVU1337
 7093              	.LBE5913:
 7094              	.LBE5912:
 7095              	.LBE5911:
 7096              	.LBB5916:
 7097              	.LBI5916:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7098              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1338
 7099              	.LBE5916:
 7100              	.LBE5919:
 7101              	.LBE5925:
 7102              	.LBE5931:
 7103              	.LBE5935:
 7104              	.LBE6018:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7105              		.loc 21 357 2 discriminator 2 view .LVU1339
 7106              	.LBB6019:
 7107              	.LBB5936:
 7108              	.LBB5932:
 7109              	.LBB5926:
 7110              	.LBB5920:
 7111              	.LBB5917:
 7112              	.LBI5880:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 7113              		.loc 5 263 9 discriminator 2 view .LVU1340
 7114              	.LBB5908:
 7115              	.LBB5906:
 7116              	.LBI5882:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 7117              		.loc 5 243 9 discriminator 2 view .LVU1341
 7118              	.LBB5904:
 7119              	.LBB5902:
 7120              	.LBI5884:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7121              		.loc 25 206 7 discriminator 2 view .LVU1342
 7122              	.LBB5900:
 7123              	.LBB5897:
 7124              	.LBI5886:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 7125              		.loc 5 396 7 discriminator 2 view .LVU1343
 7126              	.LBB5892:
 7127              	.LBI5887:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7128              		.loc 5 346 7 discriminator 2 view .LVU1344
 7129              	.LBB5891:
 7130              	.LBI5888:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7131              		.loc 21 321 7 discriminator 2 view .LVU1345
 7132              	.LBB5890:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 501


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7133              		.loc 21 322 9 discriminator 2 view .LVU1346
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7134              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1347
 7135              	.LBE5890:
 7136              	.LBE5891:
 7137              	.LBE5892:
 7138              	.LBE5897:
 7139              	.LBB5898:
 7140              	.LBI5893:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7141              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1348
 7142              	.LBB5896:
 7143              	.LBI5894:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7144              		.loc 5 182 7 discriminator 2 view .LVU1349
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7145              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1350
 7146              	.LBE5896:
 7147              	.LBE5898:
 7148              	.LBE5900:
 7149              	.LBE5902:
 7150              	.LBE5904:
 7151              	.LBE5906:
 7152              	.LBE5908:
 7153              	.LBE5917:
 7154              	.LBE5920:
 7155              	.LBE5926:
 7156              	.LBE5932:
 7157              	.LBE5936:
 7158              	.LBE6019:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7159              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1351
 7160              	.LBB6020:
 7161              	.LBB5937:
 7162              	.LBB5933:
 7163              	.LBB5927:
 7164              	.LBI5927:
 7165              		.loc 9 162 7 discriminator 2 view .LVU1352
 7166              	.LBB5928:
 7167              	.LBI5928:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7168              		.loc 7 89 7 discriminator 2 view .LVU1353
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7169              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1354
 7170              	.LBE5928:
 7171              	.LBE5927:
 7172              	.LBB5929:
 7173              	.LBI5929:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7174              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1355
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7175              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1356
 7176              	.LBE5929:
 7177              	.LBE5933:
 7178              	.LBE5937:
 7179              	.LBE6020:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 502


 7180              	.LBB6021:
 7181              	.LBI5795:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 7182              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1357
 7183              	.LBB5858:
 7184              	.LBB5854:
 7185              	.LBB5844:
 7186              	.LBI5844:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7187              		.loc 27 76 5 discriminator 2 view .LVU1358
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7188              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1359
 7189              	.LBE5844:
 7190              	.LBB5845:
 7191              	.LBI5845:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7192              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1360
 7193              	.LBB5846:
 7194              	.LBI5846:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7195              		.loc 7 79 7 discriminator 2 view .LVU1361
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7196              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1362
 7197              	.LBE5846:
 7198              	.LBE5845:
 7199              	.LBB5847:
 7200              	.LBI5798:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 7201              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1363
 7202              	.LBB5841:
 7203              	.LBB5832:
 7204              	.LBI5832:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7205              		.loc 5 190 7 discriminator 2 view .LVU1364
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7206              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1365
 7207              	.LBE5832:
 7208              	.LBB5833:
 7209              	.LBI5833:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7210              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1366
 7211              	.LBB5834:
 7212              	.LBB5835:
 7213              	.LBB5836:
 7214              	.LBI5836:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7215              		.loc 9 147 7 discriminator 2 view .LVU1367
 7216              	.LBB5837:
 7217              	.LBI5837:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7218              		.loc 7 82 7 discriminator 2 view .LVU1368
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7219              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1369
 7220              	.LBE5837:
 7221              	.LBE5836:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7222              		.loc 5 157 35 discriminator 2 view .LVU1370
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 503


 7223 0190 54A9     		add	r1, sp, #336
 7224              	.LVL293:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7225              		.loc 5 157 35 discriminator 2 view .LVU1371
 7226 0192 C4F81811 		str	r1, [r4, #280]
 7227              	.LVL294:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7228              		.loc 5 157 35 discriminator 2 view .LVU1372
 7229              	.LBE5835:
 7230              	.LBE5834:
 7231              	.LBE5833:
 7232              	.LBB5838:
 7233              	.LBI5838:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7234              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1373
 7235              	.LBE5838:
 7236              	.LBE5841:
 7237              	.LBE5847:
 7238              	.LBE5854:
 7239              	.LBE5858:
 7240              	.LBE6021:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7241              		.loc 21 357 2 discriminator 2 view .LVU1374
 7242              	.LBB6022:
 7243              	.LBB5859:
 7244              	.LBB5855:
 7245              	.LBB5848:
 7246              	.LBB5842:
 7247              	.LBB5839:
 7248              	.LBI5800:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 7249              		.loc 5 263 9 discriminator 2 view .LVU1375
 7250              	.LBB5830:
 7251              	.LBB5828:
 7252              	.LBI5802:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 7253              		.loc 5 243 9 discriminator 2 view .LVU1376
 7254              	.LBB5826:
 7255              	.LBB5824:
 7256              	.LBI5804:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7257              		.loc 25 206 7 discriminator 2 view .LVU1377
 7258              	.LBB5822:
 7259              	.LBB5815:
 7260              	.LBI5815:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 7261              		.loc 5 396 7 discriminator 2 view .LVU1378
 7262              	.LBB5816:
 7263              	.LBI5816:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7264              		.loc 5 346 7 discriminator 2 view .LVU1379
 7265              	.LBB5817:
 7266              	.LBI5817:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7267              		.loc 5 346 7 discriminator 2 view .LVU1380
 7268              	.LBB5818:
 7269              	.LBI5818:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 504


 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7270              		.loc 21 387 7 discriminator 2 view .LVU1381
 7271              	.LBB5819:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 7272              		.loc 21 389 2 discriminator 2 view .LVU1382
 7273              		.loc 21 395 2 discriminator 2 view .LVU1383
 7274              		.loc 21 395 49 is_stmt 0 discriminator 2 view .LVU1384
 7275 0196 46F24221 		movw	r1, #25154
 7276              	.LVL295:
 7277              		.loc 21 395 49 discriminator 2 view .LVU1385
 7278 019a ADF85011 		strh	r1, [sp, #336]	@ movhi
 7279              	.LVL296:
 7280              		.loc 21 395 49 discriminator 2 view .LVU1386
 7281              	.LBE5819:
 7282              	.LBE5818:
 7283              	.LBE5817:
 7284              	.LBE5816:
 7285              	.LBE5815:
 7286              	.LBB5820:
 7287              	.LBI5806:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7288              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1387
 7289              	.LBB5812:
 7290              	.LBI5807:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7291              		.loc 5 182 7 discriminator 2 view .LVU1388
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7292              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1389
 7293              	.LBE5812:
 7294              	.LBB5813:
 7295              	.LBI5809:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7296              		.loc 21 321 7 is_stmt 1 discriminator 2 view .LVU1390
 7297              	.LBB5811:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7298              		.loc 21 322 9 discriminator 2 view .LVU1391
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7299              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1392
 7300              	.LBE5811:
 7301              	.LBE5813:
 7302              	.LBE5820:
 7303              	.LBE5822:
 7304              	.LBE5824:
 7305              	.LBE5826:
 7306              	.LBE5828:
 7307              	.LBE5830:
 7308              	.LBE5839:
 7309              	.LBE5842:
 7310              	.LBE5848:
 7311              	.LBB5849:
 7312              	.LBI5849:
 7313              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1393
 7314              	.LBB5850:
 7315              	.LBI5850:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7316              		.loc 7 89 7 discriminator 2 view .LVU1394
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 505


 7317              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1395
 7318              	.LBE5850:
 7319              	.LBE5849:
 7320              	.LBB5851:
 7321              	.LBI5851:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7322              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1396
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7323              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1397
 7324              	.LBE5851:
 7325              	.LBE5855:
 7326              	.LBE5859:
 7327              	.LBE6022:
 7328              	.LBB6023:
 7329              	.LBI5939:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 7330              		.loc 8 352 12 is_stmt 1 discriminator 2 view .LVU1398
 7331              	.LBB6001:
 7332              	.LBB5996:
 7333              	.LBB5986:
 7334              	.LBI5986:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7335              		.loc 27 76 5 discriminator 2 view .LVU1399
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7336              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1400
 7337              	.LBE5986:
 7338              	.LBB5987:
 7339              	.LBI5987:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7340              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1401
 7341              	.LBB5988:
 7342              	.LBI5988:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7343              		.loc 7 79 7 discriminator 2 view .LVU1402
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7344              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1403
 7345              	.LBE5988:
 7346              	.LBE5987:
 7347              	.LBB5989:
 7348              	.LBI5942:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 7349              		.loc 5 525 7 is_stmt 1 discriminator 2 view .LVU1404
 7350              	.LBB5983:
 7351              	.LBB5974:
 7352              	.LBI5974:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7353              		.loc 5 190 7 discriminator 2 view .LVU1405
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7354              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU1406
 7355              	.LBE5974:
 7356              	.LBB5975:
 7357              	.LBI5975:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7358              		.loc 5 156 2 is_stmt 1 discriminator 2 view .LVU1407
 7359              	.LBB5976:
 7360              	.LBB5977:
 7361              	.LBB5978:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 506


 7362              	.LBI5978:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7363              		.loc 9 147 7 discriminator 2 view .LVU1408
 7364              	.LBB5979:
 7365              	.LBI5979:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7366              		.loc 7 82 7 discriminator 2 view .LVU1409
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7367              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU1410
 7368              	.LBE5979:
 7369              	.LBE5978:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7370              		.loc 5 157 35 discriminator 2 view .LVU1411
 7371 019e 5BA9     		add	r1, sp, #364
 7372              	.LVL297:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7373              		.loc 5 157 35 discriminator 2 view .LVU1412
 7374 01a0 C4F83411 		str	r1, [r4, #308]
 7375              	.LVL298:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7376              		.loc 5 157 35 discriminator 2 view .LVU1413
 7377              	.LBE5977:
 7378              	.LBE5976:
 7379              	.LBE5975:
 7380              	.LBB5980:
 7381              	.LBI5980:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7382              		.loc 21 351 7 is_stmt 1 discriminator 2 view .LVU1414
 7383              	.LBE5980:
 7384              	.LBE5983:
 7385              	.LBE5989:
 7386              	.LBE5996:
 7387              	.LBE6001:
 7388              	.LBE6023:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7389              		.loc 21 357 2 discriminator 2 view .LVU1415
 7390              	.LBB6024:
 7391              	.LBB6002:
 7392              	.LBB5997:
 7393              	.LBB5990:
 7394              	.LBB5984:
 7395              	.LBB5981:
 7396              	.LBI5944:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 7397              		.loc 5 263 9 discriminator 2 view .LVU1416
 7398              	.LBB5972:
 7399              	.LBB5970:
 7400              	.LBI5946:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 7401              		.loc 5 243 9 discriminator 2 view .LVU1417
 7402              	.LBB5968:
 7403              	.LBB5966:
 7404              	.LBI5948:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7405              		.loc 25 206 7 discriminator 2 view .LVU1418
 7406              	.LBB5964:
 7407              	.LBB5961:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 507


 7408              	.LBI5950:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 7409              		.loc 5 396 7 discriminator 2 view .LVU1419
 7410              	.LBB5956:
 7411              	.LBI5951:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7412              		.loc 5 346 7 discriminator 2 view .LVU1420
 7413              	.LBB5955:
 7414              	.LBI5952:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7415              		.loc 21 321 7 discriminator 2 view .LVU1421
 7416              	.LBB5954:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7417              		.loc 21 322 9 discriminator 2 view .LVU1422
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7418              		.loc 21 322 9 is_stmt 0 discriminator 2 view .LVU1423
 7419              	.LBE5954:
 7420              	.LBE5955:
 7421              	.LBE5956:
 7422              	.LBE5961:
 7423              	.LBB5962:
 7424              	.LBI5957:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7425              		.loc 5 214 7 is_stmt 1 discriminator 2 view .LVU1424
 7426              	.LBB5960:
 7427              	.LBI5958:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7428              		.loc 5 182 7 discriminator 2 view .LVU1425
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7429              		.loc 5 182 7 is_stmt 0 discriminator 2 view .LVU1426
 7430              	.LBE5960:
 7431              	.LBE5962:
 7432              	.LBE5964:
 7433              	.LBE5966:
 7434              	.LBE5968:
 7435              	.LBE5970:
 7436              	.LBE5972:
 7437              	.LBE5981:
 7438              	.LBE5984:
 7439              	.LBE5990:
 7440              	.LBE5997:
 7441              	.LBE6002:
 7442              	.LBE6024:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7443              		.loc 21 322 9 is_stmt 1 discriminator 2 view .LVU1427
 7444              	.LBB6025:
 7445              	.LBB6003:
 7446              	.LBB5998:
 7447              	.LBB5991:
 7448              	.LBI5991:
 7449              		.loc 9 162 7 discriminator 2 view .LVU1428
 7450              	.LBB5992:
 7451              	.LBI5992:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7452              		.loc 7 89 7 discriminator 2 view .LVU1429
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7453              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1430
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 508


 7454              	.LBE5992:
 7455              	.LBE5991:
 7456              	.LBB5993:
 7457              	.LBI5993:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7458              		.loc 27 76 5 is_stmt 1 discriminator 2 view .LVU1431
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7459              		.loc 27 76 5 is_stmt 0 discriminator 2 view .LVU1432
 7460              	.LBE5993:
 7461              	.LBE5998:
 7462              	.LBE6003:
 7463              	.LBE6025:
 7464              	.LBB6026:
 7465              	.LBI6026:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7466              		.loc 9 144 7 is_stmt 1 discriminator 2 view .LVU1433
 7467              	.LBB6027:
 7468              	.LBI6027:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7469              		.loc 7 79 7 discriminator 2 view .LVU1434
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7470              		.loc 7 79 7 is_stmt 0 discriminator 2 view .LVU1435
 7471              	.LBE6027:
 7472              	.LBE6026:
 7473              	.LBB6028:
 7474              	.LBI5860:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 7475              		.loc 2 226 7 is_stmt 1 discriminator 2 view .LVU1436
 7476              	.LBB5874:
 7477              	.LBI5861:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 7478              		.loc 3 497 7 discriminator 2 view .LVU1437
 7479              	.LBB5871:
 7480              	.LBB5868:
 7481              	.LBB5864:
 7482              	.LBI5864:
 7483              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 509


  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 7484              		.loc 29 75 7 discriminator 2 view .LVU1438
 7485              		.loc 29 75 7 is_stmt 0 discriminator 2 view .LVU1439
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 510


 7486              	.LBE5864:
 7487              	.LBB5865:
 7488              	.LBI5865:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 7489              		.loc 29 79 7 is_stmt 1 discriminator 2 view .LVU1440
 7490              		.loc 29 79 7 is_stmt 0 discriminator 2 view .LVU1441
 7491              	.LBE5865:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 7492              		.loc 3 504 26 discriminator 2 view .LVU1442
 7493 01a4 2146     		mov	r1, r4
 7494 01a6 FFF7FEFF 		bl	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8
 7495              	.LVL299:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 7496              		.loc 3 504 26 discriminator 2 view .LVU1443
 7497              	.LBE5868:
 7498              	.LBE5871:
 7499              	.LBE5874:
 7500              	.LBE6028:
  20:utils.h       ****     return fourth_octave.at(note);
 7501              		.loc 28 20 5 discriminator 2 view .LVU1444
 7502 01aa 3846     		mov	r0, r7
 7503 01ac FFF7FEFF 		bl	__cxa_guard_release
 7504              	.LVL300:
 7505 01b0 0D4A     		ldr	r2, .L204+12
 7506 01b2 0E49     		ldr	r1, .L204+16
 7507 01b4 0A48     		ldr	r0, .L204+4
 7508 01b6 FFF7FEFF 		bl	__aeabi_atexit
 7509              	.LVL301:
 7510              	.LBB6029:
 7511              	.LBI6029:
 7512              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU1445
 7513              	.LBB6030:
 7514              	.LBI6030:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7515              		.loc 7 89 7 discriminator 2 view .LVU1446
 7516              	.L192:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7517              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU1447
 7518              	.LBE6030:
 7519              	.LBE6029:
  20:utils.h       ****     return fourth_octave.at(note);
 7520              		.loc 28 20 5 discriminator 5 view .LVU1448
 7521 01ba 1C3D     		subs	r5, r5, #28
 7522              	.LVL302:
 7523              	.LBB6031:
 7524              	.LBI6031:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 7525              		.loc 8 211 12 is_stmt 1 discriminator 5 view .LVU1449
 7526              	.LBB6032:
 7527              	.LBI6032:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7528              		.loc 5 657 7 discriminator 5 view .LVU1450
 7529              	.LBB6033:
 7530              	.LBI6033:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 511


 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7531              		.loc 5 229 7 discriminator 5 view .LVU1451
 7532              	.LBB6034:
 7533              	.LBB6035:
 7534              	.LBI6035:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7535              		.loc 5 221 7 discriminator 5 view .LVU1452
 7536              	.LBB6036:
 7537              	.LBI6036:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7538              		.loc 5 186 7 discriminator 5 view .LVU1453
 7539              	.LBB6037:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7540              		.loc 5 187 28 is_stmt 0 discriminator 5 view .LVU1454
 7541 01bc 2B46     		mov	r3, r5
 7542 01be 53F8080B 		ldr	r0, [r3], #8
 7543              	.LVL303:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7544              		.loc 5 187 28 discriminator 5 view .LVU1455
 7545              	.LBE6037:
 7546              	.LBE6036:
 7547              	.LBE6035:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7548              		.loc 5 231 2 discriminator 5 view .LVU1456
 7549 01c2 9842     		cmp	r0, r3
 7550 01c4 03D0     		beq	.L191
 7551              	.LVL304:
 7552              	.LBB6038:
 7553              	.LBI6038:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7554              		.loc 5 236 7 is_stmt 1 view .LVU1457
 7555              	.LBB6039:
 7556              	.LBB6040:
 7557              	.LBI6040:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7558              		.loc 6 491 7 view .LVU1458
 7559              	.LBB6041:
 7560              	.LBI6041:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7561              		.loc 7 120 7 view .LVU1459
 7562              	.LBE6041:
 7563              	.LBE6040:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7564              		.loc 5 237 34 is_stmt 0 view .LVU1460
 7565 01c6 A968     		ldr	r1, [r5, #8]
 7566              	.LBB6044:
 7567              	.LBB6043:
 7568              	.LBB6042:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7569              		.loc 7 133 19 view .LVU1461
 7570 01c8 0131     		adds	r1, r1, #1
 7571              	.LVL305:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7572              		.loc 7 133 19 view .LVU1462
 7573 01ca FFF7FEFF 		bl	_ZdlPvj
 7574              	.LVL306:
 7575              	.L191:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 512


 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7576              		.loc 7 133 19 view .LVU1463
 7577              	.LBE6042:
 7578              	.LBE6043:
 7579              	.LBE6044:
 7580              	.LBE6039:
 7581              	.LBE6038:
 7582              	.LBE6034:
 7583              	.LBE6033:
 7584              	.LBB6045:
 7585              	.LBI6045:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7586              		.loc 5 150 14 is_stmt 1 view .LVU1464
 7587              	.LBB6046:
 7588              	.LBI6046:
 7589              		.loc 9 162 7 view .LVU1465
 7590              	.LBB6047:
 7591              	.LBI6047:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7592              		.loc 7 89 7 view .LVU1466
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7593              		.loc 7 89 7 is_stmt 0 view .LVU1467
 7594              	.LBE6047:
 7595              	.LBE6046:
 7596              	.LBE6045:
 7597              	.LBE6032:
 7598              	.LBE6031:
  20:utils.h       ****     return fourth_octave.at(note);
 7599              		.loc 28 20 5 view .LVU1468
 7600 01ce A542     		cmp	r5, r4
 7601 01d0 F3D1     		bne	.L192
 7602 01d2 20E7     		b	.L189
 7603              	.LVL307:
 7604              	.L193:
 7605              	.LBB6048:
 7606              	.LBB4885:
 7607              	.LBB4883:
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 7608              		.loc 4 785 22 view .LVU1469
 7609 01d4 0648     		ldr	r0, .L204+20
 7610 01d6 FFF7FEFF 		bl	_ZSt20__throw_out_of_rangePKc
 7611              	.LVL308:
 7612              	.L205:
 7613 01da 00BF     		.align	2
 7614              	.L204:
 7615 01dc 00000000 		.word	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octa
 7616 01e0 00000000 		.word	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octave
 7617 01e4 07690FC7 		.word	-955291385
 7618 01e8 00000000 		.word	__dso_handle
 7619 01ec 00000000 		.word	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
 7620 01f0 00000000 		.word	.LC2
 7621              	.LBE4883:
 7622              	.LBE4885:
 7623              	.LBE6048:
 7624              		.cfi_endproc
 7625              	.LFE5416:
 7627              		.section	.text._Z13chord_to_midi5Chord,"axG",%progbits,_Z13chord_to_midi5Chord,comdat
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 513


 7628              		.align	1
 7629              		.p2align 2,,3
 7630              		.weak	_Z13chord_to_midi5Chord
 7631              		.syntax unified
 7632              		.thumb
 7633              		.thumb_func
 7634              		.fpu fpv5-d16
 7636              	_Z13chord_to_midi5Chord:
 7637              	.LVL309:
 7638              	.LFB5447:
  23:utils.h       **** 
  24:utils.h       **** inline std::vector<int> chord_to_midi(Chord chord) {
 7639              		.loc 28 24 52 is_stmt 1 view -0
 7640              		.cfi_startproc
 7641              		@ args = 0, pretend = 0, frame = 8
 7642              		@ frame_needed = 0, uses_anonymous_args = 0
  25:utils.h       ****     std::vector<int> midi_notes;
 7643              		.loc 28 25 5 view .LVU1471
  24:utils.h       ****     std::vector<int> midi_notes;
 7644              		.loc 28 24 52 is_stmt 0 view .LVU1472
 7645 0000 30B5     		push	{r4, r5, lr}
 7646              		.cfi_def_cfa_offset 12
 7647              		.cfi_offset 4, -12
 7648              		.cfi_offset 5, -8
 7649              		.cfi_offset 14, -4
 7650              	.LBB6263:
 7651              	.LBB6264:
 7652              	.LBB6265:
 7653              	.LBB6266:
 7654              	.LBB6267:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7655              		.loc 14 98 47 view .LVU1473
 7656 0002 0023     		movs	r3, #0
 7657              	.LBE6267:
 7658              	.LBE6266:
 7659              	.LBE6265:
 7660              	.LBE6264:
 7661              	.LBE6263:
  24:utils.h       ****     std::vector<int> midi_notes;
 7662              		.loc 28 24 52 view .LVU1474
 7663 0004 0446     		mov	r4, r0
 7664              	.LVL310:
 7665              	.LBB6281:
 7666              	.LBI6263:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7667              		.loc 14 487 7 is_stmt 1 view .LVU1475
 7668              	.LBB6278:
 7669              	.LBI6264:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7670              		.loc 14 288 7 view .LVU1476
 7671              	.LBB6275:
 7672              	.LBI6265:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 7673              		.loc 14 131 2 view .LVU1477
 7674              	.LBB6270:
 7675              	.LBI6270:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 514


 7676              		.loc 9 144 7 view .LVU1478
 7677              	.LBB6271:
 7678              	.LBI6271:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7679              		.loc 7 79 7 view .LVU1479
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7680              		.loc 7 79 7 is_stmt 0 view .LVU1480
 7681              	.LBE6271:
 7682              	.LBE6270:
 7683              	.LBB6272:
 7684              	.LBI6266:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7685              		.loc 14 97 2 is_stmt 1 view .LVU1481
 7686              	.LBE6272:
 7687              	.LBE6275:
 7688              	.LBE6278:
 7689              	.LBE6281:
  24:utils.h       ****     std::vector<int> midi_notes;
 7690              		.loc 28 24 52 is_stmt 0 view .LVU1482
 7691 0006 83B0     		sub	sp, sp, #12
 7692              		.cfi_def_cfa_offset 24
  24:utils.h       ****     std::vector<int> midi_notes;
 7693              		.loc 28 24 52 view .LVU1483
 7694 0008 0D46     		mov	r5, r1
 7695              	.LBB6282:
 7696              	.LBB6279:
 7697              	.LBB6276:
 7698              	.LBB6273:
 7699              	.LBB6268:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7700              		.loc 14 98 47 view .LVU1484
 7701 000a 0360     		str	r3, [r0]
 7702              	.LBE6268:
 7703              	.LBE6273:
 7704              	.LBE6276:
 7705              	.LBE6279:
 7706              	.LBE6282:
  26:utils.h       ****     // Push root
  27:utils.h       ****     midi_notes.push_back(note_name_to_midi(chord.root));
 7707              		.loc 28 27 43 view .LVU1485
 7708 000c 0846     		mov	r0, r1
 7709              	.LVL311:
 7710              	.LBB6283:
 7711              	.LBB6280:
 7712              	.LBB6277:
 7713              	.LBB6274:
 7714              	.LBB6269:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7715              		.loc 14 98 47 view .LVU1486
 7716 000e C4E90133 		strd	r3, r3, [r4, #4]
 7717              	.LVL312:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7718              		.loc 14 98 47 view .LVU1487
 7719              	.LBE6269:
 7720              	.LBE6274:
 7721              	.LBE6277:
 7722              	.LBE6280:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 515


 7723              	.LBE6283:
 7724              		.loc 28 27 5 is_stmt 1 view .LVU1488
 7725              		.loc 28 27 43 is_stmt 0 view .LVU1489
 7726 0012 FFF7FEFF 		bl	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 7727              	.LVL313:
 7728              		.loc 28 27 43 view .LVU1490
 7729 0016 0190     		str	r0, [sp, #4]
 7730              	.LVL314:
 7731              	.LBB6284:
 7732              	.LBI6284:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7733              		.loc 14 1203 7 is_stmt 1 view .LVU1491
 7734              	.LBB6285:
 7735              	.LBI6285:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7736              		.loc 16 109 7 view .LVU1492
 7737              	.LBB6286:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7738              		.loc 16 112 2 is_stmt 0 view .LVU1493
 7739 0018 D4E90113 		ldrd	r1, r3, [r4, #4]
 7740 001c 9942     		cmp	r1, r3
 7741 001e 00F0F580 		beq	.L207
 7742              	.LVL315:
 7743              	.LBB6287:
 7744              	.LBI6287:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7745              		.loc 6 507 2 is_stmt 1 view .LVU1494
 7746              	.LBB6288:
 7747              	.LBI6288:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7748              		.loc 7 148 2 view .LVU1495
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7749              		.loc 7 148 2 is_stmt 0 view .LVU1496
 7750              	.LBE6288:
 7751              	.LBE6287:
 7752              	.LBE6286:
 7753              	.LBE6285:
 7754              	.LBE6284:
 7755              		.loc 18 175 3 is_stmt 1 view .LVU1497
 7756              	.LBB6298:
 7757              	.LBB6296:
 7758              	.LBB6294:
 7759              	.LBB6291:
 7760              	.LBB6290:
 7761              	.LBB6289:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7762              		.loc 7 150 4 is_stmt 0 view .LVU1498
 7763 0022 41F8040B 		str	r0, [r1], #4
 7764              	.LVL316:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7765              		.loc 7 150 4 view .LVU1499
 7766              	.LBE6289:
 7767              	.LBE6290:
 7768              	.LBE6291:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7769              		.loc 16 117 6 view .LVU1500
 7770 0026 6160     		str	r1, [r4, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 516


 7771              	.L208:
 7772              	.LVL317:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7773              		.loc 16 117 6 view .LVU1501
 7774              	.LBE6294:
 7775              	.LBE6296:
 7776              	.LBE6298:
  28:utils.h       **** 
  29:utils.h       ****     // Push third and fifth
  30:utils.h       ****     switch (chord.quality) {
 7777              		.loc 28 30 5 is_stmt 1 view .LVU1502
 7778              		.loc 28 30 19 is_stmt 0 view .LVU1503
 7779 0028 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
 7780 002a 032B     		cmp	r3, #3
 7781 002c 1BD8     		bhi	.L209
 7782 002e DFE803F0 		tbb	[pc, r3]
 7783              	.L211:
 7784 0032 B1       		.byte	(.L214-.L211)/2
 7785 0033 02       		.byte	(.L213-.L211)/2
 7786 0034 9D       		.byte	(.L212-.L211)/2
 7787 0035 85       		.byte	(.L210-.L211)/2
 7788              		.p2align 1
 7789              	.L213:
  31:utils.h       ****         case MAJOR:
  32:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
  33:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
  34:utils.h       ****             break;
  35:utils.h       ****         case MINOR:
 7790              		.loc 28 35 9 is_stmt 1 view .LVU1504
  36:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
 7791              		.loc 28 36 13 view .LVU1505
 7792              	.LVL318:
 7793              	.LBB6299:
 7794              	.LBI6299:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7795              		.loc 14 1043 7 view .LVU1506
 7796              	.LBE6299:
 7797              	.LBB6300:
 7798              	.LBB6301:
 7799              	.LBB6302:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7800              		.loc 16 112 20 is_stmt 0 view .LVU1507
 7801 0036 D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7802              		.loc 16 112 47 view .LVU1508
 7803 003a A168     		ldr	r1, [r4, #8]
 7804              	.LBE6302:
 7805              	.LBE6301:
 7806              	.LBE6300:
 7807              		.loc 28 36 48 view .LVU1509
 7808 003c 0268     		ldr	r2, [r0]
 7809              	.LBB6318:
 7810              	.LBB6314:
 7811              	.LBB6310:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7812              		.loc 16 112 2 view .LVU1510
 7813 003e 8B42     		cmp	r3, r1
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 517


 7814              	.LBE6310:
 7815              	.LBE6314:
 7816              	.LBE6318:
 7817              		.loc 28 36 48 view .LVU1511
 7818 0040 02F10302 		add	r2, r2, #3
 7819 0044 0192     		str	r2, [sp, #4]
 7820              	.LVL319:
 7821              	.LBB6319:
 7822              	.LBI6300:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7823              		.loc 14 1203 7 is_stmt 1 view .LVU1512
 7824              	.LBB6315:
 7825              	.LBI6301:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7826              		.loc 16 109 7 view .LVU1513
 7827              	.LBB6311:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7828              		.loc 16 112 2 is_stmt 0 view .LVU1514
 7829 0046 00F0AF80 		beq	.L219
 7830              	.LVL320:
 7831              	.L265:
 7832              	.LBB6303:
 7833              	.LBI6303:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7834              		.loc 6 507 2 is_stmt 1 view .LVU1515
 7835              	.LBB6304:
 7836              	.LBI6304:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7837              		.loc 7 148 2 view .LVU1516
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7838              		.loc 7 148 2 is_stmt 0 view .LVU1517
 7839              	.LBE6304:
 7840              	.LBE6303:
 7841              	.LBE6311:
 7842              	.LBE6315:
 7843              	.LBE6319:
 7844              		.loc 18 175 3 is_stmt 1 view .LVU1518
 7845              	.LBB6320:
 7846              	.LBB6316:
 7847              	.LBB6312:
 7848              	.LBB6307:
 7849              	.LBB6306:
 7850              	.LBB6305:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7851              		.loc 7 150 4 is_stmt 0 view .LVU1519
 7852 004a 43F8042B 		str	r2, [r3], #4
 7853              	.LVL321:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7854              		.loc 7 150 4 view .LVU1520
 7855              	.LBE6305:
 7856              	.LBE6306:
 7857              	.LBE6307:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7858              		.loc 16 117 6 view .LVU1521
 7859 004e 6360     		str	r3, [r4, #4]
 7860              	.L220:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 518


 7861              		.loc 16 117 6 view .LVU1522
 7862              	.LBE6312:
 7863              	.LBE6316:
 7864              	.LBE6320:
  37:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 7865              		.loc 28 37 13 is_stmt 1 view .LVU1523
 7866              	.LVL322:
 7867              	.LBB6321:
 7868              	.LBI6321:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7869              		.loc 14 1043 7 view .LVU1524
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7870              		.loc 14 1043 7 is_stmt 0 view .LVU1525
 7871              	.LBE6321:
 7872              		.loc 28 37 48 view .LVU1526
 7873 0050 0268     		ldr	r2, [r0]
 7874              	.LBB6322:
 7875              	.LBB6323:
 7876              	.LBB6324:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7877              		.loc 16 112 2 view .LVU1527
 7878 0052 9942     		cmp	r1, r3
 7879              	.LBE6324:
 7880              	.LBE6323:
 7881              	.LBE6322:
 7882              		.loc 28 37 48 view .LVU1528
 7883 0054 02F10702 		add	r2, r2, #7
 7884 0058 0192     		str	r2, [sp, #4]
 7885              	.LVL323:
 7886              	.LBB6329:
 7887              	.LBI6322:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7888              		.loc 14 1203 7 is_stmt 1 view .LVU1529
 7889              	.LBB6327:
 7890              	.LBI6323:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7891              		.loc 16 109 7 view .LVU1530
 7892              	.LBB6325:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7893              		.loc 16 112 2 is_stmt 0 view .LVU1531
 7894 005a 00F08280 		beq	.L229
 7895              	.LVL324:
 7896              	.L263:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7897              		.loc 16 112 2 view .LVU1532
 7898              	.LBE6325:
 7899              	.LBE6327:
 7900              	.LBE6329:
 7901              	.LBB6330:
 7902              	.LBB6331:
 7903              	.LBB6332:
 7904              	.LBB6333:
 7905              	.LBI6333:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7906              		.loc 6 507 2 is_stmt 1 view .LVU1533
 7907              	.LBB6334:
 7908              	.LBI6334:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 519


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7909              		.loc 7 148 2 view .LVU1534
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7910              		.loc 7 148 2 is_stmt 0 view .LVU1535
 7911              	.LBE6334:
 7912              	.LBE6333:
 7913              	.LBE6332:
 7914              	.LBE6331:
 7915              	.LBE6330:
 7916              		.loc 18 175 3 is_stmt 1 view .LVU1536
 7917              	.LBB6348:
 7918              	.LBB6344:
 7919              	.LBB6340:
 7920              	.LBB6337:
 7921              	.LBB6336:
 7922              	.LBB6335:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7923              		.loc 7 150 4 is_stmt 0 view .LVU1537
 7924 005e 43F8042B 		str	r2, [r3], #4
 7925              	.LVL325:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7926              		.loc 7 150 4 view .LVU1538
 7927              	.LBE6335:
 7928              	.LBE6336:
 7929              	.LBE6337:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7930              		.loc 16 117 6 view .LVU1539
 7931 0062 6360     		str	r3, [r4, #4]
 7932              	.L230:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7933              		.loc 16 117 6 view .LVU1540
 7934              	.LBE6340:
 7935              	.LBE6344:
 7936              	.LBE6348:
  38:utils.h       ****             break;
  39:utils.h       ****         case AUGMENTED:
  40:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
  41:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
  42:utils.h       ****             break;
  43:utils.h       ****         case DIMINISHED:
  44:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
  45:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
  46:utils.h       ****             break;
 7937              		.loc 28 46 13 is_stmt 1 view .LVU1541
  47:utils.h       ****     }
  48:utils.h       ****     
  49:utils.h       ****     bool major = (chord.quality == ChordQuality::MAJOR 
 7938              		.loc 28 49 25 is_stmt 0 view .LVU1542
 7939 0064 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
 7940              	.L209:
 7941              		.loc 28 49 5 is_stmt 1 view .LVU1543
 7942 0066 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
  50:utils.h       ****         || chord.quality == ChordQuality::AUGMENTED);
 7943              		.loc 28 50 9 is_stmt 0 view .LVU1544
 7944 0068 03F0FD03 		and	r3, r3, #253
 7945              	.LVL326:
  51:utils.h       ****     switch (chord.extension) {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 520


 7946              		.loc 28 51 5 is_stmt 1 view .LVU1545
 7947 006c 013A     		subs	r2, r2, #1
 7948 006e 032A     		cmp	r2, #3
 7949 0070 1BD8     		bhi	.L206
 7950 0072 DFE802F0 		tbb	[pc, r2]
 7951              	.L233:
 7952 0076 53       		.byte	(.L236-.L233)/2
 7953 0077 42       		.byte	(.L235-.L233)/2
 7954 0078 02       		.byte	(.L234-.L233)/2
 7955 0079 1D       		.byte	(.L232-.L233)/2
 7956              		.p2align 1
 7957              	.L234:
  52:utils.h       ****         case TRIAD:
  53:utils.h       ****             break;
  54:utils.h       ****             
  55:utils.h       ****         case SIXTH:
  56:utils.h       ****             midi_notes.push_back(midi_notes[0] + 9); // major 6th
  57:utils.h       ****             break;
  58:utils.h       **** 
  59:utils.h       ****         case SEVENTH:
  60:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
  61:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
  62:utils.h       ****             break;
  63:utils.h       **** 
  64:utils.h       ****         case NINTH:
 7958              		.loc 28 64 9 view .LVU1546
  65:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 7959              		.loc 28 65 13 view .LVU1547
 7960              	.LBB6349:
 7961              	.LBB6350:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 7962              		.loc 14 1046 25 is_stmt 0 view .LVU1548
 7963 007a 2268     		ldr	r2, [r4]
 7964              	.LBE6350:
 7965              	.LBE6349:
 7966              		.loc 28 65 19 view .LVU1549
 7967 007c 002B     		cmp	r3, #0
 7968 007e 00F0A580 		beq	.L266
 7969              	.LVL327:
 7970              	.LBB6351:
 7971              	.LBI6351:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7972              		.loc 14 1043 7 is_stmt 1 view .LVU1550
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7973              		.loc 14 1043 7 is_stmt 0 view .LVU1551
 7974              	.LBE6351:
  66:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7975              		.loc 28 66 54 view .LVU1552
 7976 0082 1068     		ldr	r0, [r2]
 7977              	.LBB6352:
 7978              	.LBB6353:
 7979              	.LBB6354:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7980              		.loc 16 112 47 view .LVU1553
 7981 0084 D4E90131 		ldrd	r3, r1, [r4, #4]
 7982              	.LVL328:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 521


 7983              		.loc 16 112 47 view .LVU1554
 7984              	.LBE6354:
 7985              	.LBE6353:
 7986              	.LBE6352:
 7987              		.loc 28 66 54 view .LVU1555
 7988 0088 0A30     		adds	r0, r0, #10
 7989              	.LBB6370:
 7990              	.LBB6366:
 7991              	.LBB6362:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7992              		.loc 16 112 2 view .LVU1556
 7993 008a 8B42     		cmp	r3, r1
 7994              	.LBE6362:
 7995              	.LBE6366:
 7996              	.LBE6370:
 7997              		.loc 28 66 54 view .LVU1557
 7998 008c 0190     		str	r0, [sp, #4]
 7999              	.LVL329:
 8000              	.LBB6371:
 8001              	.LBI6352:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8002              		.loc 14 1203 7 is_stmt 1 view .LVU1558
 8003              	.LBB6367:
 8004              	.LBI6353:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8005              		.loc 16 109 7 view .LVU1559
 8006              	.LBB6363:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8007              		.loc 16 112 2 is_stmt 0 view .LVU1560
 8008 008e 00F0A580 		beq	.L246
 8009              	.LVL330:
 8010              	.L258:
 8011              	.LBB6355:
 8012              	.LBI6355:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8013              		.loc 6 507 2 is_stmt 1 view .LVU1561
 8014              	.LBB6356:
 8015              	.LBI6356:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8016              		.loc 7 148 2 view .LVU1562
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8017              		.loc 7 148 2 is_stmt 0 view .LVU1563
 8018              	.LBE6356:
 8019              	.LBE6355:
 8020              	.LBE6363:
 8021              	.LBE6367:
 8022              	.LBE6371:
 8023              		.loc 18 175 3 is_stmt 1 view .LVU1564
 8024              	.LBB6372:
 8025              	.LBB6368:
 8026              	.LBB6364:
 8027              	.LBB6359:
 8028              	.LBB6358:
 8029              	.LBB6357:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8030              		.loc 7 150 4 is_stmt 0 view .LVU1565
 8031 0092 43F8040B 		str	r0, [r3], #4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 522


 8032              	.LVL331:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8033              		.loc 7 150 4 view .LVU1566
 8034              	.LBE6357:
 8035              	.LBE6358:
 8036              	.LBE6359:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8037              		.loc 16 117 6 view .LVU1567
 8038 0096 6360     		str	r3, [r4, #4]
 8039              	.L245:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8040              		.loc 16 117 6 view .LVU1568
 8041              	.LBE6364:
 8042              	.LBE6368:
 8043              	.LBE6372:
  67:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 8044              		.loc 28 67 13 is_stmt 1 discriminator 1 view .LVU1569
 8045              	.LVL332:
 8046              	.LBB6373:
 8047              	.LBI6373:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8048              		.loc 14 1043 7 discriminator 1 view .LVU1570
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8049              		.loc 14 1043 7 is_stmt 0 discriminator 1 view .LVU1571
 8050              	.LBE6373:
 8051              		.loc 28 67 48 discriminator 1 view .LVU1572
 8052 0098 1268     		ldr	r2, [r2]
 8053              	.LBB6374:
 8054              	.LBB6375:
 8055              	.LBB6376:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8056              		.loc 16 112 2 discriminator 1 view .LVU1573
 8057 009a 9942     		cmp	r1, r3
 8058              	.LBE6376:
 8059              	.LBE6375:
 8060              	.LBE6374:
 8061              		.loc 28 67 48 discriminator 1 view .LVU1574
 8062 009c 02F10E02 		add	r2, r2, #14
 8063 00a0 0192     		str	r2, [sp, #4]
 8064              	.LVL333:
 8065              	.LBB6385:
 8066              	.LBI6374:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8067              		.loc 14 1203 7 is_stmt 1 discriminator 1 view .LVU1575
 8068              	.LBB6382:
 8069              	.LBI6375:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8070              		.loc 16 109 7 discriminator 1 view .LVU1576
 8071              	.LBB6379:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8072              		.loc 16 112 2 is_stmt 0 discriminator 1 view .LVU1577
 8073 00a2 44D0     		beq	.L247
 8074              	.LVL334:
 8075              	.L261:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8076              		.loc 16 112 2 discriminator 1 view .LVU1578
 8077              	.LBE6379:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 523


 8078              	.LBE6382:
 8079              	.LBE6385:
 8080              	.LBB6386:
 8081              	.LBB6387:
 8082              	.LBB6388:
 8083              	.LBB6389:
 8084              	.LBI6389:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8085              		.loc 6 507 2 is_stmt 1 view .LVU1579
 8086              	.LBB6390:
 8087              	.LBI6390:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8088              		.loc 7 148 2 view .LVU1580
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8089              		.loc 7 148 2 is_stmt 0 view .LVU1581
 8090              	.LBE6390:
 8091              	.LBE6389:
 8092              	.LBE6388:
 8093              	.LBE6387:
 8094              	.LBE6386:
 8095              		.loc 18 175 3 is_stmt 1 view .LVU1582
 8096              	.LBB6404:
 8097              	.LBB6400:
 8098              	.LBB6396:
 8099              	.LBB6393:
 8100              	.LBB6392:
 8101              	.LBB6391:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8102              		.loc 7 150 4 is_stmt 0 view .LVU1583
 8103 00a4 43F8042B 		str	r2, [r3], #4
 8104              	.LVL335:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8105              		.loc 7 150 4 view .LVU1584
 8106              	.LBE6391:
 8107              	.LBE6392:
 8108              	.LBE6393:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8109              		.loc 16 117 6 view .LVU1585
 8110 00a8 6360     		str	r3, [r4, #4]
 8111              	.L206:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8112              		.loc 16 117 6 view .LVU1586
 8113              	.LBE6396:
 8114              	.LBE6400:
 8115              	.LBE6404:
  68:utils.h       ****             break;
  69:utils.h       **** 
  70:utils.h       ****         case ELEVENTH:
  71:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
  72:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
  73:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
  74:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
  75:utils.h       ****             break;
  76:utils.h       ****     }
  77:utils.h       ****     return midi_notes;
  78:utils.h       **** }
 8116              		.loc 28 78 1 view .LVU1587
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 524


 8117 00aa 2046     		mov	r0, r4
 8118 00ac 03B0     		add	sp, sp, #12
 8119              		.cfi_remember_state
 8120              		.cfi_def_cfa_offset 12
 8121              		@ sp needed
 8122 00ae 30BD     		pop	{r4, r5, pc}
 8123              	.LVL336:
 8124              	.L232:
 8125              		.cfi_restore_state
  70:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 8126              		.loc 28 70 9 is_stmt 1 view .LVU1588
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8127              		.loc 28 71 13 view .LVU1589
 8128              	.LBB6405:
 8129              	.LBB6406:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8130              		.loc 14 1046 25 is_stmt 0 view .LVU1590
 8131 00b0 2068     		ldr	r0, [r4]
 8132              	.LBE6406:
 8133              	.LBE6405:
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8134              		.loc 28 71 19 view .LVU1591
 8135 00b2 002B     		cmp	r3, #0
 8136 00b4 00F09A80 		beq	.L267
 8137              	.LVL337:
 8138              	.LBB6407:
 8139              	.LBI6407:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8140              		.loc 14 1043 7 is_stmt 1 view .LVU1592
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8141              		.loc 14 1043 7 is_stmt 0 view .LVU1593
 8142              	.LBE6407:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 8143              		.loc 28 72 54 view .LVU1594
 8144 00b8 0268     		ldr	r2, [r0]
 8145              	.LBB6408:
 8146              	.LBB6409:
 8147              	.LBB6410:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8148              		.loc 16 112 47 view .LVU1595
 8149 00ba D4E90131 		ldrd	r3, r1, [r4, #4]
 8150              	.LVL338:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8151              		.loc 16 112 47 view .LVU1596
 8152              	.LBE6410:
 8153              	.LBE6409:
 8154              	.LBE6408:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 8155              		.loc 28 72 54 view .LVU1597
 8156 00be 0A32     		adds	r2, r2, #10
 8157              	.LBB6426:
 8158              	.LBB6422:
 8159              	.LBB6418:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8160              		.loc 16 112 2 view .LVU1598
 8161 00c0 8B42     		cmp	r3, r1
 8162              	.LBE6418:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 525


 8163              	.LBE6422:
 8164              	.LBE6426:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 8165              		.loc 28 72 54 view .LVU1599
 8166 00c2 0192     		str	r2, [sp, #4]
 8167              	.LVL339:
 8168              	.LBB6427:
 8169              	.LBI6408:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8170              		.loc 14 1203 7 is_stmt 1 view .LVU1600
 8171              	.LBB6423:
 8172              	.LBI6409:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8173              		.loc 16 109 7 view .LVU1601
 8174              	.LBB6419:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8175              		.loc 16 112 2 is_stmt 0 view .LVU1602
 8176 00c4 00F09A80 		beq	.L252
 8177              	.LVL340:
 8178              	.L259:
 8179              	.LBB6411:
 8180              	.LBI6411:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8181              		.loc 6 507 2 is_stmt 1 view .LVU1603
 8182              	.LBB6412:
 8183              	.LBI6412:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8184              		.loc 7 148 2 view .LVU1604
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8185              		.loc 7 148 2 is_stmt 0 view .LVU1605
 8186              	.LBE6412:
 8187              	.LBE6411:
 8188              	.LBE6419:
 8189              	.LBE6423:
 8190              	.LBE6427:
 8191              		.loc 18 175 3 is_stmt 1 view .LVU1606
 8192              	.LBB6428:
 8193              	.LBB6424:
 8194              	.LBB6420:
 8195              	.LBB6415:
 8196              	.LBB6414:
 8197              	.LBB6413:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8198              		.loc 7 150 4 is_stmt 0 view .LVU1607
 8199 00c8 43F8042B 		str	r2, [r3], #4
 8200              	.LVL341:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8201              		.loc 7 150 4 view .LVU1608
 8202              	.LBE6413:
 8203              	.LBE6414:
 8204              	.LBE6415:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8205              		.loc 16 117 6 view .LVU1609
 8206 00cc 6360     		str	r3, [r4, #4]
 8207              	.L251:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8208              		.loc 16 117 6 view .LVU1610
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 526


 8209              	.LBE6420:
 8210              	.LBE6424:
 8211              	.LBE6428:
  73:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 8212              		.loc 28 73 13 is_stmt 1 discriminator 1 view .LVU1611
 8213              	.LVL342:
 8214              	.LBB6429:
 8215              	.LBI6429:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8216              		.loc 14 1043 7 discriminator 1 view .LVU1612
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8217              		.loc 14 1043 7 is_stmt 0 discriminator 1 view .LVU1613
 8218              	.LBE6429:
  73:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 8219              		.loc 28 73 48 discriminator 1 view .LVU1614
 8220 00ce 0268     		ldr	r2, [r0]
 8221              	.LBB6430:
 8222              	.LBB6431:
 8223              	.LBB6432:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8224              		.loc 16 112 2 discriminator 1 view .LVU1615
 8225 00d0 9942     		cmp	r1, r3
 8226              	.LBE6432:
 8227              	.LBE6431:
 8228              	.LBE6430:
  73:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 8229              		.loc 28 73 48 discriminator 1 view .LVU1616
 8230 00d2 02F10E02 		add	r2, r2, #14
 8231 00d6 0192     		str	r2, [sp, #4]
 8232              	.LVL343:
 8233              	.LBB6448:
 8234              	.LBI6430:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8235              		.loc 14 1203 7 is_stmt 1 discriminator 1 view .LVU1617
 8236              	.LBB6444:
 8237              	.LBI6431:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8238              		.loc 16 109 7 discriminator 1 view .LVU1618
 8239              	.LBB6440:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8240              		.loc 16 112 2 is_stmt 0 discriminator 1 view .LVU1619
 8241 00d8 00F0AD80 		beq	.L253
 8242              	.LVL344:
 8243              	.LBB6433:
 8244              	.LBI6433:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8245              		.loc 6 507 2 is_stmt 1 view .LVU1620
 8246              	.LBB6434:
 8247              	.LBI6434:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8248              		.loc 7 148 2 view .LVU1621
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8249              		.loc 7 148 2 is_stmt 0 view .LVU1622
 8250              	.LBE6434:
 8251              	.LBE6433:
 8252              	.LBE6440:
 8253              	.LBE6444:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 527


 8254              	.LBE6448:
 8255              		.loc 18 175 3 is_stmt 1 view .LVU1623
 8256              	.LBB6449:
 8257              	.LBB6445:
 8258              	.LBB6441:
 8259              	.LBB6437:
 8260              	.LBB6436:
 8261              	.LBB6435:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8262              		.loc 7 150 4 is_stmt 0 view .LVU1624
 8263 00dc 43F8042B 		str	r2, [r3], #4
 8264              	.LVL345:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8265              		.loc 7 150 4 view .LVU1625
 8266              	.LBE6435:
 8267              	.LBE6436:
 8268              	.LBE6437:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8269              		.loc 16 117 6 view .LVU1626
 8270 00e0 6360     		str	r3, [r4, #4]
 8271              	.L254:
 8272              	.LVL346:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8273              		.loc 16 117 6 view .LVU1627
 8274              	.LBE6441:
 8275              	.LBE6445:
 8276              	.LBE6449:
  74:utils.h       ****             break;
 8277              		.loc 28 74 13 is_stmt 1 view .LVU1628
 8278              	.LBB6450:
 8279              	.LBI6450:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8280              		.loc 14 1043 7 view .LVU1629
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8281              		.loc 14 1043 7 is_stmt 0 view .LVU1630
 8282              	.LBE6450:
  74:utils.h       ****             break;
 8283              		.loc 28 74 48 view .LVU1631
 8284 00e2 0268     		ldr	r2, [r0]
 8285              	.LBB6451:
 8286              	.LBB6401:
 8287              	.LBB6397:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8288              		.loc 16 112 2 view .LVU1632
 8289 00e4 8B42     		cmp	r3, r1
 8290              	.LBE6397:
 8291              	.LBE6401:
 8292              	.LBE6451:
  74:utils.h       ****             break;
 8293              		.loc 28 74 48 view .LVU1633
 8294 00e6 02F11202 		add	r2, r2, #18
 8295 00ea 0192     		str	r2, [sp, #4]
 8296              	.LVL347:
 8297              	.LBB6452:
 8298              	.LBI6386:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8299              		.loc 14 1203 7 is_stmt 1 view .LVU1634
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 528


 8300              	.LBB6402:
 8301              	.LBI6387:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8302              		.loc 16 109 7 view .LVU1635
 8303              	.LBB6398:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8304              		.loc 16 112 2 is_stmt 0 view .LVU1636
 8305 00ec DAD1     		bne	.L261
 8306              	.LVL348:
 8307              	.LBB6394:
 8308              	.LBI6394:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8309              		.loc 14 829 7 is_stmt 1 view .LVU1637
 8310              	.LBB6395:
 8311              	.LBI6395:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8312              		.loc 17 978 7 view .LVU1638
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8313              		.loc 17 978 7 is_stmt 0 view .LVU1639
 8314              	.LBE6395:
 8315              	.LBE6394:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8316              		.loc 16 121 21 view .LVU1640
 8317 00ee 01AA     		add	r2, sp, #4
 8318              	.LVL349:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8319              		.loc 16 121 21 view .LVU1641
 8320 00f0 1946     		mov	r1, r3
 8321 00f2 2046     		mov	r0, r4
 8322 00f4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8323              	.LVL350:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8324              		.loc 16 121 21 view .LVU1642
 8325              	.LBE6398:
 8326              	.LBE6402:
 8327              	.LBE6452:
  75:utils.h       ****     }
 8328              		.loc 28 75 13 is_stmt 1 view .LVU1643
  77:utils.h       **** }
 8329              		.loc 28 77 5 view .LVU1644
  77:utils.h       **** }
 8330              		.loc 28 77 12 is_stmt 0 view .LVU1645
 8331 00f8 D7E7     		b	.L206
 8332              	.LVL351:
 8333              	.L235:
  59:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 8334              		.loc 28 59 9 is_stmt 1 view .LVU1646
  60:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8335              		.loc 28 60 13 view .LVU1647
  60:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8336              		.loc 28 60 19 is_stmt 0 view .LVU1648
 8337 00fa 002B     		cmp	r3, #0
 8338 00fc 5CD1     		bne	.L239
 8339              	.LVL352:
 8340              	.LBB6453:
 8341              	.LBI6453:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 529


 8342              		.loc 14 1043 7 is_stmt 1 view .LVU1649
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8343              		.loc 14 1043 7 is_stmt 0 view .LVU1650
 8344              	.LBE6453:
 8345              	.LBB6454:
 8346              	.LBB6455:
 8347              	.LBB6456:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8348              		.loc 16 112 2 view .LVU1651
 8349 00fe A268     		ldr	r2, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8350              		.loc 16 112 20 view .LVU1652
 8351 0100 D4E90031 		ldrd	r3, r1, [r4]
 8352              	.LVL353:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8353              		.loc 16 112 20 view .LVU1653
 8354              	.LBE6456:
 8355              	.LBE6455:
 8356              	.LBE6454:
  60:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8357              		.loc 28 60 56 view .LVU1654
 8358 0104 1B68     		ldr	r3, [r3]
 8359              	.LBB6461:
 8360              	.LBB6459:
 8361              	.LBB6457:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8362              		.loc 16 112 2 view .LVU1655
 8363 0106 9142     		cmp	r1, r2
 8364              	.LBE6457:
 8365              	.LBE6459:
 8366              	.LBE6461:
  60:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8367              		.loc 28 60 56 view .LVU1656
 8368 0108 03F10B03 		add	r3, r3, #11
 8369 010c 0193     		str	r3, [sp, #4]
 8370              	.LVL354:
 8371              	.LBB6462:
 8372              	.LBI6454:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8373              		.loc 14 1203 7 is_stmt 1 view .LVU1657
 8374              	.LBB6460:
 8375              	.LBI6455:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8376              		.loc 16 109 7 view .LVU1658
 8377              	.LBB6458:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8378              		.loc 16 112 2 is_stmt 0 view .LVU1659
 8379 010e 0ED0     		beq	.L247
 8380              	.LVL355:
 8381              	.L262:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8382              		.loc 16 112 2 view .LVU1660
 8383              	.LBE6458:
 8384              	.LBE6460:
 8385              	.LBE6462:
 8386              	.LBB6463:
 8387              	.LBB6464:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 530


 8388              	.LBB6465:
 8389              	.LBB6466:
 8390              	.LBI6466:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8391              		.loc 6 507 2 is_stmt 1 view .LVU1661
 8392              	.LBB6467:
 8393              	.LBI6467:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8394              		.loc 7 148 2 view .LVU1662
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8395              		.loc 7 148 2 is_stmt 0 view .LVU1663
 8396              	.LBE6467:
 8397              	.LBE6466:
 8398              	.LBE6465:
 8399              	.LBE6464:
 8400              	.LBE6463:
 8401              		.loc 18 175 3 is_stmt 1 view .LVU1664
 8402              		.loc 28 78 1 is_stmt 0 view .LVU1665
 8403 0110 2046     		mov	r0, r4
 8404              	.LBB6479:
 8405              	.LBB6475:
 8406              	.LBB6471:
 8407              	.LBB6470:
 8408              	.LBB6469:
 8409              	.LBB6468:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8410              		.loc 7 150 4 view .LVU1666
 8411 0112 41F8043B 		str	r3, [r1], #4
 8412              	.LVL356:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8413              		.loc 7 150 4 view .LVU1667
 8414              	.LBE6468:
 8415              	.LBE6469:
 8416              	.LBE6470:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8417              		.loc 16 117 6 view .LVU1668
 8418 0116 6160     		str	r1, [r4, #4]
 8419              	.LBE6471:
 8420              	.LBE6475:
 8421              	.LBE6479:
 8422              		.loc 28 78 1 view .LVU1669
 8423 0118 03B0     		add	sp, sp, #12
 8424              		.cfi_remember_state
 8425              		.cfi_def_cfa_offset 12
 8426              		@ sp needed
 8427 011a 30BD     		pop	{r4, r5, pc}
 8428              	.LVL357:
 8429              	.L236:
 8430              		.cfi_restore_state
  55:utils.h       ****             midi_notes.push_back(midi_notes[0] + 9); // major 6th
 8431              		.loc 28 55 9 is_stmt 1 view .LVU1670
  56:utils.h       ****             break;
 8432              		.loc 28 56 13 view .LVU1671
 8433              	.LBB6480:
 8434              	.LBI6480:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8435              		.loc 14 1043 7 view .LVU1672
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 531


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8436              		.loc 14 1043 7 is_stmt 0 view .LVU1673
 8437              	.LBE6480:
 8438              	.LBB6481:
 8439              	.LBB6482:
 8440              	.LBB6483:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8441              		.loc 16 112 20 view .LVU1674
 8442 011c D4E90031 		ldrd	r3, r1, [r4]
 8443              	.LVL358:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8444              		.loc 16 112 2 view .LVU1675
 8445 0120 A268     		ldr	r2, [r4, #8]
 8446              	.LBE6483:
 8447              	.LBE6482:
 8448              	.LBE6481:
  56:utils.h       ****             break;
 8449              		.loc 28 56 48 view .LVU1676
 8450 0122 1B68     		ldr	r3, [r3]
 8451              	.LBB6488:
 8452              	.LBB6486:
 8453              	.LBB6484:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8454              		.loc 16 112 2 view .LVU1677
 8455 0124 9142     		cmp	r1, r2
 8456              	.LBE6484:
 8457              	.LBE6486:
 8458              	.LBE6488:
  56:utils.h       ****             break;
 8459              		.loc 28 56 48 view .LVU1678
 8460 0126 03F10903 		add	r3, r3, #9
 8461 012a 0193     		str	r3, [sp, #4]
 8462              	.LVL359:
 8463              	.LBB6489:
 8464              	.LBI6481:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8465              		.loc 14 1203 7 is_stmt 1 view .LVU1679
 8466              	.LBB6487:
 8467              	.LBI6482:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8468              		.loc 16 109 7 view .LVU1680
 8469              	.LBB6485:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8470              		.loc 16 112 2 is_stmt 0 view .LVU1681
 8471 012c F0D1     		bne	.L262
 8472              	.LVL360:
 8473              	.L247:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8474              		.loc 16 112 2 view .LVU1682
 8475              	.LBE6485:
 8476              	.LBE6487:
 8477              	.LBE6489:
 8478              	.LBB6490:
 8479              	.LBB6383:
 8480              	.LBB6380:
 8481              	.LBB6377:
 8482              	.LBI6377:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 532


 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8483              		.loc 14 829 7 is_stmt 1 view .LVU1683
 8484              	.LBB6378:
 8485              	.LBI6378:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8486              		.loc 17 978 7 view .LVU1684
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8487              		.loc 17 978 7 is_stmt 0 view .LVU1685
 8488              	.LBE6378:
 8489              	.LBE6377:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8490              		.loc 16 121 21 view .LVU1686
 8491 012e 2046     		mov	r0, r4
 8492 0130 01AA     		add	r2, sp, #4
 8493 0132 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8494              	.LVL361:
 8495              	.LBE6380:
 8496              	.LBE6383:
 8497              	.LBE6490:
  68:utils.h       **** 
 8498              		.loc 28 68 13 is_stmt 1 view .LVU1687
 8499              		.loc 28 78 1 is_stmt 0 view .LVU1688
 8500 0136 2046     		mov	r0, r4
 8501 0138 03B0     		add	sp, sp, #12
 8502              		.cfi_remember_state
 8503              		.cfi_def_cfa_offset 12
 8504              		@ sp needed
 8505 013a 30BD     		pop	{r4, r5, pc}
 8506              	.LVL362:
 8507              	.L210:
 8508              		.cfi_restore_state
  43:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
 8509              		.loc 28 43 9 is_stmt 1 view .LVU1689
  44:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8510              		.loc 28 44 13 view .LVU1690
 8511              	.LBB6491:
 8512              	.LBI6491:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8513              		.loc 14 1043 7 view .LVU1691
 8514              	.LBE6491:
 8515              	.LBB6492:
 8516              	.LBB6493:
 8517              	.LBB6494:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8518              		.loc 16 112 20 is_stmt 0 view .LVU1692
 8519 013c D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8520              		.loc 16 112 47 view .LVU1693
 8521 0140 A168     		ldr	r1, [r4, #8]
 8522              	.LBE6494:
 8523              	.LBE6493:
 8524              	.LBE6492:
  44:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8525              		.loc 28 44 48 view .LVU1694
 8526 0142 0268     		ldr	r2, [r0]
 8527              	.LBB6510:
 8528              	.LBB6506:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 533


 8529              	.LBB6502:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8530              		.loc 16 112 2 view .LVU1695
 8531 0144 8B42     		cmp	r3, r1
 8532              	.LBE6502:
 8533              	.LBE6506:
 8534              	.LBE6510:
  44:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8535              		.loc 28 44 48 view .LVU1696
 8536 0146 02F10302 		add	r2, r2, #3
 8537 014a 0192     		str	r2, [sp, #4]
 8538              	.LVL363:
 8539              	.LBB6511:
 8540              	.LBI6492:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8541              		.loc 14 1203 7 is_stmt 1 view .LVU1697
 8542              	.LBB6507:
 8543              	.LBI6493:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8544              		.loc 16 109 7 view .LVU1698
 8545              	.LBB6503:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8546              		.loc 16 112 2 is_stmt 0 view .LVU1699
 8547 014c 6BD0     		beq	.L227
 8548              	.LVL364:
 8549              	.LBB6495:
 8550              	.LBI6495:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8551              		.loc 6 507 2 is_stmt 1 view .LVU1700
 8552              	.LBB6496:
 8553              	.LBI6496:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8554              		.loc 7 148 2 view .LVU1701
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8555              		.loc 7 148 2 is_stmt 0 view .LVU1702
 8556              	.LBE6496:
 8557              	.LBE6495:
 8558              	.LBE6503:
 8559              	.LBE6507:
 8560              	.LBE6511:
 8561              		.loc 18 175 3 is_stmt 1 view .LVU1703
 8562              	.LBB6512:
 8563              	.LBB6508:
 8564              	.LBB6504:
 8565              	.LBB6499:
 8566              	.LBB6498:
 8567              	.LBB6497:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8568              		.loc 7 150 4 is_stmt 0 view .LVU1704
 8569 014e 43F8042B 		str	r2, [r3], #4
 8570              	.LVL365:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8571              		.loc 7 150 4 view .LVU1705
 8572              	.LBE6497:
 8573              	.LBE6498:
 8574              	.LBE6499:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 534


 8575              		.loc 16 117 6 view .LVU1706
 8576 0152 6360     		str	r3, [r4, #4]
 8577              	.L228:
 8578              	.LVL366:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8579              		.loc 16 117 6 view .LVU1707
 8580              	.LBE6504:
 8581              	.LBE6508:
 8582              	.LBE6512:
  45:utils.h       ****             break;
 8583              		.loc 28 45 13 is_stmt 1 view .LVU1708
 8584              	.LBB6513:
 8585              	.LBI6513:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8586              		.loc 14 1043 7 view .LVU1709
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8587              		.loc 14 1043 7 is_stmt 0 view .LVU1710
 8588              	.LBE6513:
  45:utils.h       ****             break;
 8589              		.loc 28 45 48 view .LVU1711
 8590 0154 0268     		ldr	r2, [r0]
 8591              	.LBB6514:
 8592              	.LBB6345:
 8593              	.LBB6341:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8594              		.loc 16 112 2 view .LVU1712
 8595 0156 9942     		cmp	r1, r3
 8596              	.LBE6341:
 8597              	.LBE6345:
 8598              	.LBE6514:
  45:utils.h       ****             break;
 8599              		.loc 28 45 48 view .LVU1713
 8600 0158 02F10602 		add	r2, r2, #6
 8601 015c 0192     		str	r2, [sp, #4]
 8602              	.LVL367:
 8603              	.LBB6515:
 8604              	.LBI6330:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8605              		.loc 14 1203 7 is_stmt 1 view .LVU1714
 8606              	.LBB6346:
 8607              	.LBI6331:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8608              		.loc 16 109 7 view .LVU1715
 8609              	.LBB6342:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8610              		.loc 16 112 2 is_stmt 0 view .LVU1716
 8611 015e 7FF47EAF 		bne	.L263
 8612              	.LVL368:
 8613              	.L229:
 8614              	.LBB6338:
 8615              	.LBI6338:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8616              		.loc 14 829 7 is_stmt 1 view .LVU1717
 8617              	.LBB6339:
 8618              	.LBI6339:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8619              		.loc 17 978 7 view .LVU1718
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 535


 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8620              		.loc 17 978 7 is_stmt 0 view .LVU1719
 8621              	.LBE6339:
 8622              	.LBE6338:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8623              		.loc 16 121 21 view .LVU1720
 8624 0162 01AA     		add	r2, sp, #4
 8625 0164 2046     		mov	r0, r4
 8626 0166 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8627              	.LVL369:
 8628 016a 7BE7     		b	.L230
 8629              	.L212:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8630              		.loc 16 121 21 view .LVU1721
 8631              	.LBE6342:
 8632              	.LBE6346:
 8633              	.LBE6515:
  39:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
 8634              		.loc 28 39 9 is_stmt 1 view .LVU1722
  40:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
 8635              		.loc 28 40 13 view .LVU1723
 8636              	.LVL370:
 8637              	.LBB6516:
 8638              	.LBI6516:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8639              		.loc 14 1043 7 view .LVU1724
 8640              	.LBE6516:
 8641              	.LBB6517:
 8642              	.LBB6518:
 8643              	.LBB6519:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8644              		.loc 16 112 20 is_stmt 0 view .LVU1725
 8645 016c D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8646              		.loc 16 112 47 view .LVU1726
 8647 0170 A168     		ldr	r1, [r4, #8]
 8648              	.LBE6519:
 8649              	.LBE6518:
 8650              	.LBE6517:
  40:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
 8651              		.loc 28 40 48 view .LVU1727
 8652 0172 0268     		ldr	r2, [r0]
 8653              	.LBB6535:
 8654              	.LBB6531:
 8655              	.LBB6527:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8656              		.loc 16 112 2 view .LVU1728
 8657 0174 8B42     		cmp	r3, r1
 8658              	.LBE6527:
 8659              	.LBE6531:
 8660              	.LBE6535:
  40:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
 8661              		.loc 28 40 48 view .LVU1729
 8662 0176 02F10402 		add	r2, r2, #4
 8663 017a 0192     		str	r2, [sp, #4]
 8664              	.LVL371:
 8665              	.LBB6536:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 536


 8666              	.LBI6517:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8667              		.loc 14 1203 7 is_stmt 1 view .LVU1730
 8668              	.LBB6532:
 8669              	.LBI6518:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8670              		.loc 16 109 7 view .LVU1731
 8671              	.LBB6528:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8672              		.loc 16 112 2 is_stmt 0 view .LVU1732
 8673 017c 4BD0     		beq	.L223
 8674              	.LVL372:
 8675              	.LBB6520:
 8676              	.LBI6520:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8677              		.loc 6 507 2 is_stmt 1 view .LVU1733
 8678              	.LBB6521:
 8679              	.LBI6521:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8680              		.loc 7 148 2 view .LVU1734
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8681              		.loc 7 148 2 is_stmt 0 view .LVU1735
 8682              	.LBE6521:
 8683              	.LBE6520:
 8684              	.LBE6528:
 8685              	.LBE6532:
 8686              	.LBE6536:
 8687              		.loc 18 175 3 is_stmt 1 view .LVU1736
 8688              	.LBB6537:
 8689              	.LBB6533:
 8690              	.LBB6529:
 8691              	.LBB6524:
 8692              	.LBB6523:
 8693              	.LBB6522:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8694              		.loc 7 150 4 is_stmt 0 view .LVU1737
 8695 017e 43F8042B 		str	r2, [r3], #4
 8696              	.LVL373:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8697              		.loc 7 150 4 view .LVU1738
 8698              	.LBE6522:
 8699              	.LBE6523:
 8700              	.LBE6524:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8701              		.loc 16 117 6 view .LVU1739
 8702 0182 6360     		str	r3, [r4, #4]
 8703              	.L224:
 8704              	.LVL374:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8705              		.loc 16 117 6 view .LVU1740
 8706              	.LBE6529:
 8707              	.LBE6533:
 8708              	.LBE6537:
  41:utils.h       ****             break;
 8709              		.loc 28 41 13 is_stmt 1 view .LVU1741
 8710              	.LBB6538:
 8711              	.LBI6538:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 537


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8712              		.loc 14 1043 7 view .LVU1742
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8713              		.loc 14 1043 7 is_stmt 0 view .LVU1743
 8714              	.LBE6538:
  41:utils.h       ****             break;
 8715              		.loc 28 41 48 view .LVU1744
 8716 0184 0268     		ldr	r2, [r0]
 8717              	.LBB6539:
 8718              	.LBB6540:
 8719              	.LBB6541:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8720              		.loc 16 112 2 view .LVU1745
 8721 0186 9942     		cmp	r1, r3
 8722              	.LBE6541:
 8723              	.LBE6540:
 8724              	.LBE6539:
  41:utils.h       ****             break;
 8725              		.loc 28 41 48 view .LVU1746
 8726 0188 02F10802 		add	r2, r2, #8
 8727 018c 0192     		str	r2, [sp, #4]
 8728              	.LVL375:
 8729              	.LBB6546:
 8730              	.LBI6539:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8731              		.loc 14 1203 7 is_stmt 1 view .LVU1747
 8732              	.LBB6544:
 8733              	.LBI6540:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8734              		.loc 16 109 7 view .LVU1748
 8735              	.LBB6542:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8736              		.loc 16 112 2 is_stmt 0 view .LVU1749
 8737 018e 7FF466AF 		bne	.L263
 8738 0192 E6E7     		b	.L229
 8739              	.LVL376:
 8740              	.L214:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8741              		.loc 16 112 2 view .LVU1750
 8742              	.LBE6542:
 8743              	.LBE6544:
 8744              	.LBE6546:
  31:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
 8745              		.loc 28 31 9 is_stmt 1 view .LVU1751
  32:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8746              		.loc 28 32 13 view .LVU1752
 8747              	.LBB6547:
 8748              	.LBI6547:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8749              		.loc 14 1043 7 view .LVU1753
 8750              	.LBE6547:
 8751              	.LBB6548:
 8752              	.LBB6549:
 8753              	.LBB6550:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8754              		.loc 16 112 20 is_stmt 0 view .LVU1754
 8755 0194 D4E90003 		ldrd	r0, r3, [r4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 538


 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8756              		.loc 16 112 47 view .LVU1755
 8757 0198 A168     		ldr	r1, [r4, #8]
 8758              	.LBE6550:
 8759              	.LBE6549:
 8760              	.LBE6548:
  32:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8761              		.loc 28 32 48 view .LVU1756
 8762 019a 0268     		ldr	r2, [r0]
 8763              	.LBB6555:
 8764              	.LBB6553:
 8765              	.LBB6551:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8766              		.loc 16 112 2 view .LVU1757
 8767 019c 8B42     		cmp	r3, r1
 8768              	.LBE6551:
 8769              	.LBE6553:
 8770              	.LBE6555:
  32:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8771              		.loc 28 32 48 view .LVU1758
 8772 019e 02F10402 		add	r2, r2, #4
 8773 01a2 0192     		str	r2, [sp, #4]
 8774              	.LVL377:
 8775              	.LBB6556:
 8776              	.LBI6548:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8777              		.loc 14 1203 7 is_stmt 1 view .LVU1759
 8778              	.LBB6554:
 8779              	.LBI6549:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8780              		.loc 16 109 7 view .LVU1760
 8781              	.LBB6552:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8782              		.loc 16 112 2 is_stmt 0 view .LVU1761
 8783 01a4 7FF451AF 		bne	.L265
 8784              	.LVL378:
 8785              	.L219:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8786              		.loc 16 112 2 view .LVU1762
 8787              	.LBE6552:
 8788              	.LBE6554:
 8789              	.LBE6556:
 8790              	.LBB6557:
 8791              	.LBB6317:
 8792              	.LBB6313:
 8793              	.LBB6308:
 8794              	.LBI6308:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8795              		.loc 14 829 7 is_stmt 1 view .LVU1763
 8796              	.LBB6309:
 8797              	.LBI6309:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8798              		.loc 17 978 7 view .LVU1764
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8799              		.loc 17 978 7 is_stmt 0 view .LVU1765
 8800              	.LBE6309:
 8801              	.LBE6308:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 539


 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8802              		.loc 16 121 21 view .LVU1766
 8803 01a8 2046     		mov	r0, r4
 8804 01aa 01AA     		add	r2, sp, #4
 8805 01ac FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8806              	.LVL379:
 8807              	.LBE6313:
 8808              	.LBE6317:
 8809              	.LBE6557:
 8810              	.LBB6558:
 8811              	.LBB6328:
 8812              	.LBB6326:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8813              		.loc 16 112 47 view .LVU1767
 8814 01b0 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8815              		.loc 16 112 20 view .LVU1768
 8816 01b2 D4E90003 		ldrd	r0, r3, [r4]
 8817 01b6 4BE7     		b	.L220
 8818              	.LVL380:
 8819              	.L239:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8820              		.loc 16 112 20 view .LVU1769
 8821              	.LBE6326:
 8822              	.LBE6328:
 8823              	.LBE6558:
 8824              	.LBB6559:
 8825              	.LBI6559:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8826              		.loc 14 1043 7 is_stmt 1 view .LVU1770
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8827              		.loc 14 1043 7 is_stmt 0 view .LVU1771
 8828              	.LBE6559:
 8829              	.LBB6560:
 8830              	.LBB6476:
 8831              	.LBB6472:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8832              		.loc 16 112 20 view .LVU1772
 8833 01b8 D4E90031 		ldrd	r3, r1, [r4]
 8834              	.LVL381:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8835              		.loc 16 112 2 view .LVU1773
 8836 01bc A268     		ldr	r2, [r4, #8]
 8837              	.LBE6472:
 8838              	.LBE6476:
 8839              	.LBE6560:
  61:utils.h       ****             break;
 8840              		.loc 28 61 54 view .LVU1774
 8841 01be 1B68     		ldr	r3, [r3]
 8842              	.LBB6561:
 8843              	.LBB6477:
 8844              	.LBB6473:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8845              		.loc 16 112 2 view .LVU1775
 8846 01c0 9142     		cmp	r1, r2
 8847              	.LBE6473:
 8848              	.LBE6477:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 540


 8849              	.LBE6561:
  61:utils.h       ****             break;
 8850              		.loc 28 61 54 view .LVU1776
 8851 01c2 03F10A03 		add	r3, r3, #10
 8852 01c6 0193     		str	r3, [sp, #4]
 8853              	.LVL382:
 8854              	.LBB6562:
 8855              	.LBI6463:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8856              		.loc 14 1203 7 is_stmt 1 view .LVU1777
 8857              	.LBB6478:
 8858              	.LBI6464:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8859              		.loc 16 109 7 view .LVU1778
 8860              	.LBB6474:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8861              		.loc 16 112 2 is_stmt 0 view .LVU1779
 8862 01c8 A2D1     		bne	.L262
 8863 01ca B0E7     		b	.L247
 8864              	.LVL383:
 8865              	.L266:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8866              		.loc 16 112 2 view .LVU1780
 8867              	.LBE6474:
 8868              	.LBE6478:
 8869              	.LBE6562:
 8870              	.LBB6563:
 8871              	.LBI6349:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8872              		.loc 14 1043 7 is_stmt 1 view .LVU1781
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8873              		.loc 14 1043 7 is_stmt 0 view .LVU1782
 8874              	.LBE6563:
  65:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8875              		.loc 28 65 56 view .LVU1783
 8876 01cc 1068     		ldr	r0, [r2]
 8877              	.LBB6564:
 8878              	.LBB6565:
 8879              	.LBB6566:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8880              		.loc 16 112 47 view .LVU1784
 8881 01ce D4E90131 		ldrd	r3, r1, [r4, #4]
 8882              	.LVL384:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8883              		.loc 16 112 47 view .LVU1785
 8884              	.LBE6566:
 8885              	.LBE6565:
 8886              	.LBE6564:
  65:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8887              		.loc 28 65 56 view .LVU1786
 8888 01d2 0B30     		adds	r0, r0, #11
 8889              	.LBB6571:
 8890              	.LBB6569:
 8891              	.LBB6567:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8892              		.loc 16 112 2 view .LVU1787
 8893 01d4 8B42     		cmp	r3, r1
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 541


 8894              	.LBE6567:
 8895              	.LBE6569:
 8896              	.LBE6571:
  65:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8897              		.loc 28 65 56 view .LVU1788
 8898 01d6 0190     		str	r0, [sp, #4]
 8899              	.LVL385:
 8900              	.LBB6572:
 8901              	.LBI6564:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8902              		.loc 14 1203 7 is_stmt 1 view .LVU1789
 8903              	.LBB6570:
 8904              	.LBI6565:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8905              		.loc 16 109 7 view .LVU1790
 8906              	.LBB6568:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8907              		.loc 16 112 2 is_stmt 0 view .LVU1791
 8908 01d8 7FF45BAF 		bne	.L258
 8909              	.LVL386:
 8910              	.L246:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8911              		.loc 16 112 2 view .LVU1792
 8912              	.LBE6568:
 8913              	.LBE6570:
 8914              	.LBE6572:
 8915              	.LBB6573:
 8916              	.LBB6369:
 8917              	.LBB6365:
 8918              	.LBB6360:
 8919              	.LBI6360:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8920              		.loc 14 829 7 is_stmt 1 view .LVU1793
 8921              	.LBB6361:
 8922              	.LBI6361:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8923              		.loc 17 978 7 view .LVU1794
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8924              		.loc 17 978 7 is_stmt 0 view .LVU1795
 8925              	.LBE6361:
 8926              	.LBE6360:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8927              		.loc 16 121 21 view .LVU1796
 8928 01dc 01AA     		add	r2, sp, #4
 8929 01de 2046     		mov	r0, r4
 8930 01e0 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8931              	.LVL387:
 8932              	.LBE6365:
 8933              	.LBE6369:
 8934              	.LBE6573:
 8935              	.LBB6574:
 8936              	.LBB6384:
 8937              	.LBB6381:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8938              		.loc 16 112 47 view .LVU1797
 8939 01e4 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 542


 8940              		.loc 16 112 20 view .LVU1798
 8941 01e6 D4E90023 		ldrd	r2, r3, [r4]
 8942 01ea 55E7     		b	.L245
 8943              	.LVL388:
 8944              	.L267:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8945              		.loc 16 112 20 view .LVU1799
 8946              	.LBE6381:
 8947              	.LBE6384:
 8948              	.LBE6574:
 8949              	.LBB6575:
 8950              	.LBI6405:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8951              		.loc 14 1043 7 is_stmt 1 view .LVU1800
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8952              		.loc 14 1043 7 is_stmt 0 view .LVU1801
 8953              	.LBE6575:
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8954              		.loc 28 71 56 view .LVU1802
 8955 01ec 0268     		ldr	r2, [r0]
 8956              	.LBB6576:
 8957              	.LBB6577:
 8958              	.LBB6578:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8959              		.loc 16 112 47 view .LVU1803
 8960 01ee D4E90131 		ldrd	r3, r1, [r4, #4]
 8961              	.LVL389:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8962              		.loc 16 112 47 view .LVU1804
 8963              	.LBE6578:
 8964              	.LBE6577:
 8965              	.LBE6576:
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8966              		.loc 28 71 56 view .LVU1805
 8967 01f2 0B32     		adds	r2, r2, #11
 8968              	.LBB6583:
 8969              	.LBB6581:
 8970              	.LBB6579:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8971              		.loc 16 112 2 view .LVU1806
 8972 01f4 8B42     		cmp	r3, r1
 8973              	.LBE6579:
 8974              	.LBE6581:
 8975              	.LBE6583:
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8976              		.loc 28 71 56 view .LVU1807
 8977 01f6 0192     		str	r2, [sp, #4]
 8978              	.LVL390:
 8979              	.LBB6584:
 8980              	.LBI6576:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8981              		.loc 14 1203 7 is_stmt 1 view .LVU1808
 8982              	.LBB6582:
 8983              	.LBI6577:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8984              		.loc 16 109 7 view .LVU1809
 8985              	.LBB6580:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 543


 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8986              		.loc 16 112 2 is_stmt 0 view .LVU1810
 8987 01f8 7FF466AF 		bne	.L259
 8988              	.LVL391:
 8989              	.L252:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8990              		.loc 16 112 2 view .LVU1811
 8991              	.LBE6580:
 8992              	.LBE6582:
 8993              	.LBE6584:
 8994              	.LBB6585:
 8995              	.LBB6425:
 8996              	.LBB6421:
 8997              	.LBB6416:
 8998              	.LBI6416:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8999              		.loc 14 829 7 is_stmt 1 view .LVU1812
 9000              	.LBB6417:
 9001              	.LBI6417:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9002              		.loc 17 978 7 view .LVU1813
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9003              		.loc 17 978 7 is_stmt 0 view .LVU1814
 9004              	.LBE6417:
 9005              	.LBE6416:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9006              		.loc 16 121 21 view .LVU1815
 9007 01fc 2046     		mov	r0, r4
 9008 01fe 01AA     		add	r2, sp, #4
 9009 0200 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 9010              	.LVL392:
 9011              	.LBE6421:
 9012              	.LBE6425:
 9013              	.LBE6585:
 9014              	.LBB6586:
 9015              	.LBB6446:
 9016              	.LBB6442:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9017              		.loc 16 112 47 view .LVU1816
 9018 0204 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9019              		.loc 16 112 20 view .LVU1817
 9020 0206 D4E90003 		ldrd	r0, r3, [r4]
 9021 020a 60E7     		b	.L251
 9022              	.LVL393:
 9023              	.L207:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9024              		.loc 16 112 20 view .LVU1818
 9025              	.LBE6442:
 9026              	.LBE6446:
 9027              	.LBE6586:
 9028              	.LBB6587:
 9029              	.LBB6297:
 9030              	.LBB6295:
 9031              	.LBB6292:
 9032              	.LBI6292:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 544


 9033              		.loc 14 829 7 is_stmt 1 view .LVU1819
 9034              	.LBB6293:
 9035              	.LBI6293:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9036              		.loc 17 978 7 view .LVU1820
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9037              		.loc 17 978 7 is_stmt 0 view .LVU1821
 9038              	.LBE6293:
 9039              	.LBE6292:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9040              		.loc 16 121 21 view .LVU1822
 9041 020c 01AA     		add	r2, sp, #4
 9042              	.LVL394:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9043              		.loc 16 121 21 view .LVU1823
 9044 020e 2046     		mov	r0, r4
 9045 0210 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 9046              	.LVL395:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9047              		.loc 16 121 21 view .LVU1824
 9048 0214 08E7     		b	.L208
 9049              	.LVL396:
 9050              	.L223:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9051              		.loc 16 121 21 view .LVU1825
 9052              	.LBE6295:
 9053              	.LBE6297:
 9054              	.LBE6587:
 9055              	.LBB6588:
 9056              	.LBB6534:
 9057              	.LBB6530:
 9058              	.LBB6525:
 9059              	.LBI6525:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9060              		.loc 14 829 7 is_stmt 1 view .LVU1826
 9061              	.LBB6526:
 9062              	.LBI6526:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9063              		.loc 17 978 7 view .LVU1827
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9064              		.loc 17 978 7 is_stmt 0 view .LVU1828
 9065              	.LBE6526:
 9066              	.LBE6525:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9067              		.loc 16 121 21 view .LVU1829
 9068 0216 2046     		mov	r0, r4
 9069 0218 01AA     		add	r2, sp, #4
 9070              	.LVL397:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9071              		.loc 16 121 21 view .LVU1830
 9072 021a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 9073              	.LVL398:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9074              		.loc 16 121 21 view .LVU1831
 9075              	.LBE6530:
 9076              	.LBE6534:
 9077              	.LBE6588:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 545


 9078              	.LBB6589:
 9079              	.LBB6545:
 9080              	.LBB6543:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9081              		.loc 16 112 47 view .LVU1832
 9082 021e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9083              		.loc 16 112 20 view .LVU1833
 9084 0220 D4E90003 		ldrd	r0, r3, [r4]
 9085 0224 AEE7     		b	.L224
 9086              	.LVL399:
 9087              	.L227:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9088              		.loc 16 112 20 view .LVU1834
 9089              	.LBE6543:
 9090              	.LBE6545:
 9091              	.LBE6589:
 9092              	.LBB6590:
 9093              	.LBB6509:
 9094              	.LBB6505:
 9095              	.LBB6500:
 9096              	.LBI6500:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9097              		.loc 14 829 7 is_stmt 1 view .LVU1835
 9098              	.LBB6501:
 9099              	.LBI6501:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9100              		.loc 17 978 7 view .LVU1836
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9101              		.loc 17 978 7 is_stmt 0 view .LVU1837
 9102              	.LBE6501:
 9103              	.LBE6500:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9104              		.loc 16 121 21 view .LVU1838
 9105 0226 2046     		mov	r0, r4
 9106 0228 01AA     		add	r2, sp, #4
 9107              	.LVL400:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9108              		.loc 16 121 21 view .LVU1839
 9109 022a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 9110              	.LVL401:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9111              		.loc 16 121 21 view .LVU1840
 9112              	.LBE6505:
 9113              	.LBE6509:
 9114              	.LBE6590:
 9115              	.LBB6591:
 9116              	.LBB6347:
 9117              	.LBB6343:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9118              		.loc 16 112 47 view .LVU1841
 9119 022e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9120              		.loc 16 112 20 view .LVU1842
 9121 0230 D4E90003 		ldrd	r0, r3, [r4]
 9122 0234 8EE7     		b	.L228
 9123              	.LVL402:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 546


 9124              	.L253:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9125              		.loc 16 112 20 view .LVU1843
 9126              	.LBE6343:
 9127              	.LBE6347:
 9128              	.LBE6591:
 9129              	.LBB6592:
 9130              	.LBB6447:
 9131              	.LBB6443:
 9132              	.LBB6438:
 9133              	.LBI6438:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9134              		.loc 14 829 7 is_stmt 1 view .LVU1844
 9135              	.LBB6439:
 9136              	.LBI6439:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9137              		.loc 17 978 7 view .LVU1845
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9138              		.loc 17 978 7 is_stmt 0 view .LVU1846
 9139              	.LBE6439:
 9140              	.LBE6438:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9141              		.loc 16 121 21 view .LVU1847
 9142 0236 2046     		mov	r0, r4
 9143 0238 01AA     		add	r2, sp, #4
 9144              	.LVL403:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9145              		.loc 16 121 21 view .LVU1848
 9146 023a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 9147              	.LVL404:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9148              		.loc 16 121 21 view .LVU1849
 9149              	.LBE6443:
 9150              	.LBE6447:
 9151              	.LBE6592:
 9152              	.LBB6593:
 9153              	.LBB6403:
 9154              	.LBB6399:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9155              		.loc 16 112 47 view .LVU1850
 9156 023e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9157              		.loc 16 112 20 view .LVU1851
 9158 0240 D4E90003 		ldrd	r0, r3, [r4]
 9159 0244 4DE7     		b	.L254
 9160              	.LBE6399:
 9161              	.LBE6403:
 9162              	.LBE6593:
 9163              		.cfi_endproc
 9164              	.LFE5447:
 9166 0246 00BF     		.section	.rodata._ZN10Brizachord15poll_chord_rootEv.str1.4,"aMS",%progbits,1
 9167              		.align	2
 9168              	.LC3:
 9169 0000 4300     		.ascii	"C\000"
 9170 0002 0000     		.align	2
 9171              	.LC4:
 9172 0004 446200   		.ascii	"Db\000"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 547


 9173 0007 00       		.align	2
 9174              	.LC5:
 9175 0008 4400     		.ascii	"D\000"
 9176 000a 0000     		.align	2
 9177              	.LC6:
 9178 000c 456200   		.ascii	"Eb\000"
 9179 000f 00       		.align	2
 9180              	.LC7:
 9181 0010 4500     		.ascii	"E\000"
 9182 0012 0000     		.align	2
 9183              	.LC8:
 9184 0014 4600     		.ascii	"F\000"
 9185 0016 0000     		.align	2
 9186              	.LC9:
 9187 0018 476200   		.ascii	"Gb\000"
 9188 001b 00       		.align	2
 9189              	.LC10:
 9190 001c 4700     		.ascii	"G\000"
 9191 001e 0000     		.align	2
 9192              	.LC11:
 9193 0020 416200   		.ascii	"Ab\000"
 9194 0023 00       		.align	2
 9195              	.LC12:
 9196 0024 4100     		.ascii	"A\000"
 9197 0026 0000     		.align	2
 9198              	.LC13:
 9199 0028 426200   		.ascii	"Bb\000"
 9200 002b 00       		.align	2
 9201              	.LC14:
 9202 002c 4200     		.ascii	"B\000"
 9203              		.section	.text._ZN10Brizachord15poll_chord_rootEv,"ax",%progbits
 9204              		.align	1
 9205              		.p2align 2,,3
 9206              		.global	_ZN10Brizachord15poll_chord_rootEv
 9207              		.syntax unified
 9208              		.thumb
 9209              		.thumb_func
 9210              		.fpu fpv5-d16
 9212              	_ZN10Brizachord15poll_chord_rootEv:
 9213              	.LVL405:
 9214              	.LFB5612:
 128:Brizachord.cpp **** void Brizachord::poll_chord_root() {
 9215              		.loc 1 128 36 is_stmt 1 view -0
 9216              		.cfi_startproc
 9217              		@ args = 0, pretend = 0, frame = 96
 9218              		@ frame_needed = 0, uses_anonymous_args = 0
 129:Brizachord.cpp ****     std::string new_root = instrument_state.chord.root;
 9219              		.loc 1 129 5 view .LVU1853
 128:Brizachord.cpp **** void Brizachord::poll_chord_root() {
 9220              		.loc 1 128 36 is_stmt 0 view .LVU1854
 9221 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9222              		.cfi_def_cfa_offset 36
 9223              		.cfi_offset 4, -36
 9224              		.cfi_offset 5, -32
 9225              		.cfi_offset 6, -28
 9226              		.cfi_offset 7, -24
 9227              		.cfi_offset 8, -20
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 548


 9228              		.cfi_offset 9, -16
 9229              		.cfi_offset 10, -12
 9230              		.cfi_offset 11, -8
 9231              		.cfi_offset 14, -4
 9232              	.LBB7067:
 9233              	.LBB7068:
 9234              	.LBB7069:
 9235              	.LBB7070:
 9236              	.LBB7071:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9237              		.loc 5 908 16 view .LVU1855
 9238 0004 D0E92175 		ldrd	r7, r5, [r0, #132]
 9239              	.LBE7071:
 9240              	.LBE7070:
 9241              	.LBE7069:
 9242              	.LBE7068:
 9243              	.LBE7067:
 128:Brizachord.cpp **** void Brizachord::poll_chord_root() {
 9244              		.loc 1 128 36 view .LVU1856
 9245 0008 9BB0     		sub	sp, sp, #108
 9246              		.cfi_def_cfa_offset 144
 128:Brizachord.cpp **** void Brizachord::poll_chord_root() {
 9247              		.loc 1 128 36 view .LVU1857
 9248 000a 0446     		mov	r4, r0
 9249              	.LVL406:
 9250              	.LBB7184:
 9251              	.LBI7067:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 9252              		.loc 5 448 7 is_stmt 1 view .LVU1858
 9253              	.LBB7179:
 9254              	.LBB7174:
 9255              	.LBB7072:
 9256              	.LBI7072:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9257              		.loc 5 190 7 view .LVU1859
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9258              		.loc 5 190 7 is_stmt 0 view .LVU1860
 9259              	.LBE7072:
 9260              	.LBB7073:
 9261              	.LBI7073:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9262              		.loc 5 290 7 is_stmt 1 view .LVU1861
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9263              		.loc 5 290 7 is_stmt 0 view .LVU1862
 9264              	.LBE7073:
 9265              	.LBB7074:
 9266              	.LBI7074:
 9267              		.loc 26 97 29 is_stmt 1 view .LVU1863
 9268              	.LBB7075:
 9269              	.LBI7075:
 9270              		.loc 6 558 7 view .LVU1864
 9271              	.LBB7076:
 9272              	.LBI7076:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9273              		.loc 9 147 7 view .LVU1865
 9274              	.LBB7077:
 9275              	.LBI7077:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 549


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9276              		.loc 7 82 7 view .LVU1866
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9277              		.loc 7 82 7 is_stmt 0 view .LVU1867
 9278              	.LBE7077:
 9279              	.LBE7076:
 9280              	.LBE7075:
 9281              	.LBE7074:
 9282              	.LBB7078:
 9283              	.LBI7078:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9284              		.loc 5 159 2 is_stmt 1 view .LVU1868
 9285              	.LBB7079:
 9286              	.LBB7080:
 9287              	.LBB7081:
 9288              	.LBI7081:
 9289              		.loc 27 101 5 view .LVU1869
 9290              		.loc 27 101 5 is_stmt 0 view .LVU1870
 9291              	.LBE7081:
 9292              	.LBB7082:
 9293              	.LBI7082:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9294              		.loc 9 147 7 is_stmt 1 view .LVU1871
 9295              	.LBB7083:
 9296              	.LBI7083:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9297              		.loc 7 82 7 view .LVU1872
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9298              		.loc 7 82 7 is_stmt 0 view .LVU1873
 9299              	.LBE7083:
 9300              	.LBE7082:
 9301              	.LBE7080:
 9302              	.LBE7079:
 9303              	.LBE7078:
 9304              	.LBB7086:
 9305              	.LBB7087:
 9306              	.LBB7088:
 9307              	.LBB7089:
 9308              	.LBB7090:
 9309              	.LBB7091:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9310              		.loc 25 211 42 view .LVU1874
 9311 000c EF42     		cmn	r7, r5
 9312              	.LBE7091:
 9313              	.LBE7090:
 9314              	.LBE7089:
 9315              	.LBE7088:
 9316              	.LBE7087:
 9317              	.LBE7086:
 9318              	.LBB7165:
 9319              	.LBB7085:
 9320              	.LBB7084:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9321              		.loc 5 160 46 view .LVU1875
 9322 000e 08AE     		add	r6, sp, #32
 9323              	.LVL407:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 550


 9324              		.loc 5 160 46 view .LVU1876
 9325 0010 0696     		str	r6, [sp, #24]
 9326              	.LVL408:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9327              		.loc 5 160 46 view .LVU1877
 9328              	.LBE7084:
 9329              	.LBE7085:
 9330              	.LBE7165:
 9331              	.LBB7166:
 9332              	.LBI7166:
 9333              		.loc 9 162 7 is_stmt 1 view .LVU1878
 9334              	.LBB7167:
 9335              	.LBI7167:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9336              		.loc 7 89 7 view .LVU1879
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9337              		.loc 7 89 7 is_stmt 0 view .LVU1880
 9338              	.LBE7167:
 9339              	.LBE7166:
 9340              	.LBB7168:
 9341              	.LBI7168:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9342              		.loc 5 186 7 is_stmt 1 view .LVU1881
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9343              		.loc 5 186 7 is_stmt 0 view .LVU1882
 9344              	.LBE7168:
 9345              	.LBB7169:
 9346              	.LBI7086:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 9347              		.loc 5 263 9 is_stmt 1 view .LVU1883
 9348              	.LBB7160:
 9349              	.LBB7155:
 9350              	.LBI7088:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 9351              		.loc 5 243 9 view .LVU1884
 9352              	.LBB7150:
 9353              	.LBB7145:
 9354              	.LBI7090:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 9355              		.loc 25 206 7 view .LVU1885
 9356              	.LBB7140:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9357              		.loc 25 211 42 is_stmt 0 view .LVU1886
 9358 0012 02D0     		beq	.L269
 9359 0014 002F     		cmp	r7, #0
 9360 0016 00F0A181 		beq	.L291
 9361              	.L269:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9362              		.loc 25 217 2 view .LVU1887
 9363 001a 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 9364              		.loc 25 215 12 view .LVU1888
 9365 001c 1395     		str	r5, [sp, #76]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9366              		.loc 25 217 2 view .LVU1889
 9367 001e 00F22781 		bhi	.L378
 9368              	.LVL409:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 551


 9369              	.LBB7092:
 9370              	.LBI7092:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9371              		.loc 5 186 7 is_stmt 1 view .LVU1890
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9372              		.loc 5 186 7 is_stmt 0 view .LVU1891
 9373              	.LBE7092:
 9374              	.LBB7094:
 9375              	.LBI7094:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 9376              		.loc 5 392 7 is_stmt 1 view .LVU1892
 9377              	.LBB7095:
 9378              	.LBI7095:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9379              		.loc 5 346 7 view .LVU1893
 9380              	.LBB7096:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 9381              		.loc 5 348 2 is_stmt 0 view .LVU1894
 9382 0022 012D     		cmp	r5, #1
 9383 0024 40F0F580 		bne	.L272
 9384              	.LVL410:
 9385              	.LBB7097:
 9386              	.LBI7097:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9387              		.loc 21 321 7 is_stmt 1 view .LVU1895
 9388              	.LBB7098:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9389              		.loc 21 322 9 view .LVU1896
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9390              		.loc 21 322 16 is_stmt 0 view .LVU1897
 9391 0028 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9392              		.loc 21 322 22 view .LVU1898
 9393 002a 3346     		mov	r3, r6
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9394              		.loc 21 322 14 view .LVU1899
 9395 002c 8DF82020 		strb	r2, [sp, #32]
 9396              	.LVL411:
 9397              	.L273:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9398              		.loc 21 322 14 view .LVU1900
 9399              	.LBE7098:
 9400              	.LBE7097:
 9401              	.LBE7096:
 9402              	.LBE7095:
 9403              	.LBE7094:
 9404              	.LBB7114:
 9405              	.LBI7114:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9406              		.loc 5 214 7 is_stmt 1 view .LVU1901
 9407              	.LBB7115:
 9408              	.LBB7116:
 9409              	.LBI7116:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9410              		.loc 5 182 7 view .LVU1902
 9411              	.LBE7116:
 9412              	.LBB7118:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 552


 9413              	.LBB7119:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9414              		.loc 21 322 14 is_stmt 0 view .LVU1903
 9415 0030 0021     		movs	r1, #0
 9416              	.LBE7119:
 9417              	.LBE7118:
 9418              	.LBB7121:
 9419              	.LBB7117:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9420              		.loc 5 183 26 view .LVU1904
 9421 0032 0795     		str	r5, [sp, #28]
 9422              	.LVL412:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9423              		.loc 5 183 26 view .LVU1905
 9424              	.LBE7117:
 9425              	.LBE7121:
 9426              	.LBB7122:
 9427              	.LBI7122:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9428              		.loc 5 186 7 is_stmt 1 view .LVU1906
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9429              		.loc 5 186 7 is_stmt 0 view .LVU1907
 9430              	.LBE7122:
 9431              	.LBB7124:
 9432              	.LBI7118:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9433              		.loc 21 321 7 is_stmt 1 view .LVU1908
 9434              	.LBB7120:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9435              		.loc 21 322 9 view .LVU1909
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9436              		.loc 21 322 14 is_stmt 0 view .LVU1910
 9437 0034 5955     		strb	r1, [r3, r5]
 9438              	.LVL413:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9439              		.loc 21 322 14 view .LVU1911
 9440              	.LBE7120:
 9441              	.LBE7124:
 9442              	.LBE7115:
 9443              	.LBE7114:
 9444              	.LBE7140:
 9445              	.LBE7145:
 9446              	.LBE7150:
 9447              	.LBE7155:
 9448              	.LBE7160:
 9449              	.LBE7169:
 9450              	.LBE7174:
 9451              	.LBE7179:
 9452              	.LBE7184:
 131:Brizachord.cpp **** 	if      (gpio_state.button_C.FallingEdge())     new_root = "C";
 9453              		.loc 1 131 2 is_stmt 1 view .LVU1912
 9454              	.LBB7185:
 9455              	.LBI7185:
  68:../../libDaisy//src/hid/switch.h ****     {
 9456              		.loc 11 68 17 view .LVU1913
 9457              	.LBB7186:
 9458              		.loc 11 70 9 view .LVU1914
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 553


 9459              		.loc 11 70 25 is_stmt 0 view .LVU1915
 9460 0036 94F80832 		ldrb	r3, [r4, #520]	@ zero_extendqisi2
 9461 003a 23B1     		cbz	r3, .L274
 9462              	.LVL414:
 9463              		.loc 11 70 25 view .LVU1916
 9464              	.LBE7186:
 9465              	.LBE7185:
 131:Brizachord.cpp **** 	if      (gpio_state.button_C.FallingEdge())     new_root = "C";
 9466              		.loc 1 131 2 view .LVU1917
 9467 003c 94F82032 		ldrb	r3, [r4, #544]	@ zero_extendqisi2
 9468 0040 802B     		cmp	r3, #128
 9469 0042 00F04381 		beq	.L379
 9470              	.L274:
 132:Brizachord.cpp **** 	else if (gpio_state.button_Db.FallingEdge())    new_root = "Db";
 9471              		.loc 1 132 7 is_stmt 1 view .LVU1918
 9472              	.LVL415:
 9473              	.LBB7187:
 9474              	.LBI7187:
  68:../../libDaisy//src/hid/switch.h ****     {
 9475              		.loc 11 68 17 view .LVU1919
 9476              	.LBB7188:
 9477              		.loc 11 70 9 view .LVU1920
 9478              		.loc 11 70 25 is_stmt 0 view .LVU1921
 9479 0046 94F82C32 		ldrb	r3, [r4, #556]	@ zero_extendqisi2
 9480 004a 23B1     		cbz	r3, .L276
 9481              	.LVL416:
 9482              		.loc 11 70 25 view .LVU1922
 9483              	.LBE7188:
 9484              	.LBE7187:
 132:Brizachord.cpp **** 	else if (gpio_state.button_Db.FallingEdge())    new_root = "Db";
 9485              		.loc 1 132 7 view .LVU1923
 9486 004c 94F84432 		ldrb	r3, [r4, #580]	@ zero_extendqisi2
 9487 0050 802B     		cmp	r3, #128
 9488 0052 00F04481 		beq	.L380
 9489              	.L276:
 133:Brizachord.cpp **** 	else if (gpio_state.button_D.FallingEdge())     new_root = "D";
 9490              		.loc 1 133 7 is_stmt 1 view .LVU1924
 9491              	.LVL417:
 9492              	.LBB7189:
 9493              	.LBI7189:
  68:../../libDaisy//src/hid/switch.h ****     {
 9494              		.loc 11 68 17 view .LVU1925
 9495              	.LBB7190:
 9496              		.loc 11 70 9 view .LVU1926
 9497              		.loc 11 70 25 is_stmt 0 view .LVU1927
 9498 0056 94F85032 		ldrb	r3, [r4, #592]	@ zero_extendqisi2
 9499 005a 23B1     		cbz	r3, .L277
 9500              	.LVL418:
 9501              		.loc 11 70 25 view .LVU1928
 9502              	.LBE7190:
 9503              	.LBE7189:
 133:Brizachord.cpp **** 	else if (gpio_state.button_D.FallingEdge())     new_root = "D";
 9504              		.loc 1 133 7 view .LVU1929
 9505 005c 94F86832 		ldrb	r3, [r4, #616]	@ zero_extendqisi2
 9506 0060 802B     		cmp	r3, #128
 9507 0062 00F04381 		beq	.L381
 9508              	.L277:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 554


 134:Brizachord.cpp **** 	else if (gpio_state.button_Eb.FallingEdge())    new_root = "Eb";
 9509              		.loc 1 134 7 is_stmt 1 view .LVU1930
 9510              	.LVL419:
 9511              	.LBB7191:
 9512              	.LBI7191:
  68:../../libDaisy//src/hid/switch.h ****     {
 9513              		.loc 11 68 17 view .LVU1931
 9514              	.LBB7192:
 9515              		.loc 11 70 9 view .LVU1932
 9516              		.loc 11 70 25 is_stmt 0 view .LVU1933
 9517 0066 94F87432 		ldrb	r3, [r4, #628]	@ zero_extendqisi2
 9518 006a 23B1     		cbz	r3, .L278
 9519              	.LVL420:
 9520              		.loc 11 70 25 view .LVU1934
 9521              	.LBE7192:
 9522              	.LBE7191:
 134:Brizachord.cpp **** 	else if (gpio_state.button_Eb.FallingEdge())    new_root = "Eb";
 9523              		.loc 1 134 7 view .LVU1935
 9524 006c 94F88C32 		ldrb	r3, [r4, #652]	@ zero_extendqisi2
 9525 0070 802B     		cmp	r3, #128
 9526 0072 00F01481 		beq	.L382
 9527              	.L278:
 135:Brizachord.cpp **** 	else if (gpio_state.button_E.FallingEdge())     new_root = "E";
 9528              		.loc 1 135 7 is_stmt 1 view .LVU1936
 9529              	.LVL421:
 9530              	.LBB7193:
 9531              	.LBI7193:
  68:../../libDaisy//src/hid/switch.h ****     {
 9532              		.loc 11 68 17 view .LVU1937
 9533              	.LBB7194:
 9534              		.loc 11 70 9 view .LVU1938
 9535              		.loc 11 70 25 is_stmt 0 view .LVU1939
 9536 0076 94F89832 		ldrb	r3, [r4, #664]	@ zero_extendqisi2
 9537 007a 23B1     		cbz	r3, .L279
 9538              	.LVL422:
 9539              		.loc 11 70 25 view .LVU1940
 9540              	.LBE7194:
 9541              	.LBE7193:
 135:Brizachord.cpp **** 	else if (gpio_state.button_E.FallingEdge())     new_root = "E";
 9542              		.loc 1 135 7 view .LVU1941
 9543 007c 94F8B032 		ldrb	r3, [r4, #688]	@ zero_extendqisi2
 9544 0080 802B     		cmp	r3, #128
 9545 0082 00F01081 		beq	.L383
 9546              	.L279:
 136:Brizachord.cpp **** 	else if (gpio_state.button_F.FallingEdge())     new_root = "F";
 9547              		.loc 1 136 7 is_stmt 1 view .LVU1942
 9548              	.LVL423:
 9549              	.LBB7195:
 9550              	.LBI7195:
  68:../../libDaisy//src/hid/switch.h ****     {
 9551              		.loc 11 68 17 view .LVU1943
 9552              	.LBB7196:
 9553              		.loc 11 70 9 view .LVU1944
 9554              		.loc 11 70 25 is_stmt 0 view .LVU1945
 9555 0086 94F8BC32 		ldrb	r3, [r4, #700]	@ zero_extendqisi2
 9556 008a 23B1     		cbz	r3, .L280
 9557              	.LVL424:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 555


 9558              		.loc 11 70 25 view .LVU1946
 9559              	.LBE7196:
 9560              	.LBE7195:
 136:Brizachord.cpp **** 	else if (gpio_state.button_F.FallingEdge())     new_root = "F";
 9561              		.loc 1 136 7 view .LVU1947
 9562 008c 94F8D432 		ldrb	r3, [r4, #724]	@ zero_extendqisi2
 9563 0090 802B     		cmp	r3, #128
 9564 0092 00F00C81 		beq	.L384
 9565              	.L280:
 137:Brizachord.cpp **** 	else if (gpio_state.button_Gb.FallingEdge())    new_root = "Gb";
 9566              		.loc 1 137 7 is_stmt 1 view .LVU1948
 9567              	.LVL425:
 9568              	.LBB7197:
 9569              	.LBI7197:
  68:../../libDaisy//src/hid/switch.h ****     {
 9570              		.loc 11 68 17 view .LVU1949
 9571              	.LBB7198:
 9572              		.loc 11 70 9 view .LVU1950
 9573              		.loc 11 70 25 is_stmt 0 view .LVU1951
 9574 0096 94F8E032 		ldrb	r3, [r4, #736]	@ zero_extendqisi2
 9575 009a 002B     		cmp	r3, #0
 9576 009c 00F0BE80 		beq	.L281
 9577              	.LVL426:
 9578              		.loc 11 70 25 view .LVU1952
 9579              	.LBE7198:
 9580              	.LBE7197:
 137:Brizachord.cpp **** 	else if (gpio_state.button_Gb.FallingEdge())    new_root = "Gb";
 9581              		.loc 1 137 7 view .LVU1953
 9582 00a0 94F8F832 		ldrb	r3, [r4, #760]	@ zero_extendqisi2
 9583 00a4 802B     		cmp	r3, #128
 9584 00a6 40F0B980 		bne	.L281
 137:Brizachord.cpp **** 	else if (gpio_state.button_Gb.FallingEdge())    new_root = "Gb";
 9585              		.loc 1 137 50 is_stmt 1 view .LVU1954
 9586              	.LVL427:
 9587              	.LBB7199:
 9588              	.LBI7199:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 9589              		.loc 5 675 7 view .LVU1955
 9590              	.LBB7200:
 9591              	.LBI7200:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9592              		.loc 5 1435 7 view .LVU1956
 9593              	.LBB7201:
 9594              	.LBB7202:
 9595              	.LBI7202:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9596              		.loc 5 901 7 view .LVU1957
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9597              		.loc 5 901 7 is_stmt 0 view .LVU1958
 9598              	.LBE7202:
 9599              	.LBE7201:
 9600              	.LBE7200:
 9601              	.LBE7199:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9602              		.loc 21 357 2 is_stmt 1 view .LVU1959
 9603              	.LBB7205:
 9604              	.LBB7204:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 556


 9605              	.LBB7203:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 9606              		.loc 5 1438 19 is_stmt 0 view .LVU1960
 9607 00aa 06AF     		add	r7, sp, #24
 9608              	.LVL428:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 9609              		.loc 5 1438 19 view .LVU1961
 9610 00ac 0222     		movs	r2, #2
 9611 00ae AF4B     		ldr	r3, .L397
 9612              	.LVL429:
 9613              	.L377:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 9614              		.loc 5 1438 19 view .LVU1962
 9615              	.LBE7203:
 9616              	.LBE7204:
 9617              	.LBE7205:
 9618              	.LBB7206:
 9619              	.LBB7207:
 9620              	.LBB7208:
 9621 00b0 0092     		str	r2, [sp]
 9622 00b2 0021     		movs	r1, #0
 9623 00b4 079A     		ldr	r2, [sp, #28]
 9624 00b6 3846     		mov	r0, r7
 9625 00b8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 9626              	.LVL430:
 9627              	.L275:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 9628              		.loc 5 1438 19 view .LVU1963
 9629              	.LBE7208:
 9630              	.LBE7207:
 9631              	.LBE7206:
 145:Brizachord.cpp **** 	if (new_root != instrument_state.chord.root) {
 9632              		.loc 1 145 2 is_stmt 1 view .LVU1964
 9633              	.LBB7214:
 9634              	.LBB7215:
 9635              	.LBI7215:
6239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 9636              		.loc 5 6239 5 view .LVU1965
 9637 00bc 079A     		ldr	r2, [sp, #28]
 9638              	.LBB7216:
 9639              	.LBB7217:
 9640              	.LBI7217:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 9641              		.loc 5 6171 5 view .LVU1966
 9642              	.LVL431:
 9643              	.LBB7218:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 9644              		.loc 5 6174 8 is_stmt 0 view .LVU1967
 9645 00be D4F88830 		ldr	r3, [r4, #136]
 9646 00c2 9A42     		cmp	r2, r3
 9647 00c4 00F0F780 		beq	.L385
 9648              	.L289:
 9649              	.LVL432:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 9650              		.loc 5 6174 8 view .LVU1968
 9651              	.LBE7218:
 9652              	.LBE7217:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 557


 9653              	.LBE7216:
 9654              	.LBE7215:
 9655              	.LBB7224:
 146:Brizachord.cpp **** 		instrument_state.chord.root = new_root;
 9656              		.loc 1 146 3 is_stmt 1 view .LVU1969
 9657              	.LBB7225:
 9658              	.LBI7225:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9659              		.loc 5 665 7 view .LVU1970
 9660              	.LBB7226:
 9661              	.LBI7226:
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9662              		.loc 5 1335 7 view .LVU1971
 9663              	.LBB7227:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 9664              		.loc 5 1366 17 is_stmt 0 view .LVU1972
 9665 00c8 3946     		mov	r1, r7
 9666 00ca 04F18400 		add	r0, r4, #132
 9667 00ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 9668              	.LVL433:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 9669              		.loc 5 1366 17 view .LVU1973
 9670              	.LBE7227:
 9671              	.LBE7226:
 9672              	.LBE7225:
 147:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 9673              		.loc 1 147 3 is_stmt 1 view .LVU1974
 148:Brizachord.cpp **** 		instrument_state.chord.extension = instrument_state.queued_extension;
 9674              		.loc 1 148 3 view .LVU1975
 147:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 9675              		.loc 1 147 34 is_stmt 0 view .LVU1976
 9676 00d2 B4F8A030 		ldrh	r3, [r4, #160]
 9677 00d6 A4F89C30 		strh	r3, [r4, #156]	@ movhi
 151:Brizachord.cpp **** 		__disable_irq();
 9678              		.loc 1 151 3 is_stmt 1 view .LVU1977
 9679              	.LBB7228:
 9680              	.LBI7228:
 9681              		.file 30 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h"
   1:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 558


  20:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  52:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 559


  77:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 130:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 560


 134:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 141:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 157:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 163:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 166:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 189:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 190:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 561


 191:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 193:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 194:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 197:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 198:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 202:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 203:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 204:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 205:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 209:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** */
 210:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 211:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 219:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 223:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 224:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 225:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 226:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 228:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 230:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 231:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 234:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 236:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 238:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 242:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 244:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 245:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 246:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 247:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 562


 248:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 249:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 252:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 253:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 258:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 260:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 262:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 263:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 264:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 265:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 269:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 271:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 273:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 274:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 275:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 276:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 280:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 282:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 284:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 285:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 286:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 287:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 291:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 292:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 294:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 297:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 298:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 299:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 301:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 302:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 303:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 563


 305:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 306:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 310:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 311:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 313:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 314:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 315:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 317:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 318:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 319:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 321:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 325:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 326:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 328:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 331:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
 332:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 335:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 336:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 337:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
 345:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 346:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 348:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 351:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
 352:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 353:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 355:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 356:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 357:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 358:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 564


 362:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 364:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 366:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 367:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 368:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 372:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 373:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 375:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 376:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 382:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 384:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 387:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
 388:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
 390:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 391:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 393:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 394:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 395:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 396:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 397:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 398:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 403:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 405:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
 411:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    */
 414:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 415:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 416:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
 417:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 418:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 565


 419:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 420:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 421:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 422:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 427:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 432:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 434:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 435:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 436:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 439:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 442:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 444:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 446:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 447:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 448:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 449:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 454:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 456:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 457:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 461:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 464:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 466:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 471:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 566


 476:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 479:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 482:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 486:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 493:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 495:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 496:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 499:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 500:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 501:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 502:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 503:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 510:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 512:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 513:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 514:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 516:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 517:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 518:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 519:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 520:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 527:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 529:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 530:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 531:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 567


 533:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 534:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 535:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 537:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 540:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 542:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 544:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 545:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 550:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 551:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 555:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 560:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 561:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
 563:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
 564:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
 567:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  })
 568:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 569:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 570:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 571:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 576:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 577:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
 579:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
 580:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
 583:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  })
 584:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 585:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 586:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 587:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 568


 590:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
 592:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 593:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 595:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 596:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 597:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 599:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 600:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 601:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 603:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 608:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 610:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 611:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 612:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 615:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 618:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 620:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 622:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 623:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 624:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 625:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 630:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 632:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 633:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 634:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 637:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 640:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 642:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 644:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 645:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 569


 647:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 652:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 654:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 655:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 656:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 658:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 659:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 660:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 661:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 662:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 667:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 669:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 673:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 679:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 681:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 683:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 684:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 685:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 686:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 691:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 693:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 695:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 696:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 700:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 701:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 570


 704:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 706:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 707:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 709:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 711:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
 714:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 715:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
 716:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 717:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
 718:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 719:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
 720:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 721:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 722:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
 723:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 724:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 725:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 726:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 731:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 732:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 734:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 736:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 739:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
 740:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 741:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
 742:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 743:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
 744:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 745:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 746:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 748:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 749:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 753:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 754:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 757:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 571


 761:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 762:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 764:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 765:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 769:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 770:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 771:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 772:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 777:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 779:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 780:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 781:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 784:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 785:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 786:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 787:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 795:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 796:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 798:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 799:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 800:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 801:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 802:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 807:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 809:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 811:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 812:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 813:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 814:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 572


 818:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 819:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 821:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 823:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 825:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 826:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 831:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 833:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 835:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 836:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 837:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 838:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 843:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 845:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 846:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 847:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 850:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 851:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 852:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 853:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 858:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 860:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 861:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 862:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 865:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 866:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 867:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 868:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 873:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 573


 875:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 876:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 879:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 880:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 881:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 882:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 883:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 890:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 892:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 893:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 894:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 896:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 897:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 898:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 907:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 909:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 910:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 913:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 914:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 915:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 916:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 917:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 926:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 927:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 928:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 930:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 931:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 574


 932:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 935:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 937:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 942:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 943:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 944:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 945:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 949:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 953:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 954:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 955:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 956:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 960:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 9682              		.loc 30 960 27 view .LVU1978
 9683              	.LBB7229:
 961:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 962:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 9684              		.loc 30 962 3 view .LVU1979
 9685              		.syntax unified
 9686              	@ 962 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 9687 00da 72B6     		cpsid i
 9688              	@ 0 "" 2
 9689              		.thumb
 9690              		.syntax unified
 9691              	.LBE7229:
 9692              	.LBE7228:
 152:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 9693              		.loc 1 152 3 view .LVU1980
 9694              	.LVL434:
 9695              	.LBB7230:
 9696              	.LBI7230:
 9697              		.file 31 "InstrumentState.h"
   1:InstrumentState.h **** #pragma once
   2:InstrumentState.h **** #include <string>
   3:InstrumentState.h **** 
   4:InstrumentState.h **** enum ChordQuality {
   5:InstrumentState.h **** 	MAJOR, MINOR,
   6:InstrumentState.h **** 	AUGMENTED, DIMINISHED,
   7:InstrumentState.h **** };
   8:InstrumentState.h **** 
   9:InstrumentState.h **** enum ChordExtension {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 575


  10:InstrumentState.h **** 	TRIAD, SIXTH, SEVENTH,
  11:InstrumentState.h **** 	NINTH, ELEVENTH,
  12:InstrumentState.h **** };
  13:InstrumentState.h **** 
  14:InstrumentState.h **** enum Beat {
  15:InstrumentState.h **** 	ROCK1, ROCK2, SLOW_ROCK, COUNTRY, SWING,
  16:InstrumentState.h **** 	DISCO, HIPHOP, FUNK, BOSSA, WALTZ,
  17:InstrumentState.h **** };
  18:InstrumentState.h **** 
  19:InstrumentState.h **** enum Voice {
  20:InstrumentState.h **** 	HARP,
  21:InstrumentState.h **** 	ORGAN,
  22:InstrumentState.h **** 	WURLI,
  23:InstrumentState.h **** };
  24:InstrumentState.h **** 
  25:InstrumentState.h **** struct Chord {
 9698              		.loc 31 25 8 view .LVU1981
 9699              	.LBB7231:
 9700              	.LBB7232:
 9701              	.LBB7233:
 9702              	.LBI7233:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 9703              		.loc 5 448 7 view .LVU1982
 9704              	.LBB7234:
 9705              	.LBB7235:
 9706              	.LBB7236:
 9707              	.LBI7236:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9708              		.loc 5 190 7 view .LVU1983
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9709              		.loc 5 190 7 is_stmt 0 view .LVU1984
 9710              	.LBE7236:
 9711              	.LBB7237:
 9712              	.LBI7237:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9713              		.loc 5 290 7 is_stmt 1 view .LVU1985
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9714              		.loc 5 290 7 is_stmt 0 view .LVU1986
 9715              	.LBE7237:
 9716              	.LBB7238:
 9717              	.LBI7238:
 9718              		.loc 26 97 29 is_stmt 1 view .LVU1987
 9719              	.LBB7239:
 9720              	.LBI7239:
 9721              		.loc 6 558 7 view .LVU1988
 9722              	.LBB7240:
 9723              	.LBI7240:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9724              		.loc 9 147 7 view .LVU1989
 9725              	.LBB7241:
 9726              	.LBI7241:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9727              		.loc 7 82 7 view .LVU1990
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9728              		.loc 7 82 7 is_stmt 0 view .LVU1991
 9729              	.LBE7241:
 9730              	.LBE7240:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 576


 9731              	.LBE7239:
 9732              	.LBE7238:
 9733              	.LBB7242:
 9734              	.LBI7242:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9735              		.loc 5 159 2 is_stmt 1 view .LVU1992
 9736              	.LBB7243:
 9737              	.LBB7244:
 9738              	.LBB7245:
 9739              	.LBI7245:
 9740              		.loc 27 101 5 view .LVU1993
 9741              		.loc 27 101 5 is_stmt 0 view .LVU1994
 9742              	.LBE7245:
 9743              	.LBB7246:
 9744              	.LBI7246:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9745              		.loc 9 147 7 is_stmt 1 view .LVU1995
 9746              	.LBB7247:
 9747              	.LBI7247:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9748              		.loc 7 82 7 view .LVU1996
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9749              		.loc 7 82 7 is_stmt 0 view .LVU1997
 9750              	.LBE7247:
 9751              	.LBE7246:
 9752              	.LBE7244:
 9753              	.LBE7243:
 9754              	.LBE7242:
 9755              	.LBB7252:
 9756              	.LBB7253:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9757              		.loc 5 908 16 view .LVU1998
 9758 00dc D4E92185 		ldrd	r8, r5, [r4, #132]
 9759              	.LBE7253:
 9760              	.LBE7252:
 9761              	.LBB7254:
 9762              	.LBB7250:
 9763              	.LBB7248:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9764              		.loc 5 160 46 view .LVU1999
 9765 00e0 0EAF     		add	r7, sp, #56
 9766              	.LVL435:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9767              		.loc 5 160 46 view .LVU2000
 9768              	.LBE7248:
 9769              	.LBE7250:
 9770              	.LBE7254:
 9771              	.LBB7255:
 9772              	.LBB7256:
 9773              	.LBB7257:
 9774              	.LBB7258:
 9775              	.LBB7259:
 9776              	.LBB7260:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9777              		.loc 25 211 42 view .LVU2001
 9778 00e2 18EB050F 		cmn	r8, r5
 9779              	.LBE7260:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 577


 9780              	.LBE7259:
 9781              	.LBE7258:
 9782              	.LBE7257:
 9783              	.LBE7256:
 9784              	.LBE7255:
 9785              	.LBB7333:
 9786              	.LBB7251:
 9787              	.LBB7249:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9788              		.loc 5 160 46 view .LVU2002
 9789 00e6 0C97     		str	r7, [sp, #48]
 9790              	.LVL436:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9791              		.loc 5 160 46 view .LVU2003
 9792              	.LBE7249:
 9793              	.LBE7251:
 9794              	.LBE7333:
 9795              	.LBB7334:
 9796              	.LBI7334:
 9797              		.loc 9 162 7 is_stmt 1 view .LVU2004
 9798              	.LBB7335:
 9799              	.LBI7335:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9800              		.loc 7 89 7 view .LVU2005
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9801              		.loc 7 89 7 is_stmt 0 view .LVU2006
 9802              	.LBE7335:
 9803              	.LBE7334:
 9804              	.LBB7336:
 9805              	.LBI7336:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9806              		.loc 5 186 7 is_stmt 1 view .LVU2007
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9807              		.loc 5 186 7 is_stmt 0 view .LVU2008
 9808              	.LBE7336:
 9809              	.LBB7337:
 9810              	.LBI7337:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9811              		.loc 5 186 7 is_stmt 1 view .LVU2009
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9812              		.loc 5 186 7 is_stmt 0 view .LVU2010
 9813              	.LBE7337:
 9814              	.LBB7338:
 9815              	.LBI7252:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9816              		.loc 5 907 7 is_stmt 1 view .LVU2011
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9817              		.loc 5 907 7 is_stmt 0 view .LVU2012
 9818              	.LBE7338:
 9819              	.LBB7339:
 9820              	.LBI7255:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 9821              		.loc 5 263 9 is_stmt 1 view .LVU2013
 9822              	.LBB7329:
 9823              	.LBB7325:
 9824              	.LBI7257:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 578


 9825              		.loc 5 243 9 view .LVU2014
 9826              	.LBB7321:
 9827              	.LBB7317:
 9828              	.LBI7259:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 9829              		.loc 25 206 7 view .LVU2015
 9830              	.LBB7313:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9831              		.loc 25 211 42 is_stmt 0 view .LVU2016
 9832 00e8 03D0     		beq	.L314
 9833 00ea B8F1000F 		cmp	r8, #0
 9834 00ee 00F03581 		beq	.L291
 9835              	.L314:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9836              		.loc 25 217 2 view .LVU2017
 9837 00f2 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 9838              		.loc 25 215 12 view .LVU2018
 9839 00f4 1395     		str	r5, [sp, #76]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9840              		.loc 25 217 2 view .LVU2019
 9841 00f6 00F20881 		bhi	.L386
 9842              	.LVL437:
 9843              	.LBB7261:
 9844              	.LBI7261:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9845              		.loc 5 186 7 is_stmt 1 view .LVU2020
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9846              		.loc 5 186 7 is_stmt 0 view .LVU2021
 9847              	.LBE7261:
 9848              	.LBB7263:
 9849              	.LBI7263:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 9850              		.loc 5 392 7 is_stmt 1 view .LVU2022
 9851              	.LBB7264:
 9852              	.LBI7264:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9853              		.loc 5 346 7 view .LVU2023
 9854              	.LBB7265:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 9855              		.loc 5 348 2 is_stmt 0 view .LVU2024
 9856 00fa 012D     		cmp	r5, #1
 9857 00fc 40F0FF80 		bne	.L295
 9858              	.LVL438:
 9859              	.LBB7266:
 9860              	.LBI7266:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9861              		.loc 21 321 7 is_stmt 1 view .LVU2025
 9862              	.LBB7267:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9863              		.loc 21 322 9 view .LVU2026
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9864              		.loc 21 322 16 is_stmt 0 view .LVU2027
 9865 0100 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9866              		.loc 21 322 22 view .LVU2028
 9867 0104 3A46     		mov	r2, r7
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 579


 9868 0106 0DF1300A 		add	r10, sp, #48
 9869              	.LVL439:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9870              		.loc 21 322 14 view .LVU2029
 9871 010a 8DF83830 		strb	r3, [sp, #56]
 9872              	.LVL440:
 9873              	.L296:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9874              		.loc 21 322 14 view .LVU2030
 9875              	.LBE7267:
 9876              	.LBE7266:
 9877              	.LBE7265:
 9878              	.LBE7264:
 9879              	.LBE7263:
 9880              	.LBB7283:
 9881              	.LBI7283:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9882              		.loc 5 214 7 is_stmt 1 view .LVU2031
 9883              	.LBB7284:
 9884              	.LBB7285:
 9885              	.LBI7285:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9886              		.loc 5 182 7 view .LVU2032
 9887              	.LBE7285:
 9888              	.LBB7287:
 9889              	.LBB7288:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9890              		.loc 21 322 14 is_stmt 0 view .LVU2033
 9891 010e 0023     		movs	r3, #0
 9892              	.LBE7288:
 9893              	.LBE7287:
 9894              	.LBB7291:
 9895              	.LBB7286:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9896              		.loc 5 183 26 view .LVU2034
 9897 0110 0D95     		str	r5, [sp, #52]
 9898              	.LVL441:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9899              		.loc 5 183 26 view .LVU2035
 9900              	.LBE7286:
 9901              	.LBE7291:
 9902              	.LBB7292:
 9903              	.LBI7292:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9904              		.loc 5 186 7 is_stmt 1 view .LVU2036
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9905              		.loc 5 186 7 is_stmt 0 view .LVU2037
 9906              	.LBE7292:
 9907              	.LBB7294:
 9908              	.LBI7287:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9909              		.loc 21 321 7 is_stmt 1 view .LVU2038
 9910              	.LBB7289:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9911              		.loc 21 322 9 view .LVU2039
 9912              	.LBE7289:
 9913              	.LBE7294:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 580


 9914              	.LBE7284:
 9915              	.LBE7283:
 9916              	.LBE7313:
 9917              	.LBE7317:
 9918              	.LBE7321:
 9919              	.LBE7325:
 9920              	.LBE7329:
 9921              	.LBE7339:
 9922              	.LBE7235:
 9923              	.LBE7234:
 9924              	.LBE7233:
 9925              	.LBE7232:
 9926              	.LBE7231:
 9927              	.LBE7230:
 152:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 9928              		.loc 1 152 57 is_stmt 0 view .LVU2040
 9929 0112 03A8     		add	r0, sp, #12
 9930 0114 5146     		mov	r1, r10
 9931              	.LBB7358:
 9932              	.LBB7355:
 9933              	.LBB7352:
 9934              	.LBB7349:
 9935              	.LBB7346:
 9936              	.LBB7343:
 9937              	.LBB7340:
 9938              	.LBB7330:
 9939              	.LBB7326:
 9940              	.LBB7322:
 9941              	.LBB7318:
 9942              	.LBB7314:
 9943              	.LBB7299:
 9944              	.LBB7297:
 9945              	.LBB7295:
 9946              	.LBB7290:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9947              		.loc 21 322 14 view .LVU2041
 9948 0116 5355     		strb	r3, [r2, r5]
 9949              	.LVL442:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9950              		.loc 21 322 14 view .LVU2042
 9951              	.LBE7290:
 9952              	.LBE7295:
 9953              	.LBE7297:
 9954              	.LBE7299:
 9955              	.LBE7314:
 9956              	.LBE7318:
 9957              	.LBE7322:
 9958              	.LBE7326:
 9959              	.LBE7330:
 9960              	.LBE7340:
 9961              	.LBE7343:
 9962              	.LBE7346:
 9963              	.LBE7349:
 9964              		.loc 31 25 8 view .LVU2043
 9965 0118 B4F89C30 		ldrh	r3, [r4, #156]
 9966 011c ADF84830 		strh	r3, [sp, #72]	@ movhi
 9967              	.LVL443:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 581


 9968              		.loc 31 25 8 view .LVU2044
 9969              	.LBE7352:
 9970              	.LBE7355:
 9971              	.LBE7358:
 152:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 9972              		.loc 1 152 57 view .LVU2045
 9973 0120 FFF7FEFF 		bl	_Z13chord_to_midi5Chord
 9974              	.LVL444:
 9975              	.LBB7359:
 9976              	.LBI7359:
 9977              		.loc 31 25 8 is_stmt 1 view .LVU2046
 9978              	.LBB7360:
 9979              	.LBI7360:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9980              		.loc 5 657 7 view .LVU2047
 9981              	.LBB7361:
 9982              	.LBI7361:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9983              		.loc 5 229 7 view .LVU2048
 9984              	.LBB7362:
 9985              	.LBB7363:
 9986              	.LBI7363:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9987              		.loc 5 221 7 view .LVU2049
 9988              	.LBB7364:
 9989              	.LBI7364:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9990              		.loc 5 186 7 view .LVU2050
 9991              	.LBB7365:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9992              		.loc 5 187 28 is_stmt 0 view .LVU2051
 9993 0124 0C98     		ldr	r0, [sp, #48]
 9994              	.LVL445:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9995              		.loc 5 187 28 view .LVU2052
 9996              	.LBE7365:
 9997              	.LBE7364:
 9998              	.LBB7366:
 9999              	.LBI7366:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10000              		.loc 5 200 7 is_stmt 1 view .LVU2053
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10001              		.loc 5 200 7 is_stmt 0 view .LVU2054
 10002              	.LBE7366:
 10003              	.LBE7363:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10004              		.loc 5 231 2 view .LVU2055
 10005 0126 B842     		cmp	r0, r7
 10006 0128 03D0     		beq	.L297
 10007              	.LVL446:
 10008              	.LBB7367:
 10009              	.LBI7367:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10010              		.loc 5 236 7 is_stmt 1 view .LVU2056
 10011              	.LBB7368:
 10012              	.LBB7369:
 10013              	.LBI7369:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 582


 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10014              		.loc 6 491 7 view .LVU2057
 10015              	.LBB7370:
 10016              	.LBI7370:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10017              		.loc 7 120 7 view .LVU2058
 10018              	.LBE7370:
 10019              	.LBE7369:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10020              		.loc 5 237 34 is_stmt 0 view .LVU2059
 10021 012a 0E99     		ldr	r1, [sp, #56]
 10022              	.LBB7373:
 10023              	.LBB7372:
 10024              	.LBB7371:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10025              		.loc 7 133 19 view .LVU2060
 10026 012c 0131     		adds	r1, r1, #1
 10027              	.LVL447:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10028              		.loc 7 133 19 view .LVU2061
 10029 012e FFF7FEFF 		bl	_ZdlPvj
 10030              	.LVL448:
 10031              	.L297:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10032              		.loc 7 133 19 view .LVU2062
 10033              	.LBE7371:
 10034              	.LBE7372:
 10035              	.LBE7373:
 10036              	.LBE7368:
 10037              	.LBE7367:
 10038              	.LBE7362:
 10039              	.LBE7361:
 10040              	.LBB7374:
 10041              	.LBI7374:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10042              		.loc 5 150 14 is_stmt 1 view .LVU2063
 10043              	.LBB7375:
 10044              	.LBI7375:
 10045              		.loc 9 162 7 view .LVU2064
 10046              	.LBB7376:
 10047              	.LBI7376:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10048              		.loc 7 89 7 view .LVU2065
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10049              		.loc 7 89 7 is_stmt 0 view .LVU2066
 10050              	.LBE7376:
 10051              	.LBE7375:
 10052              	.LBE7374:
 10053              	.LBE7360:
 10054              	.LBE7359:
 153:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 10055              		.loc 1 153 3 is_stmt 1 view .LVU2067
 10056              	.LBB7377:
 10057              	.LBB7378:
 10058              	.LBB7379:
 10059              	.LBB7380:
 10060              	.LBB7381:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 583


 10061              	.LBB7382:
 10062              	.LBB7383:
 10063              	.LBB7384:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10064              		.loc 5 187 28 is_stmt 0 view .LVU2068
 10065 0132 D4F88490 		ldr	r9, [r4, #132]
 10066              	.LBE7384:
 10067              	.LBE7383:
 10068              	.LBB7385:
 10069              	.LBB7386:
 10070              	.LBB7387:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10071              		.loc 5 160 46 view .LVU2069
 10072 0136 0DF15408 		add	r8, sp, #84
 10073              	.LBE7387:
 10074              	.LBE7386:
 10075              	.LBE7385:
 10076              	.LBB7393:
 10077              	.LBB7394:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10078              		.loc 5 908 16 view .LVU2070
 10079 013a D4F88850 		ldr	r5, [r4, #136]
 10080              	.LBE7394:
 10081              	.LBE7393:
 10082              	.LBE7382:
 10083              	.LBE7381:
 10084              	.LBE7380:
 10085              	.LBE7379:
 10086              	.LBE7378:
 10087              	.LBE7377:
 153:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 10088              		.loc 1 153 24 view .LVU2071
 10089 013e 04F5D76B 		add	fp, r4, #1720
 10090              	.LVL449:
 10091              	.LBB7514:
 10092              	.LBI7377:
 10093              		.loc 31 25 8 is_stmt 1 view .LVU2072
 10094              	.LBB7509:
 10095              	.LBB7504:
 10096              	.LBB7499:
 10097              	.LBI7380:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 10098              		.loc 5 448 7 view .LVU2073
 10099              	.LBB7494:
 10100              	.LBB7489:
 10101              	.LBB7395:
 10102              	.LBI7395:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10103              		.loc 5 190 7 view .LVU2074
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10104              		.loc 5 190 7 is_stmt 0 view .LVU2075
 10105              	.LBE7395:
 10106              	.LBB7396:
 10107              	.LBI7396:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10108              		.loc 5 290 7 is_stmt 1 view .LVU2076
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 584


 10109              		.loc 5 290 7 is_stmt 0 view .LVU2077
 10110              	.LBE7396:
 10111              	.LBB7397:
 10112              	.LBI7397:
 10113              		.loc 26 97 29 is_stmt 1 view .LVU2078
 10114              	.LBB7398:
 10115              	.LBI7398:
 10116              		.loc 6 558 7 view .LVU2079
 10117              	.LBB7399:
 10118              	.LBI7399:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10119              		.loc 9 147 7 view .LVU2080
 10120              	.LBB7400:
 10121              	.LBI7400:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10122              		.loc 7 82 7 view .LVU2081
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10123              		.loc 7 82 7 is_stmt 0 view .LVU2082
 10124              	.LBE7400:
 10125              	.LBE7399:
 10126              	.LBE7398:
 10127              	.LBE7397:
 10128              	.LBB7401:
 10129              	.LBI7385:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10130              		.loc 5 159 2 is_stmt 1 view .LVU2083
 10131              	.LBB7392:
 10132              	.LBB7391:
 10133              	.LBB7388:
 10134              	.LBI7388:
 10135              		.loc 27 101 5 view .LVU2084
 10136              		.loc 27 101 5 is_stmt 0 view .LVU2085
 10137              	.LBE7388:
 10138              	.LBB7389:
 10139              	.LBI7389:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10140              		.loc 9 147 7 is_stmt 1 view .LVU2086
 10141              	.LBB7390:
 10142              	.LBI7390:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10143              		.loc 7 82 7 view .LVU2087
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10144              		.loc 7 82 7 is_stmt 0 view .LVU2088
 10145              	.LBE7390:
 10146              	.LBE7389:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10147              		.loc 5 160 46 view .LVU2089
 10148 0142 CDF84C80 		str	r8, [sp, #76]
 10149              	.LVL450:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10150              		.loc 5 160 46 view .LVU2090
 10151              	.LBE7391:
 10152              	.LBE7392:
 10153              	.LBE7401:
 10154              	.LBB7402:
 10155              	.LBI7402:
 10156              		.loc 9 162 7 is_stmt 1 view .LVU2091
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 585


 10157              	.LBB7403:
 10158              	.LBI7403:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10159              		.loc 7 89 7 view .LVU2092
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10160              		.loc 7 89 7 is_stmt 0 view .LVU2093
 10161              	.LBE7403:
 10162              	.LBE7402:
 10163              	.LBB7404:
 10164              	.LBI7383:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10165              		.loc 5 186 7 is_stmt 1 view .LVU2094
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10166              		.loc 5 186 7 is_stmt 0 view .LVU2095
 10167              	.LBE7404:
 10168              	.LBB7405:
 10169              	.LBI7405:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10170              		.loc 5 186 7 is_stmt 1 view .LVU2096
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10171              		.loc 5 186 7 is_stmt 0 view .LVU2097
 10172              	.LBE7405:
 10173              	.LBB7406:
 10174              	.LBI7393:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10175              		.loc 5 907 7 is_stmt 1 view .LVU2098
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10176              		.loc 5 907 7 is_stmt 0 view .LVU2099
 10177              	.LBE7406:
 10178              	.LBB7407:
 10179              	.LBI7407:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 10180              		.loc 5 263 9 is_stmt 1 view .LVU2100
 10181              	.LBB7408:
 10182              	.LBB7409:
 10183              	.LBI7409:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 10184              		.loc 5 243 9 view .LVU2101
 10185              	.LBB7410:
 10186              	.LBB7411:
 10187              	.LBI7411:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 10188              		.loc 25 206 7 view .LVU2102
 10189              	.LBB7412:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 10190              		.loc 25 211 42 is_stmt 0 view .LVU2103
 10191 0146 19EB050F 		cmn	r9, r5
 10192 014a 03D0     		beq	.L315
 10193 014c B9F1000F 		cmp	r9, #0
 10194 0150 00F00481 		beq	.L291
 10195              	.L315:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10196              		.loc 25 217 2 view .LVU2104
 10197 0154 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 10198              		.loc 25 215 12 view .LVU2105
 10199 0156 0C95     		str	r5, [sp, #48]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 586


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10200              		.loc 25 217 2 view .LVU2106
 10201 0158 00F2E880 		bhi	.L387
 10202              	.LVL451:
 10203              	.LBB7413:
 10204              	.LBI7413:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10205              		.loc 5 186 7 is_stmt 1 view .LVU2107
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10206              		.loc 5 186 7 is_stmt 0 view .LVU2108
 10207              	.LBE7413:
 10208              	.LBB7415:
 10209              	.LBI7415:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10210              		.loc 5 392 7 is_stmt 1 view .LVU2109
 10211              	.LBB7416:
 10212              	.LBI7416:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10213              		.loc 5 346 7 view .LVU2110
 10214              	.LBB7417:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 10215              		.loc 5 348 2 is_stmt 0 view .LVU2111
 10216 015c 012D     		cmp	r5, #1
 10217 015e 40F0C980 		bne	.L301
 10218              	.LVL452:
 10219              	.LBB7418:
 10220              	.LBI7418:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10221              		.loc 21 321 7 is_stmt 1 view .LVU2112
 10222              	.LBB7419:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10223              		.loc 21 322 9 view .LVU2113
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10224              		.loc 21 322 16 is_stmt 0 view .LVU2114
 10225 0162 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10226              		.loc 21 322 22 view .LVU2115
 10227 0166 4246     		mov	r2, r8
 10228 0168 13AF     		add	r7, sp, #76
 10229              	.LVL453:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10230              		.loc 21 322 14 view .LVU2116
 10231 016a 8DF85430 		strb	r3, [sp, #84]
 10232              	.LVL454:
 10233              	.L302:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10234              		.loc 21 322 14 view .LVU2117
 10235              	.LBE7419:
 10236              	.LBE7418:
 10237              	.LBE7417:
 10238              	.LBE7416:
 10239              	.LBE7415:
 10240              	.LBB7435:
 10241              	.LBI7435:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10242              		.loc 5 214 7 is_stmt 1 view .LVU2118
 10243              	.LBB7436:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 587


 10244              	.LBB7437:
 10245              	.LBI7437:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10246              		.loc 5 182 7 view .LVU2119
 10247              	.LBE7437:
 10248              	.LBB7439:
 10249              	.LBB7440:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10250              		.loc 21 322 14 is_stmt 0 view .LVU2120
 10251 016e 0023     		movs	r3, #0
 10252              	.LBE7440:
 10253              	.LBE7439:
 10254              	.LBB7443:
 10255              	.LBB7438:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10256              		.loc 5 183 26 view .LVU2121
 10257 0170 1495     		str	r5, [sp, #80]
 10258              	.LVL455:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10259              		.loc 5 183 26 view .LVU2122
 10260              	.LBE7438:
 10261              	.LBE7443:
 10262              	.LBB7444:
 10263              	.LBI7444:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10264              		.loc 5 186 7 is_stmt 1 view .LVU2123
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10265              		.loc 5 186 7 is_stmt 0 view .LVU2124
 10266              	.LBE7444:
 10267              	.LBB7446:
 10268              	.LBI7439:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10269              		.loc 21 321 7 is_stmt 1 view .LVU2125
 10270              	.LBB7441:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10271              		.loc 21 322 9 view .LVU2126
 10272              	.LBE7441:
 10273              	.LBE7446:
 10274              	.LBE7436:
 10275              	.LBE7435:
 10276              	.LBE7412:
 10277              	.LBE7411:
 10278              	.LBE7410:
 10279              	.LBE7409:
 10280              	.LBE7408:
 10281              	.LBE7407:
 10282              	.LBE7489:
 10283              	.LBE7494:
 10284              	.LBE7499:
 10285              	.LBE7504:
 10286              	.LBE7509:
 10287              	.LBE7514:
 153:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 10288              		.loc 1 153 24 is_stmt 0 view .LVU2127
 10289 0172 5846     		mov	r0, fp
 10290 0174 3946     		mov	r1, r7
 10291              	.LBB7515:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 588


 10292              	.LBB7510:
 10293              	.LBB7505:
 10294              	.LBB7500:
 10295              	.LBB7495:
 10296              	.LBB7490:
 10297              	.LBB7485:
 10298              	.LBB7481:
 10299              	.LBB7477:
 10300              	.LBB7473:
 10301              	.LBB7469:
 10302              	.LBB7465:
 10303              	.LBB7451:
 10304              	.LBB7449:
 10305              	.LBB7447:
 10306              	.LBB7442:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10307              		.loc 21 322 14 view .LVU2128
 10308 0176 5355     		strb	r3, [r2, r5]
 10309              	.LVL456:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10310              		.loc 21 322 14 view .LVU2129
 10311              	.LBE7442:
 10312              	.LBE7447:
 10313              	.LBE7449:
 10314              	.LBE7451:
 10315              	.LBE7465:
 10316              	.LBE7469:
 10317              	.LBE7473:
 10318              	.LBE7477:
 10319              	.LBE7481:
 10320              	.LBE7485:
 10321              	.LBE7490:
 10322              	.LBE7495:
 10323              	.LBE7500:
 10324              		.loc 31 25 8 view .LVU2130
 10325 0178 B4F89C30 		ldrh	r3, [r4, #156]
 10326 017c ADF86430 		strh	r3, [sp, #100]	@ movhi
 10327              	.LVL457:
 10328              		.loc 31 25 8 view .LVU2131
 10329              	.LBE7505:
 10330              	.LBE7510:
 10331              	.LBE7515:
 153:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 10332              		.loc 1 153 24 view .LVU2132
 10333 0180 FFF7FEFF 		bl	_ZN10ChordSynth9set_chordE5Chord
 10334              	.LVL458:
 10335              	.LBB7516:
 10336              	.LBI7516:
 10337              		.loc 31 25 8 is_stmt 1 view .LVU2133
 10338              	.LBB7517:
 10339              	.LBI7517:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10340              		.loc 5 657 7 view .LVU2134
 10341              	.LBB7518:
 10342              	.LBI7518:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10343              		.loc 5 229 7 view .LVU2135
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 589


 10344              	.LBB7519:
 10345              	.LBB7520:
 10346              	.LBI7520:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10347              		.loc 5 221 7 view .LVU2136
 10348              	.LBB7521:
 10349              	.LBI7521:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10350              		.loc 5 186 7 view .LVU2137
 10351              	.LBB7522:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10352              		.loc 5 187 28 is_stmt 0 view .LVU2138
 10353 0184 1398     		ldr	r0, [sp, #76]
 10354              	.LVL459:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10355              		.loc 5 187 28 view .LVU2139
 10356              	.LBE7522:
 10357              	.LBE7521:
 10358              	.LBB7523:
 10359              	.LBI7523:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10360              		.loc 5 200 7 is_stmt 1 view .LVU2140
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10361              		.loc 5 200 7 is_stmt 0 view .LVU2141
 10362              	.LBE7523:
 10363              	.LBE7520:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10364              		.loc 5 231 2 view .LVU2142
 10365 0186 4045     		cmp	r0, r8
 10366 0188 03D0     		beq	.L303
 10367              	.LVL460:
 10368              	.LBB7524:
 10369              	.LBI7524:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10370              		.loc 5 236 7 is_stmt 1 view .LVU2143
 10371              	.LBB7525:
 10372              	.LBB7526:
 10373              	.LBI7526:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10374              		.loc 6 491 7 view .LVU2144
 10375              	.LBB7527:
 10376              	.LBI7527:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10377              		.loc 7 120 7 view .LVU2145
 10378              	.LBE7527:
 10379              	.LBE7526:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10380              		.loc 5 237 34 is_stmt 0 view .LVU2146
 10381 018a 1599     		ldr	r1, [sp, #84]
 10382              	.LBB7530:
 10383              	.LBB7529:
 10384              	.LBB7528:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10385              		.loc 7 133 19 view .LVU2147
 10386 018c 0131     		adds	r1, r1, #1
 10387              	.LVL461:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 590


 10388              		.loc 7 133 19 view .LVU2148
 10389 018e FFF7FEFF 		bl	_ZdlPvj
 10390              	.LVL462:
 10391              	.L303:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10392              		.loc 7 133 19 view .LVU2149
 10393              	.LBE7528:
 10394              	.LBE7529:
 10395              	.LBE7530:
 10396              	.LBE7525:
 10397              	.LBE7524:
 10398              	.LBE7519:
 10399              	.LBE7518:
 10400              	.LBB7531:
 10401              	.LBI7531:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10402              		.loc 5 150 14 is_stmt 1 view .LVU2150
 10403              	.LBB7532:
 10404              	.LBI7532:
 10405              		.loc 9 162 7 view .LVU2151
 10406              	.LBB7533:
 10407              	.LBI7533:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10408              		.loc 7 89 7 view .LVU2152
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10409              		.loc 7 89 7 is_stmt 0 view .LVU2153
 10410              	.LBE7533:
 10411              	.LBE7532:
 10412              	.LBE7531:
 10413              	.LBE7517:
 10414              	.LBE7516:
 154:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 10415              		.loc 1 154 3 is_stmt 1 view .LVU2154
 10416              	.LBB7534:
 10417              	.LBB7535:
 10418              	.LBB7536:
 10419              	.LBB7537:
 10420              	.LBB7538:
 10421              	.LBB7539:
 10422              	.LBB7540:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10423              		.loc 14 98 47 is_stmt 0 view .LVU2155
 10424 0192 0023     		movs	r3, #0
 10425              	.LBE7540:
 10426              	.LBE7539:
 10427              	.LBE7538:
 10428              	.LBE7537:
 10429              	.LBE7536:
 10430              	.LBE7535:
 10431              	.LBE7534:
 154:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 10432              		.loc 1 154 27 view .LVU2156
 10433 0194 04F5FE64 		add	r4, r4, #2032
 10434              	.LVL463:
 10435              	.LBB7649:
 10436              	.LBI7534:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 591


 10437              		.loc 14 553 7 is_stmt 1 view .LVU2157
 10438              	.LBB7645:
 10439              	.LBB7579:
 10440              	.LBI7579:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10441              		.loc 14 918 7 view .LVU2158
 10442              	.LBB7580:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10443              		.loc 14 919 66 is_stmt 0 view .LVU2159
 10444 0198 DDE90310 		ldrd	r1, r0, [sp, #12]
 10445              	.LVL464:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10446              		.loc 14 919 66 view .LVU2160
 10447              	.LBE7580:
 10448              	.LBE7579:
 10449              	.LBB7581:
 10450              	.LBI7581:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10451              		.loc 14 280 7 is_stmt 1 view .LVU2161
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10452              		.loc 14 280 7 is_stmt 0 view .LVU2162
 10453              	.LBE7581:
 10454              	.LBB7582:
 10455              	.LBI7582:
 10456              		.loc 26 97 29 is_stmt 1 view .LVU2163
 10457              	.LBB7583:
 10458              	.LBI7583:
 10459              		.loc 6 558 7 view .LVU2164
 10460              	.LBB7584:
 10461              	.LBI7584:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10462              		.loc 9 147 7 view .LVU2165
 10463              	.LBB7585:
 10464              	.LBI7585:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10465              		.loc 7 82 7 view .LVU2166
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10466              		.loc 7 82 7 is_stmt 0 view .LVU2167
 10467              	.LBE7585:
 10468              	.LBE7584:
 10469              	.LBE7583:
 10470              	.LBE7582:
 10471              	.LBB7586:
 10472              	.LBI7536:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 10473              		.loc 14 303 7 is_stmt 1 view .LVU2168
 10474              	.LBB7549:
 10475              	.LBI7537:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 10476              		.loc 14 136 2 view .LVU2169
 10477              	.LBB7545:
 10478              	.LBI7545:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10479              		.loc 9 147 7 view .LVU2170
 10480              	.LBB7546:
 10481              	.LBI7546:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 592


 10482              		.loc 7 82 7 view .LVU2171
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10483              		.loc 7 82 7 is_stmt 0 view .LVU2172
 10484              	.LBE7546:
 10485              	.LBE7545:
 10486              	.LBB7547:
 10487              	.LBI7538:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10488              		.loc 14 97 2 is_stmt 1 view .LVU2173
 10489              	.LBB7543:
 10490              	.LBB7541:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10491              		.loc 14 98 47 is_stmt 0 view .LVU2174
 10492 019c CDE91333 		strd	r3, r3, [sp, #76]
 10493              	.LBE7541:
 10494              	.LBE7543:
 10495              	.LBE7547:
 10496              	.LBE7549:
 10497              	.LBB7550:
 10498              	.LBB7551:
 10499              	.LBB7552:
 10500              	.LBB7553:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10501              		.loc 14 346 18 view .LVU2175
 10502 01a0 451A     		subs	r5, r0, r1
 10503              	.LVL465:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10504              		.loc 14 346 18 view .LVU2176
 10505              	.LBE7553:
 10506              	.LBE7552:
 10507              	.LBE7551:
 10508              	.LBE7550:
 10509              	.LBB7572:
 10510              	.LBB7548:
 10511              	.LBB7544:
 10512              	.LBB7542:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10513              		.loc 14 98 47 view .LVU2177
 10514 01a2 1593     		str	r3, [sp, #84]
 10515              	.LVL466:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10516              		.loc 14 98 47 view .LVU2178
 10517              	.LBE7542:
 10518              	.LBE7544:
 10519              	.LBE7548:
 10520              	.LBE7572:
 10521              	.LBB7573:
 10522              	.LBI7550:
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10523              		.loc 14 359 7 is_stmt 1 view .LVU2179
 10524              	.LBB7566:
 10525              	.LBB7563:
 10526              	.LBI7552:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10527              		.loc 14 343 7 view .LVU2180
 10528              	.LBB7560:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 593


 10529              		.loc 14 346 18 is_stmt 0 view .LVU2181
 10530 01a4 00F09F80 		beq	.L313
 10531              	.LVL467:
 10532              	.LBB7554:
 10533              	.LBI7554:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10534              		.loc 6 459 7 is_stmt 1 view .LVU2182
 10535              	.LBB7555:
 10536              	.LBI7555:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10537              		.loc 7 103 7 view .LVU2183
 10538              	.LBB7556:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 10539              		.loc 7 105 2 is_stmt 0 view .LVU2184
 10540 01a8 714B     		ldr	r3, .L397+4
 10541 01aa 9D42     		cmp	r5, r3
 10542 01ac 00F2FC80 		bhi	.L388
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10543              		.loc 7 115 41 view .LVU2185
 10544 01b0 2846     		mov	r0, r5
 10545 01b2 FFF7FEFF 		bl	_Znwj
 10546              	.LVL468:
 10547 01b6 0346     		mov	r3, r0
 10548              	.LVL469:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10549              		.loc 7 115 41 view .LVU2186
 10550              	.LBE7556:
 10551              	.LBE7555:
 10552              	.LBE7554:
 10553              	.LBE7560:
 10554              	.LBE7563:
 10555              	.LBE7566:
 10556              	.LBE7573:
 10557              	.LBE7586:
 10558              	.LBB7587:
 10559              	.LBB7588:
 10560              	.LBB7589:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 10561              		.loc 17 979 23 view .LVU2187
 10562 01b8 DDE90310 		ldrd	r1, r0, [sp, #12]
 10563              	.LBE7589:
 10564              	.LBE7588:
 10565              	.LBE7587:
 10566              	.LBB7591:
 10567              	.LBB7592:
 10568              	.LBB7593:
 10569              	.LBB7594:
 10570              	.LBB7595:
 10571              	.LBB7596:
 10572              	.LBB7597:
 10573              	.LBB7598:
 10574              	.LBB7599:
 10575              	.LBB7600:
 10576              	.LBB7601:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 594


 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 595


 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 596


 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 10577              		.loc 23 424 34 view .LVU2188
 10578 01bc A0EB0108 		sub	r8, r0, r1
 10579              	.L304:
 10580              	.LVL470:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 597


 10581              		.loc 23 424 34 view .LVU2189
 10582              	.LBE7601:
 10583              	.LBE7600:
 10584              	.LBE7599:
 10585              	.LBE7598:
 10586              	.LBE7597:
 10587              	.LBE7596:
 10588              	.LBE7595:
 10589              	.LBE7594:
 10590              	.LBE7593:
 10591              	.LBE7592:
 10592              	.LBE7591:
 10593              	.LBB7631:
 10594              	.LBB7574:
 10595              	.LBB7567:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10596              		.loc 14 363 59 view .LVU2190
 10597 01c0 1D44     		add	r5, r5, r3
 10598              	.LVL471:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10599              		.loc 14 363 59 view .LVU2191
 10600              	.LBE7567:
 10601              	.LBE7574:
 10602              	.LBE7631:
 10603              	.LBB7632:
 10604              	.LBB7628:
 10605              	.LBB7625:
 10606              	.LBB7622:
 10607              	.LBB7619:
 10608              	.LBB7616:
 10609              	.LBB7613:
 10610              	.LBB7610:
 10611              	.LBB7607:
 10612              	.LBB7604:
 10613              	.LBB7602:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 10614              		.loc 23 425 4 view .LVU2192
 10615 01c2 8142     		cmp	r1, r0
 10616              	.LBE7602:
 10617              	.LBE7604:
 10618              	.LBE7607:
 10619              	.LBE7610:
 10620              	.LBE7613:
 10621              	.LBE7616:
 10622              	.LBE7619:
 10623              	.LBE7622:
 10624              	.LBE7625:
 10625              	.LBE7628:
 10626              	.LBE7632:
 10627              	.LBB7633:
 10628              	.LBB7575:
 10629              	.LBB7568:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10630              		.loc 14 363 34 view .LVU2193
 10631 01c4 1595     		str	r5, [sp, #84]
 10632              	.LVL472:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 598


 10633              		.loc 14 363 34 view .LVU2194
 10634              	.LBE7568:
 10635              	.LBE7575:
 10636              	.LBE7633:
 10637              	.LBB7634:
 10638              	.LBI7634:
 10639              		.loc 9 162 7 is_stmt 1 view .LVU2195
 10640              	.LBB7635:
 10641              	.LBI7635:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10642              		.loc 7 89 7 view .LVU2196
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10643              		.loc 7 89 7 is_stmt 0 view .LVU2197
 10644              	.LBE7635:
 10645              	.LBE7634:
 10646              	.LBB7636:
 10647              	.LBI7636:
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 10648              		.loc 14 820 7 is_stmt 1 view .LVU2198
 10649              	.LBB7637:
 10650              	.LBI7637:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10651              		.loc 17 978 7 view .LVU2199
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10652              		.loc 17 978 7 is_stmt 0 view .LVU2200
 10653              	.LBE7637:
 10654              	.LBE7636:
 10655              	.LBB7638:
 10656              	.LBI7587:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 10657              		.loc 14 838 7 is_stmt 1 view .LVU2201
 10658              	.LBB7590:
 10659              	.LBI7588:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10660              		.loc 17 978 7 view .LVU2202
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10661              		.loc 17 978 7 is_stmt 0 view .LVU2203
 10662              	.LBE7590:
 10663              	.LBE7638:
 10664              	.LBB7639:
 10665              	.LBI7639:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10666              		.loc 14 276 7 is_stmt 1 view .LVU2204
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10667              		.loc 14 276 7 is_stmt 0 view .LVU2205
 10668              	.LBE7639:
 10669              	.LBB7640:
 10670              	.LBI7591:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 10671              		.loc 19 323 5 is_stmt 1 view .LVU2206
 10672              	.LBB7629:
 10673              	.LBI7592:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 10674              		.loc 19 125 5 view .LVU2207
 10675              	.LBB7626:
 10676              	.LBB7623:
 10677              	.LBI7594:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 599


 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 10678              		.loc 19 107 9 view .LVU2208
 10679              	.LBB7620:
 10680              	.LBI7595:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 600


 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 601


 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 10681              		.loc 23 560 5 view .LVU2209
 10682              	.LBB7617:
 10683              	.LBI7596:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 10684              		.loc 23 511 5 view .LVU2210
 10685              	.LBB7614:
 10686              	.LBI7597:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 10687              		.loc 23 505 5 view .LVU2211
 10688              	.LBB7611:
 10689              	.LBI7598:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 10690              		.loc 23 463 5 view .LVU2212
 10691              	.LBB7608:
 10692              	.LBB7605:
 10693              	.LBI7600:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 10694              		.loc 23 415 2 view .LVU2213
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 10695              		.loc 23 415 2 is_stmt 0 view .LVU2214
 10696              	.LBE7605:
 10697              	.LBE7608:
 10698              	.LBE7611:
 10699              	.LBE7614:
 10700              	.LBE7617:
 10701              	.LBE7620:
 10702              	.LBE7623:
 10703              	.LBE7626:
 10704              	.LBE7629:
 10705              	.LBE7640:
 10706              	.LBB7641:
 10707              	.LBB7576:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 602


 10708              	.LBB7569:
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 10709              		.loc 14 362 26 view .LVU2215
 10710 01c6 CDE91333 		strd	r3, r3, [sp, #76]
 10711              	.LBE7569:
 10712              	.LBE7576:
 10713              	.LBE7641:
 10714              	.LBB7642:
 10715              	.LBB7630:
 10716              	.LBB7627:
 10717              	.LBB7624:
 10718              	.LBB7621:
 10719              	.LBB7618:
 10720              	.LBB7615:
 10721              	.LBB7612:
 10722              	.LBB7609:
 10723              	.LBB7606:
 10724              	.LBB7603:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 10725              		.loc 23 425 4 view .LVU2216
 10726 01ca 04D0     		beq	.L306
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 10727              		.loc 23 426 23 view .LVU2217
 10728 01cc 1846     		mov	r0, r3
 10729 01ce 4246     		mov	r2, r8
 10730 01d0 FFF7FEFF 		bl	memmove
 10731              	.LVL473:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 10732              		.loc 23 426 23 view .LVU2218
 10733 01d4 0346     		mov	r3, r0
 10734              	.L306:
 10735              	.LVL474:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 10736              		.loc 23 427 22 view .LVU2219
 10737 01d6 4344     		add	r3, r3, r8
 10738              	.LBE7603:
 10739              	.LBE7606:
 10740              	.LBE7609:
 10741              	.LBE7612:
 10742              	.LBE7615:
 10743              	.LBE7618:
 10744              	.LBE7621:
 10745              	.LBE7624:
 10746              	.LBE7627:
 10747              	.LBE7630:
 10748              	.LBE7642:
 10749              	.LBE7645:
 10750              	.LBE7649:
 154:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 10751              		.loc 1 154 27 view .LVU2220
 10752 01d8 2046     		mov	r0, r4
 10753 01da 3946     		mov	r1, r7
 10754              	.LBB7650:
 10755              	.LBB7646:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 10756              		.loc 14 557 26 view .LVU2221
 10757 01dc 1493     		str	r3, [sp, #80]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 603


 10758              	.LVL475:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 10759              		.loc 14 557 26 view .LVU2222
 10760              	.LBE7646:
 10761              	.LBE7650:
 154:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 10762              		.loc 1 154 27 view .LVU2223
 10763 01de FFF7FEFF 		bl	_ZN10StrumSynth12set_arpeggioESt6vectorIiSaIiEE
 10764              	.LVL476:
 10765              	.LBB7651:
 10766              	.LBI7651:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10767              		.loc 14 678 7 is_stmt 1 view .LVU2224
 10768              	.LBB7652:
 10769              	.LBB7653:
 10770              	.LBI7653:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10771              		.loc 14 276 7 view .LVU2225
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10772              		.loc 14 276 7 is_stmt 0 view .LVU2226
 10773              	.LBE7653:
 10774              	.LBB7654:
 10775              	.LBI7654:
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 604


 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 605


 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 606


 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 10776              		.loc 6 735 5 is_stmt 1 view .LVU2227
 10777              		.loc 6 735 5 is_stmt 0 view .LVU2228
 10778              	.LBE7654:
 10779              	.LBB7655:
 10780              	.LBI7655:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10781              		.loc 14 333 7 is_stmt 1 view .LVU2229
 10782              	.LBB7656:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 10783              		.loc 14 335 15 is_stmt 0 view .LVU2230
 10784 01e2 1398     		ldr	r0, [sp, #76]
 10785              	.LVL477:
 10786              	.LBB7657:
 10787              	.LBI7657:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10788              		.loc 14 350 7 is_stmt 1 view .LVU2231
 10789              	.LBB7658:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10790              		.loc 14 353 2 is_stmt 0 view .LVU2232
 10791 01e4 18B1     		cbz	r0, .L307
 10792              	.LVL478:
 10793              	.LBB7659:
 10794              	.LBI7659:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10795              		.loc 6 491 7 is_stmt 1 view .LVU2233
 10796              	.LBB7660:
 10797              	.LBB7661:
 10798              	.LBI7661:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 607


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10799              		.loc 7 120 7 view .LVU2234
 10800              	.LBE7661:
 10801              	.LBE7660:
 10802              	.LBE7659:
 10803              	.LBE7658:
 10804              	.LBE7657:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10805              		.loc 14 336 35 is_stmt 0 view .LVU2235
 10806 01e6 1599     		ldr	r1, [sp, #84]
 10807              	.LBB7667:
 10808              	.LBB7666:
 10809              	.LBB7665:
 10810              	.LBB7664:
 10811              	.LBB7663:
 10812              	.LBB7662:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10813              		.loc 7 133 19 view .LVU2236
 10814 01e8 091A     		subs	r1, r1, r0
 10815 01ea FFF7FEFF 		bl	_ZdlPvj
 10816              	.LVL479:
 10817              	.L307:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10818              		.loc 7 133 19 view .LVU2237
 10819              	.LBE7662:
 10820              	.LBE7663:
 10821              	.LBE7664:
 10822              	.LBE7665:
 10823              	.LBE7666:
 10824              	.LBE7667:
 10825              	.LBB7668:
 10826              	.LBI7668:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10827              		.loc 14 128 14 is_stmt 1 view .LVU2238
 10828              	.LBB7669:
 10829              	.LBI7669:
 10830              		.loc 9 162 7 view .LVU2239
 10831              	.LBB7670:
 10832              	.LBI7670:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10833              		.loc 7 89 7 view .LVU2240
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10834              		.loc 7 89 7 is_stmt 0 view .LVU2241
 10835              	.LBE7670:
 10836              	.LBE7669:
 10837              	.LBE7668:
 10838              	.LBE7656:
 10839              	.LBE7655:
 10840              	.LBE7652:
 10841              	.LBE7651:
 155:Brizachord.cpp **** 		__enable_irq();
 10842              		.loc 1 155 3 is_stmt 1 view .LVU2242
 10843              	.LBB7671:
 10844              	.LBI7671:
 949:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 10845              		.loc 30 949 27 view .LVU2243
 10846              	.LBB7672:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 608


 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 10847              		.loc 30 951 3 view .LVU2244
 10848              		.syntax unified
 10849              	@ 951 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 10850 01ee 62B6     		cpsie i
 10851              	@ 0 "" 2
 10852              	.LVL480:
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 10853              		.loc 30 951 3 is_stmt 0 view .LVU2245
 10854              		.thumb
 10855              		.syntax unified
 10856              	.LBE7672:
 10857              	.LBE7671:
 10858              	.LBB7673:
 10859              	.LBI7673:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10860              		.loc 14 678 7 is_stmt 1 view .LVU2246
 10861              	.LBB7674:
 10862              	.LBB7675:
 10863              	.LBI7675:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10864              		.loc 14 276 7 view .LVU2247
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10865              		.loc 14 276 7 is_stmt 0 view .LVU2248
 10866              	.LBE7675:
 10867              	.LBB7676:
 10868              	.LBI7676:
 10869              		.loc 6 735 5 is_stmt 1 view .LVU2249
 10870              		.loc 6 735 5 is_stmt 0 view .LVU2250
 10871              	.LBE7676:
 10872              	.LBB7677:
 10873              	.LBI7677:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10874              		.loc 14 333 7 is_stmt 1 view .LVU2251
 10875              	.LBB7678:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 10876              		.loc 14 335 15 is_stmt 0 view .LVU2252
 10877 01f0 0398     		ldr	r0, [sp, #12]
 10878              	.LVL481:
 10879              	.LBB7679:
 10880              	.LBI7679:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10881              		.loc 14 350 7 is_stmt 1 view .LVU2253
 10882              	.LBB7680:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10883              		.loc 14 353 2 is_stmt 0 view .LVU2254
 10884 01f2 18B1     		cbz	r0, .L308
 10885              	.LVL482:
 10886              	.LBB7681:
 10887              	.LBI7681:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10888              		.loc 6 491 7 is_stmt 1 view .LVU2255
 10889              	.LBB7682:
 10890              	.LBB7683:
 10891              	.LBI7683:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10892              		.loc 7 120 7 view .LVU2256
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 609


 10893              	.LBE7683:
 10894              	.LBE7682:
 10895              	.LBE7681:
 10896              	.LBE7680:
 10897              	.LBE7679:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10898              		.loc 14 336 35 is_stmt 0 view .LVU2257
 10899 01f4 0599     		ldr	r1, [sp, #20]
 10900              	.LBB7689:
 10901              	.LBB7688:
 10902              	.LBB7687:
 10903              	.LBB7686:
 10904              	.LBB7685:
 10905              	.LBB7684:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10906              		.loc 7 133 19 view .LVU2258
 10907 01f6 091A     		subs	r1, r1, r0
 10908 01f8 FFF7FEFF 		bl	_ZdlPvj
 10909              	.LVL483:
 10910              	.L308:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10911              		.loc 7 133 19 view .LVU2259
 10912              	.LBE7684:
 10913              	.LBE7685:
 10914              	.LBE7686:
 10915              	.LBE7687:
 10916              	.LBE7688:
 10917              	.LBE7689:
 10918              	.LBB7690:
 10919              	.LBI7690:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10920              		.loc 14 128 14 is_stmt 1 view .LVU2260
 10921              	.LBB7691:
 10922              	.LBI7691:
 10923              		.loc 9 162 7 view .LVU2261
 10924              	.LBB7692:
 10925              	.LBI7692:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10926              		.loc 7 89 7 view .LVU2262
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10927              		.loc 7 89 7 is_stmt 0 view .LVU2263
 10928              	.LBE7692:
 10929              	.LBE7691:
 10930              	.LBE7690:
 10931              	.LBE7678:
 10932              	.LBE7677:
 10933              	.LBE7674:
 10934              	.LBE7673:
 10935              	.LBE7224:
 10936              	.LBE7214:
 10937              	.LBB7705:
 10938              	.LBB7706:
 10939              	.LBB7707:
 10940              	.LBB7708:
 10941              	.LBB7709:
 10942              	.LBB7710:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 610


 10943              		.loc 5 187 28 view .LVU2264
 10944 01fc 069D     		ldr	r5, [sp, #24]
 10945              	.LVL484:
 10946              	.L290:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10947              		.loc 5 187 28 view .LVU2265
 10948              	.LBE7710:
 10949              	.LBE7709:
 10950              	.LBE7708:
 10951              	.LBE7707:
 10952              	.LBE7706:
 10953              	.LBI7705:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10954              		.loc 5 657 7 is_stmt 1 view .LVU2266
 10955              	.LBB7722:
 10956              	.LBI7706:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10957              		.loc 5 229 7 view .LVU2267
 10958              	.LBB7721:
 10959              	.LBB7713:
 10960              	.LBI7708:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10961              		.loc 5 221 7 view .LVU2268
 10962              	.LBB7711:
 10963              	.LBI7709:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10964              		.loc 5 186 7 view .LVU2269
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10965              		.loc 5 186 7 is_stmt 0 view .LVU2270
 10966              	.LBE7711:
 10967              	.LBB7712:
 10968              	.LBI7712:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10969              		.loc 5 200 7 is_stmt 1 view .LVU2271
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10970              		.loc 5 200 7 is_stmt 0 view .LVU2272
 10971              	.LBE7712:
 10972              	.LBE7713:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10973              		.loc 5 231 2 view .LVU2273
 10974 01fe B542     		cmp	r5, r6
 10975 0200 04D0     		beq	.L268
 10976              	.LVL485:
 10977              	.LBB7714:
 10978              	.LBI7714:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10979              		.loc 5 236 7 is_stmt 1 view .LVU2274
 10980              	.LBB7715:
 10981              	.LBB7716:
 10982              	.LBI7716:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10983              		.loc 6 491 7 view .LVU2275
 10984              	.LBB7717:
 10985              	.LBI7717:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10986              		.loc 7 120 7 view .LVU2276
 10987              	.LBE7717:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 611


 10988              	.LBE7716:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10989              		.loc 5 237 34 is_stmt 0 view .LVU2277
 10990 0202 0899     		ldr	r1, [sp, #32]
 10991              	.LBB7720:
 10992              	.LBB7719:
 10993              	.LBB7718:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10994              		.loc 7 133 19 view .LVU2278
 10995 0204 2846     		mov	r0, r5
 10996 0206 0131     		adds	r1, r1, #1
 10997              	.LVL486:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10998              		.loc 7 133 19 view .LVU2279
 10999 0208 FFF7FEFF 		bl	_ZdlPvj
 11000              	.LVL487:
 11001              	.L268:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11002              		.loc 7 133 19 view .LVU2280
 11003              	.LBE7718:
 11004              	.LBE7719:
 11005              	.LBE7720:
 11006              	.LBE7715:
 11007              	.LBE7714:
 11008              	.LBE7721:
 11009              	.LBE7722:
 11010              	.LBE7705:
 157:Brizachord.cpp **** }
 11011              		.loc 1 157 1 view .LVU2281
 11012 020c 1BB0     		add	sp, sp, #108
 11013              		.cfi_remember_state
 11014              		.cfi_def_cfa_offset 36
 11015              		@ sp needed
 11016 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11017              	.LVL488:
 11018              	.L272:
 11019              		.cfi_restore_state
 11020              	.LBB7723:
 11021              	.LBB7180:
 11022              	.LBB7175:
 11023              	.LBB7170:
 11024              	.LBB7161:
 11025              	.LBB7156:
 11026              	.LBB7151:
 11027              	.LBB7146:
 11028              	.LBB7141:
 11029              	.LBB7127:
 11030              	.LBB7111:
 11031              	.LBB7108:
 11032              	.LBB7099:
 11033              	.LBI7099:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11034              		.loc 5 346 7 is_stmt 1 view .LVU2282
 11035              	.LBB7100:
 11036              	.LBI7100:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11037              		.loc 21 387 7 view .LVU2283
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 612


 11038              	.LBB7101:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11039              		.loc 21 389 2 view .LVU2284
 11040 0212 002D     		cmp	r5, #0
 11041 0214 40F0CD80 		bne	.L389
 11042 0218 3346     		mov	r3, r6
 11043 021a 09E7     		b	.L273
 11044              	.LVL489:
 11045              	.L281:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11046              		.loc 21 389 2 is_stmt 0 view .LVU2285
 11047              	.LBE7101:
 11048              	.LBE7100:
 11049              	.LBE7099:
 11050              	.LBE7108:
 11051              	.LBE7111:
 11052              	.LBE7127:
 11053              	.LBE7141:
 11054              	.LBE7146:
 11055              	.LBE7151:
 11056              	.LBE7156:
 11057              	.LBE7161:
 11058              	.LBE7170:
 11059              	.LBE7175:
 11060              	.LBE7180:
 11061              	.LBE7723:
 138:Brizachord.cpp **** 	else if (gpio_state.button_G.FallingEdge())     new_root = "G";
 11062              		.loc 1 138 7 is_stmt 1 view .LVU2286
 11063              	.LBB7724:
 11064              	.LBI7724:
  68:../../libDaisy//src/hid/switch.h ****     {
 11065              		.loc 11 68 17 view .LVU2287
 11066              	.LBB7725:
 11067              		.loc 11 70 9 view .LVU2288
 11068              		.loc 11 70 25 is_stmt 0 view .LVU2289
 11069 021c 94F80433 		ldrb	r3, [r4, #772]	@ zero_extendqisi2
 11070 0220 23B1     		cbz	r3, .L282
 11071              	.LVL490:
 11072              		.loc 11 70 25 view .LVU2290
 11073              	.LBE7725:
 11074              	.LBE7724:
 138:Brizachord.cpp **** 	else if (gpio_state.button_G.FallingEdge())     new_root = "G";
 11075              		.loc 1 138 7 view .LVU2291
 11076 0222 94F81C33 		ldrb	r3, [r4, #796]	@ zero_extendqisi2
 11077 0226 802B     		cmp	r3, #128
 11078 0228 00F09080 		beq	.L390
 11079              	.L282:
 139:Brizachord.cpp **** 	else if (gpio_state.button_Ab.FallingEdge())    new_root = "Ab";
 11080              		.loc 1 139 7 is_stmt 1 view .LVU2292
 11081              	.LVL491:
 11082              	.LBB7726:
 11083              	.LBI7726:
  68:../../libDaisy//src/hid/switch.h ****     {
 11084              		.loc 11 68 17 view .LVU2293
 11085              	.LBB7727:
 11086              		.loc 11 70 9 view .LVU2294
 11087              		.loc 11 70 25 is_stmt 0 view .LVU2295
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 613


 11088 022c 94F82833 		ldrb	r3, [r4, #808]	@ zero_extendqisi2
 11089 0230 6BBB     		cbnz	r3, .L391
 11090              	.LVL492:
 11091              	.L283:
 11092              		.loc 11 70 25 view .LVU2296
 11093              	.LBE7727:
 11094              	.LBE7726:
 140:Brizachord.cpp **** 	else if (gpio_state.button_A.FallingEdge())     new_root = "A";
 11095              		.loc 1 140 7 is_stmt 1 view .LVU2297
 11096              	.LBB7728:
 11097              	.LBI7728:
  68:../../libDaisy//src/hid/switch.h ****     {
 11098              		.loc 11 68 17 view .LVU2298
 11099              	.LBB7729:
 11100              		.loc 11 70 9 view .LVU2299
 11101              		.loc 11 70 25 is_stmt 0 view .LVU2300
 11102 0232 94F84C33 		ldrb	r3, [r4, #844]	@ zero_extendqisi2
 11103 0236 23B1     		cbz	r3, .L284
 11104              	.LVL493:
 11105              		.loc 11 70 25 view .LVU2301
 11106              	.LBE7729:
 11107              	.LBE7728:
 140:Brizachord.cpp **** 	else if (gpio_state.button_A.FallingEdge())     new_root = "A";
 11108              		.loc 1 140 7 view .LVU2302
 11109 0238 94F86433 		ldrb	r3, [r4, #868]	@ zero_extendqisi2
 11110 023c 802B     		cmp	r3, #128
 11111 023e 00F09080 		beq	.L392
 11112              	.L284:
 141:Brizachord.cpp **** 	else if (gpio_state.button_Bb.FallingEdge())    new_root = "Bb";
 11113              		.loc 1 141 7 is_stmt 1 view .LVU2303
 11114              	.LVL494:
 11115              	.LBB7730:
 11116              	.LBI7730:
  68:../../libDaisy//src/hid/switch.h ****     {
 11117              		.loc 11 68 17 view .LVU2304
 11118              	.LBB7731:
 11119              		.loc 11 70 9 view .LVU2305
 11120              		.loc 11 70 25 is_stmt 0 view .LVU2306
 11121 0242 94F87033 		ldrb	r3, [r4, #880]	@ zero_extendqisi2
 11122 0246 23B1     		cbz	r3, .L285
 11123              	.LVL495:
 11124              		.loc 11 70 25 view .LVU2307
 11125              	.LBE7731:
 11126              	.LBE7730:
 141:Brizachord.cpp **** 	else if (gpio_state.button_Bb.FallingEdge())    new_root = "Bb";
 11127              		.loc 1 141 7 view .LVU2308
 11128 0248 94F88833 		ldrb	r3, [r4, #904]	@ zero_extendqisi2
 11129 024c 802B     		cmp	r3, #128
 11130 024e 00F0A780 		beq	.L393
 11131              	.L285:
 142:Brizachord.cpp **** 	else if (gpio_state.button_B.FallingEdge())     new_root = "B";
 11132              		.loc 1 142 7 is_stmt 1 view .LVU2309
 11133              	.LVL496:
 11134              	.LBB7732:
 11135              	.LBI7732:
  68:../../libDaisy//src/hid/switch.h ****     {
 11136              		.loc 11 68 17 view .LVU2310
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 614


 11137              	.LBB7733:
 11138              		.loc 11 70 9 view .LVU2311
 11139              		.loc 11 70 25 is_stmt 0 view .LVU2312
 11140 0252 94F89433 		ldrb	r3, [r4, #916]	@ zero_extendqisi2
 11141 0256 1BB1     		cbz	r3, .L286
 11142              	.LVL497:
 11143              		.loc 11 70 25 view .LVU2313
 11144              	.LBE7733:
 11145              	.LBE7732:
 142:Brizachord.cpp **** 	else if (gpio_state.button_B.FallingEdge())     new_root = "B";
 11146              		.loc 1 142 7 view .LVU2314
 11147 0258 94F8AC33 		ldrb	r3, [r4, #940]	@ zero_extendqisi2
 11148 025c 802B     		cmp	r3, #128
 11149 025e 79D0     		beq	.L394
 11150              	.L286:
 143:Brizachord.cpp **** 	else                           return;
 11151              		.loc 1 143 33 is_stmt 1 view .LVU2315
 11152              	.LVL498:
 11153              	.LBB7734:
 11154              	.LBI7734:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11155              		.loc 5 657 7 view .LVU2316
 11156              	.LBB7735:
 11157              	.LBB7736:
 11158              	.LBI7736:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11159              		.loc 5 229 7 view .LVU2317
 11160              	.LBB7737:
 11161              	.LBB7738:
 11162              	.LBI7738:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11163              		.loc 5 221 7 view .LVU2318
 11164              	.LBB7739:
 11165              	.LBI7739:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11166              		.loc 5 186 7 view .LVU2319
 11167              	.LBB7740:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11168              		.loc 5 187 28 is_stmt 0 view .LVU2320
 11169 0260 0698     		ldr	r0, [sp, #24]
 11170              	.LVL499:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11171              		.loc 5 187 28 view .LVU2321
 11172              	.LBE7740:
 11173              	.LBE7739:
 11174              	.LBB7741:
 11175              	.LBI7741:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11176              		.loc 5 200 7 is_stmt 1 view .LVU2322
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11177              		.loc 5 200 7 is_stmt 0 view .LVU2323
 11178              	.LBE7741:
 11179              	.LBE7738:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11180              		.loc 5 231 2 view .LVU2324
 11181 0262 B042     		cmp	r0, r6
 11182 0264 D2D0     		beq	.L268
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 615


 11183              	.LVL500:
 11184              	.LBB7742:
 11185              	.LBI7742:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11186              		.loc 5 236 7 is_stmt 1 view .LVU2325
 11187              	.LBB7743:
 11188              	.LBB7744:
 11189              	.LBI7744:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11190              		.loc 6 491 7 view .LVU2326
 11191              	.LBB7745:
 11192              	.LBI7745:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11193              		.loc 7 120 7 view .LVU2327
 11194              	.LBE7745:
 11195              	.LBE7744:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11196              		.loc 5 237 34 is_stmt 0 view .LVU2328
 11197 0266 0899     		ldr	r1, [sp, #32]
 11198              	.LBB7748:
 11199              	.LBB7747:
 11200              	.LBB7746:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11201              		.loc 7 133 19 view .LVU2329
 11202 0268 0131     		adds	r1, r1, #1
 11203              	.LVL501:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11204              		.loc 7 133 19 view .LVU2330
 11205 026a FFF7FEFF 		bl	_ZdlPvj
 11206              	.LVL502:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11207              		.loc 7 133 19 view .LVU2331
 11208              	.LBE7746:
 11209              	.LBE7747:
 11210              	.LBE7748:
 11211              	.LBE7743:
 11212              	.LBE7742:
 11213              	.LBE7737:
 11214              	.LBE7736:
 11215              	.LBB7752:
 11216              	.LBI7752:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11217              		.loc 5 150 14 is_stmt 1 view .LVU2332
 11218              	.LBB7753:
 11219              	.LBI7753:
 11220              		.loc 9 162 7 view .LVU2333
 11221              	.LBB7754:
 11222              	.LBI7754:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11223              		.loc 7 89 7 view .LVU2334
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11224              		.loc 7 89 7 is_stmt 0 view .LVU2335
 11225              	.LBE7754:
 11226              	.LBE7753:
 11227              	.LBE7752:
 11228              	.LBB7755:
 11229              	.LBB7751:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 616


 11230              	.LBB7750:
 11231              	.LBB7749:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11232              		.loc 5 237 79 view .LVU2336
 11233 026e CDE7     		b	.L268
 11234              	.LVL503:
 11235              	.L378:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11236              		.loc 5 237 79 view .LVU2337
 11237              	.LBE7749:
 11238              	.LBE7750:
 11239              	.LBE7751:
 11240              	.LBE7755:
 11241              	.LBE7735:
 11242              	.LBE7734:
 11243              	.LBB7756:
 11244              	.LBB7181:
 11245              	.LBB7176:
 11246              	.LBB7171:
 11247              	.LBB7162:
 11248              	.LBB7157:
 11249              	.LBB7152:
 11250              	.LBB7147:
 11251              	.LBB7142:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11252              		.loc 25 219 13 view .LVU2338
 11253 0270 0022     		movs	r2, #0
 11254 0272 13A9     		add	r1, sp, #76
 11255 0274 06A8     		add	r0, sp, #24
 11256              	.LVL504:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11257              		.loc 25 219 13 view .LVU2339
 11258 0276 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11259              	.LVL505:
 11260              	.LBB7128:
 11261              	.LBI7128:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11262              		.loc 5 178 7 is_stmt 1 view .LVU2340
 11263              	.LBE7128:
 11264              	.LBB7130:
 11265              	.LBB7131:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11266              		.loc 5 211 31 is_stmt 0 view .LVU2341
 11267 027a 139B     		ldr	r3, [sp, #76]
 11268              	.LBE7131:
 11269              	.LBE7130:
 11270              	.LBB7133:
 11271              	.LBB7129:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11272              		.loc 5 179 26 view .LVU2342
 11273 027c 0690     		str	r0, [sp, #24]
 11274              	.LVL506:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11275              		.loc 5 179 26 view .LVU2343
 11276              	.LBE7129:
 11277              	.LBE7133:
 11278              	.LBB7134:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 617


 11279              	.LBI7130:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11280              		.loc 5 210 7 is_stmt 1 view .LVU2344
 11281              	.LBB7132:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11282              		.loc 5 211 31 is_stmt 0 view .LVU2345
 11283 027e 0893     		str	r3, [sp, #32]
 11284              	.LVL507:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11285              		.loc 5 211 31 view .LVU2346
 11286              	.LBE7132:
 11287              	.LBE7134:
 11288              	.LBB7135:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11289              		.loc 5 186 7 is_stmt 1 view .LVU2347
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11290              		.loc 5 186 7 is_stmt 0 view .LVU2348
 11291              	.LBE7135:
 11292              	.LBB7136:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11293              		.loc 5 392 7 is_stmt 1 view .LVU2349
 11294              	.LBB7112:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11295              		.loc 5 346 7 view .LVU2350
 11296              	.LBB7109:
 11297              	.LBB7106:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11298              		.loc 5 346 7 view .LVU2351
 11299              	.LBB7104:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11300              		.loc 21 387 7 view .LVU2352
 11301              	.LBB7102:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11302              		.loc 21 389 2 view .LVU2353
 11303              	.L271:
 11304              		.loc 21 395 2 view .LVU2354
 11305              		.loc 21 395 49 is_stmt 0 view .LVU2355
 11306 0280 2A46     		mov	r2, r5
 11307 0282 3946     		mov	r1, r7
 11308 0284 FFF7FEFF 		bl	memcpy
 11309              	.LVL508:
 11310              		.loc 21 395 49 view .LVU2356
 11311              	.LBE7102:
 11312              	.LBE7104:
 11313              	.LBE7106:
 11314              	.LBE7109:
 11315              	.LBE7112:
 11316              	.LBE7136:
 11317              		.loc 25 232 15 view .LVU2357
 11318 0288 139D     		ldr	r5, [sp, #76]
 11319              	.LVL509:
 11320              	.LBB7137:
 11321              	.LBB7126:
 11322              	.LBB7125:
 11323              	.LBB7123:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11324              		.loc 5 187 28 view .LVU2358
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 618


 11325 028a 069B     		ldr	r3, [sp, #24]
 11326              	.LBE7123:
 11327              	.LBE7125:
 11328              	.LBE7126:
 11329              	.LBE7137:
 11330              	.LBB7138:
 11331              	.LBB7113:
 11332              	.LBB7110:
 11333              	.LBB7107:
 11334              	.LBB7105:
 11335              	.LBB7103:
 11336              		.loc 21 395 66 view .LVU2359
 11337 028c D0E6     		b	.L273
 11338              	.LVL510:
 11339              	.L391:
 11340              		.loc 21 395 66 view .LVU2360
 11341              	.LBE7103:
 11342              	.LBE7105:
 11343              	.LBE7107:
 11344              	.LBE7110:
 11345              	.LBE7113:
 11346              	.LBE7138:
 11347              	.LBE7142:
 11348              	.LBE7147:
 11349              	.LBE7152:
 11350              	.LBE7157:
 11351              	.LBE7162:
 11352              	.LBE7171:
 11353              	.LBE7176:
 11354              	.LBE7181:
 11355              	.LBE7756:
 139:Brizachord.cpp **** 	else if (gpio_state.button_Ab.FallingEdge())    new_root = "Ab";
 11356              		.loc 1 139 7 view .LVU2361
 11357 028e 94F84033 		ldrb	r3, [r4, #832]	@ zero_extendqisi2
 11358 0292 802B     		cmp	r3, #128
 11359 0294 CDD1     		bne	.L283
 139:Brizachord.cpp **** 	else if (gpio_state.button_Ab.FallingEdge())    new_root = "Ab";
 11360              		.loc 1 139 50 is_stmt 1 view .LVU2362
 11361              	.LVL511:
 11362              	.LBB7757:
 11363              	.LBI7757:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11364              		.loc 5 675 7 view .LVU2363
 11365              	.LBB7758:
 11366              	.LBI7758:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11367              		.loc 5 1435 7 view .LVU2364
 11368              	.LBB7759:
 11369              	.LBB7760:
 11370              	.LBI7760:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11371              		.loc 5 901 7 view .LVU2365
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11372              		.loc 5 901 7 is_stmt 0 view .LVU2366
 11373              	.LBE7760:
 11374              	.LBE7759:
 11375              	.LBE7758:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 619


 11376              	.LBE7757:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11377              		.loc 21 357 2 is_stmt 1 view .LVU2367
 11378              	.LBB7763:
 11379              	.LBB7762:
 11380              	.LBB7761:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11381              		.loc 5 1438 19 is_stmt 0 view .LVU2368
 11382 0296 06AF     		add	r7, sp, #24
 11383              	.LVL512:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11384              		.loc 5 1438 19 view .LVU2369
 11385 0298 0222     		movs	r2, #2
 11386 029a 364B     		ldr	r3, .L397+8
 11387 029c 08E7     		b	.L377
 11388              	.LVL513:
 11389              	.L382:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11390              		.loc 5 1438 19 view .LVU2370
 11391              	.LBE7761:
 11392              	.LBE7762:
 11393              	.LBE7763:
 134:Brizachord.cpp **** 	else if (gpio_state.button_Eb.FallingEdge())    new_root = "Eb";
 11394              		.loc 1 134 50 is_stmt 1 view .LVU2371
 11395              	.LBB7764:
 11396              	.LBI7764:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11397              		.loc 5 675 7 view .LVU2372
 11398              	.LBB7765:
 11399              	.LBI7765:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11400              		.loc 5 1435 7 view .LVU2373
 11401              	.LBB7766:
 11402              	.LBB7767:
 11403              	.LBI7767:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11404              		.loc 5 901 7 view .LVU2374
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11405              		.loc 5 901 7 is_stmt 0 view .LVU2375
 11406              	.LBE7767:
 11407              	.LBE7766:
 11408              	.LBE7765:
 11409              	.LBE7764:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11410              		.loc 21 357 2 is_stmt 1 view .LVU2376
 11411              	.LBB7770:
 11412              	.LBB7769:
 11413              	.LBB7768:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11414              		.loc 5 1438 19 is_stmt 0 view .LVU2377
 11415 029e 06AF     		add	r7, sp, #24
 11416              	.LVL514:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11417              		.loc 5 1438 19 view .LVU2378
 11418 02a0 0222     		movs	r2, #2
 11419 02a2 354B     		ldr	r3, .L397+12
 11420 02a4 04E7     		b	.L377
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 620


 11421              	.LVL515:
 11422              	.L383:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11423              		.loc 5 1438 19 view .LVU2379
 11424              	.LBE7768:
 11425              	.LBE7769:
 11426              	.LBE7770:
 135:Brizachord.cpp **** 	else if (gpio_state.button_E.FallingEdge())     new_root = "E";
 11427              		.loc 1 135 50 is_stmt 1 view .LVU2380
 11428              	.LBB7771:
 11429              	.LBI7771:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11430              		.loc 5 675 7 view .LVU2381
 11431              	.LBB7772:
 11432              	.LBI7772:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11433              		.loc 5 1435 7 view .LVU2382
 11434              	.LBB7773:
 11435              	.LBB7774:
 11436              	.LBI7774:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11437              		.loc 5 901 7 view .LVU2383
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11438              		.loc 5 901 7 is_stmt 0 view .LVU2384
 11439              	.LBE7774:
 11440              	.LBE7773:
 11441              	.LBE7772:
 11442              	.LBE7771:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11443              		.loc 21 357 2 is_stmt 1 view .LVU2385
 11444              	.LBB7777:
 11445              	.LBB7776:
 11446              	.LBB7775:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11447              		.loc 5 1438 19 is_stmt 0 view .LVU2386
 11448 02a6 06AF     		add	r7, sp, #24
 11449              	.LVL516:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11450              		.loc 5 1438 19 view .LVU2387
 11451 02a8 0122     		movs	r2, #1
 11452 02aa 344B     		ldr	r3, .L397+16
 11453 02ac 00E7     		b	.L377
 11454              	.LVL517:
 11455              	.L384:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11456              		.loc 5 1438 19 view .LVU2388
 11457              	.LBE7775:
 11458              	.LBE7776:
 11459              	.LBE7777:
 136:Brizachord.cpp **** 	else if (gpio_state.button_F.FallingEdge())     new_root = "F";
 11460              		.loc 1 136 50 is_stmt 1 view .LVU2389
 11461              	.LBB7778:
 11462              	.LBI7778:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11463              		.loc 5 675 7 view .LVU2390
 11464              	.LBB7779:
 11465              	.LBI7779:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 621


1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11466              		.loc 5 1435 7 view .LVU2391
 11467              	.LBB7780:
 11468              	.LBB7781:
 11469              	.LBI7781:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11470              		.loc 5 901 7 view .LVU2392
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11471              		.loc 5 901 7 is_stmt 0 view .LVU2393
 11472              	.LBE7781:
 11473              	.LBE7780:
 11474              	.LBE7779:
 11475              	.LBE7778:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11476              		.loc 21 357 2 is_stmt 1 view .LVU2394
 11477              	.LBB7784:
 11478              	.LBB7783:
 11479              	.LBB7782:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11480              		.loc 5 1438 19 is_stmt 0 view .LVU2395
 11481 02ae 06AF     		add	r7, sp, #24
 11482              	.LVL518:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11483              		.loc 5 1438 19 view .LVU2396
 11484 02b0 0122     		movs	r2, #1
 11485 02b2 334B     		ldr	r3, .L397+20
 11486 02b4 FCE6     		b	.L377
 11487              	.LVL519:
 11488              	.L385:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11489              		.loc 5 1438 19 view .LVU2397
 11490 02b6 069D     		ldr	r5, [sp, #24]
 11491              	.LVL520:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11492              		.loc 5 1438 19 view .LVU2398
 11493              	.LBE7782:
 11494              	.LBE7783:
 11495              	.LBE7784:
 11496              	.LBB7785:
 11497              	.LBB7700:
 11498              	.LBB7223:
 11499              	.LBB7222:
 11500              	.LBB7221:
 11501              	.LBB7219:
 11502              	.LBI7219:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11503              		.loc 21 337 7 is_stmt 1 view .LVU2399
 11504              	.LBB7220:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 11505              		.loc 21 339 2 view .LVU2400
 11506 02b8 002A     		cmp	r2, #0
 11507 02ba A0D0     		beq	.L290
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11508              		.loc 21 347 2 view .LVU2401
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11509              		.loc 21 347 25 is_stmt 0 view .LVU2402
 11510 02bc D4F88410 		ldr	r1, [r4, #132]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 622


 11511 02c0 2846     		mov	r0, r5
 11512 02c2 FFF7FEFF 		bl	memcmp
 11513              	.LVL521:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11514              		.loc 21 347 25 view .LVU2403
 11515              	.LBE7220:
 11516              	.LBE7219:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 11517              		.loc 5 6174 8 view .LVU2404
 11518 02c6 0028     		cmp	r0, #0
 11519 02c8 99D0     		beq	.L290
 11520 02ca FDE6     		b	.L289
 11521              	.LVL522:
 11522              	.L379:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 11523              		.loc 5 6174 8 view .LVU2405
 11524              	.LBE7221:
 11525              	.LBE7222:
 11526              	.LBE7223:
 11527              	.LBE7700:
 11528              	.LBE7785:
 131:Brizachord.cpp **** 	if      (gpio_state.button_C.FallingEdge())     new_root = "C";
 11529              		.loc 1 131 50 is_stmt 1 view .LVU2406
 11530              	.LBB7786:
 11531              	.LBI7786:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11532              		.loc 5 675 7 view .LVU2407
 11533              	.LBB7787:
 11534              	.LBI7787:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11535              		.loc 5 1435 7 view .LVU2408
 11536              	.LBB7788:
 11537              	.LBB7789:
 11538              	.LBI7789:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11539              		.loc 5 901 7 view .LVU2409
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11540              		.loc 5 901 7 is_stmt 0 view .LVU2410
 11541              	.LBE7789:
 11542              	.LBE7788:
 11543              	.LBE7787:
 11544              	.LBE7786:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11545              		.loc 21 357 2 is_stmt 1 view .LVU2411
 11546              	.LBB7792:
 11547              	.LBB7791:
 11548              	.LBB7790:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11549              		.loc 5 1438 19 is_stmt 0 view .LVU2412
 11550 02cc 06AF     		add	r7, sp, #24
 11551              	.LVL523:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11552              		.loc 5 1438 19 view .LVU2413
 11553 02ce 0123     		movs	r3, #1
 11554 02d0 079A     		ldr	r2, [sp, #28]
 11555 02d2 0093     		str	r3, [sp]
 11556 02d4 3846     		mov	r0, r7
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 623


 11557 02d6 2B4B     		ldr	r3, .L397+24
 11558 02d8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 11559              	.LVL524:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 11560              		.loc 5 1439 30 view .LVU2414
 11561 02dc EEE6     		b	.L275
 11562              	.LVL525:
 11563              	.L380:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 11564              		.loc 5 1439 30 view .LVU2415
 11565              	.LBE7790:
 11566              	.LBE7791:
 11567              	.LBE7792:
 132:Brizachord.cpp **** 	else if (gpio_state.button_Db.FallingEdge())    new_root = "Db";
 11568              		.loc 1 132 50 is_stmt 1 view .LVU2416
 11569              	.LBB7793:
 11570              	.LBI7793:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11571              		.loc 5 675 7 view .LVU2417
 11572              	.LBB7794:
 11573              	.LBI7794:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11574              		.loc 5 1435 7 view .LVU2418
 11575              	.LBB7795:
 11576              	.LBB7796:
 11577              	.LBI7796:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11578              		.loc 5 901 7 view .LVU2419
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11579              		.loc 5 901 7 is_stmt 0 view .LVU2420
 11580              	.LBE7796:
 11581              	.LBE7795:
 11582              	.LBE7794:
 11583              	.LBE7793:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11584              		.loc 21 357 2 is_stmt 1 view .LVU2421
 11585              	.LBB7799:
 11586              	.LBB7798:
 11587              	.LBB7797:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11588              		.loc 5 1438 19 is_stmt 0 view .LVU2422
 11589 02de 06AF     		add	r7, sp, #24
 11590              	.LVL526:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11591              		.loc 5 1438 19 view .LVU2423
 11592 02e0 0222     		movs	r2, #2
 11593 02e2 294B     		ldr	r3, .L397+28
 11594 02e4 E4E6     		b	.L377
 11595              	.LVL527:
 11596              	.L313:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11597              		.loc 5 1438 19 view .LVU2424
 11598              	.LBE7797:
 11599              	.LBE7798:
 11600              	.LBE7799:
 11601              	.LBB7800:
 11602              	.LBB7701:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 624


 11603              	.LBB7693:
 11604              	.LBB7647:
 11605              	.LBB7643:
 11606              	.LBB7577:
 11607              	.LBB7570:
 11608              	.LBB7564:
 11609              	.LBB7561:
 11610 02e6 A846     		mov	r8, r5
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11611              		.loc 14 346 18 view .LVU2425
 11612 02e8 2B46     		mov	r3, r5
 11613 02ea 69E7     		b	.L304
 11614              	.LVL528:
 11615              	.L381:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11616              		.loc 14 346 18 view .LVU2426
 11617              	.LBE7561:
 11618              	.LBE7564:
 11619              	.LBE7570:
 11620              	.LBE7577:
 11621              	.LBE7643:
 11622              	.LBE7647:
 11623              	.LBE7693:
 11624              	.LBE7701:
 11625              	.LBE7800:
 133:Brizachord.cpp **** 	else if (gpio_state.button_D.FallingEdge())     new_root = "D";
 11626              		.loc 1 133 50 is_stmt 1 view .LVU2427
 11627              	.LBB7801:
 11628              	.LBI7801:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11629              		.loc 5 675 7 view .LVU2428
 11630              	.LBB7802:
 11631              	.LBI7802:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11632              		.loc 5 1435 7 view .LVU2429
 11633              	.LBB7803:
 11634              	.LBB7804:
 11635              	.LBI7804:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11636              		.loc 5 901 7 view .LVU2430
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11637              		.loc 5 901 7 is_stmt 0 view .LVU2431
 11638              	.LBE7804:
 11639              	.LBE7803:
 11640              	.LBE7802:
 11641              	.LBE7801:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11642              		.loc 21 357 2 is_stmt 1 view .LVU2432
 11643              	.LBB7807:
 11644              	.LBB7806:
 11645              	.LBB7805:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11646              		.loc 5 1438 19 is_stmt 0 view .LVU2433
 11647 02ec 06AF     		add	r7, sp, #24
 11648              	.LVL529:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11649              		.loc 5 1438 19 view .LVU2434
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 625


 11650 02ee 0122     		movs	r2, #1
 11651 02f0 264B     		ldr	r3, .L397+32
 11652 02f2 DDE6     		b	.L377
 11653              	.LVL530:
 11654              	.L301:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 11655              		.loc 5 1438 19 view .LVU2435
 11656              	.LBE7805:
 11657              	.LBE7806:
 11658              	.LBE7807:
 11659              	.LBB7808:
 11660              	.LBB7702:
 11661              	.LBB7694:
 11662              	.LBB7511:
 11663              	.LBB7506:
 11664              	.LBB7501:
 11665              	.LBB7496:
 11666              	.LBB7491:
 11667              	.LBB7486:
 11668              	.LBB7482:
 11669              	.LBB7478:
 11670              	.LBB7474:
 11671              	.LBB7470:
 11672              	.LBB7466:
 11673              	.LBB7452:
 11674              	.LBB7432:
 11675              	.LBB7429:
 11676              	.LBB7420:
 11677              	.LBI7420:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11678              		.loc 5 346 7 is_stmt 1 view .LVU2436
 11679              	.LBB7421:
 11680              	.LBI7421:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11681              		.loc 21 387 7 view .LVU2437
 11682              	.LBB7422:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11683              		.loc 21 389 2 view .LVU2438
 11684 02f4 002D     		cmp	r5, #0
 11685 02f6 59D1     		bne	.L395
 11686 02f8 4246     		mov	r2, r8
 11687 02fa 13AF     		add	r7, sp, #76
 11688              	.LVL531:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11689              		.loc 21 389 2 is_stmt 0 view .LVU2439
 11690 02fc 37E7     		b	.L302
 11691              	.LVL532:
 11692              	.L295:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11693              		.loc 21 389 2 view .LVU2440
 11694              	.LBE7422:
 11695              	.LBE7421:
 11696              	.LBE7420:
 11697              	.LBE7429:
 11698              	.LBE7432:
 11699              	.LBE7452:
 11700              	.LBE7466:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 626


 11701              	.LBE7470:
 11702              	.LBE7474:
 11703              	.LBE7478:
 11704              	.LBE7482:
 11705              	.LBE7486:
 11706              	.LBE7491:
 11707              	.LBE7496:
 11708              	.LBE7501:
 11709              	.LBE7506:
 11710              	.LBE7511:
 11711              	.LBE7694:
 11712              	.LBB7695:
 11713              	.LBB7356:
 11714              	.LBB7353:
 11715              	.LBB7350:
 11716              	.LBB7347:
 11717              	.LBB7344:
 11718              	.LBB7341:
 11719              	.LBB7331:
 11720              	.LBB7327:
 11721              	.LBB7323:
 11722              	.LBB7319:
 11723              	.LBB7315:
 11724              	.LBB7300:
 11725              	.LBB7280:
 11726              	.LBB7277:
 11727              	.LBB7268:
 11728              	.LBI7268:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11729              		.loc 5 346 7 is_stmt 1 view .LVU2441
 11730              	.LBB7269:
 11731              	.LBI7269:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11732              		.loc 21 387 7 view .LVU2442
 11733              	.LBB7270:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11734              		.loc 21 389 2 view .LVU2443
 11735 02fe 002D     		cmp	r5, #0
 11736 0300 59D1     		bne	.L396
 11737 0302 3A46     		mov	r2, r7
 11738 0304 0DF1300A 		add	r10, sp, #48
 11739              	.LVL533:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11740              		.loc 21 389 2 is_stmt 0 view .LVU2444
 11741 0308 01E7     		b	.L296
 11742              	.LVL534:
 11743              	.L386:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11744              		.loc 21 389 2 view .LVU2445
 11745              	.LBE7270:
 11746              	.LBE7269:
 11747              	.LBE7268:
 11748              	.LBE7277:
 11749              	.LBE7280:
 11750              	.LBE7300:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11751              		.loc 25 219 13 view .LVU2446
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 627


 11752 030a 0DF1300A 		add	r10, sp, #48
 11753              	.LVL535:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11754              		.loc 25 219 13 view .LVU2447
 11755 030e 0022     		movs	r2, #0
 11756 0310 13A9     		add	r1, sp, #76
 11757 0312 5046     		mov	r0, r10
 11758 0314 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11759              	.LVL536:
 11760              	.LBB7301:
 11761              	.LBI7301:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11762              		.loc 5 178 7 is_stmt 1 view .LVU2448
 11763              	.LBE7301:
 11764              	.LBB7303:
 11765              	.LBB7304:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11766              		.loc 5 211 31 is_stmt 0 view .LVU2449
 11767 0318 139B     		ldr	r3, [sp, #76]
 11768              	.LBE7304:
 11769              	.LBE7303:
 11770              	.LBB7306:
 11771              	.LBB7302:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11772              		.loc 5 179 26 view .LVU2450
 11773 031a 0C90     		str	r0, [sp, #48]
 11774              	.LVL537:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11775              		.loc 5 179 26 view .LVU2451
 11776              	.LBE7302:
 11777              	.LBE7306:
 11778              	.LBB7307:
 11779              	.LBI7303:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11780              		.loc 5 210 7 is_stmt 1 view .LVU2452
 11781              	.LBB7305:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11782              		.loc 5 211 31 is_stmt 0 view .LVU2453
 11783 031c 0E93     		str	r3, [sp, #56]
 11784              	.LVL538:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11785              		.loc 5 211 31 view .LVU2454
 11786              	.LBE7305:
 11787              	.LBE7307:
 11788              	.LBB7308:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11789              		.loc 5 186 7 is_stmt 1 view .LVU2455
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11790              		.loc 5 186 7 is_stmt 0 view .LVU2456
 11791              	.LBE7308:
 11792              	.LBB7309:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11793              		.loc 5 392 7 is_stmt 1 view .LVU2457
 11794              	.LBB7281:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11795              		.loc 5 346 7 view .LVU2458
 11796              	.LBB7278:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 628


 11797              	.LBB7275:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11798              		.loc 5 346 7 view .LVU2459
 11799              	.LBB7273:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11800              		.loc 21 387 7 view .LVU2460
 11801              	.LBB7271:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11802              		.loc 21 389 2 view .LVU2461
 11803              	.L294:
 11804              		.loc 21 395 2 view .LVU2462
 11805              		.loc 21 395 49 is_stmt 0 view .LVU2463
 11806 031e 2A46     		mov	r2, r5
 11807 0320 4146     		mov	r1, r8
 11808 0322 FFF7FEFF 		bl	memcpy
 11809              	.LVL539:
 11810              		.loc 21 395 49 view .LVU2464
 11811              	.LBE7271:
 11812              	.LBE7273:
 11813              	.LBE7275:
 11814              	.LBE7278:
 11815              	.LBE7281:
 11816              	.LBE7309:
 11817              		.loc 25 232 15 view .LVU2465
 11818 0326 139D     		ldr	r5, [sp, #76]
 11819              	.LVL540:
 11820              	.LBB7310:
 11821              	.LBB7298:
 11822              	.LBB7296:
 11823              	.LBB7293:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11824              		.loc 5 187 28 view .LVU2466
 11825 0328 0C9A     		ldr	r2, [sp, #48]
 11826              	.LBE7293:
 11827              	.LBE7296:
 11828              	.LBE7298:
 11829              	.LBE7310:
 11830              	.LBB7311:
 11831              	.LBB7282:
 11832              	.LBB7279:
 11833              	.LBB7276:
 11834              	.LBB7274:
 11835              	.LBB7272:
 11836              		.loc 21 395 66 view .LVU2467
 11837 032a F0E6     		b	.L296
 11838              	.LVL541:
 11839              	.L387:
 11840              		.loc 21 395 66 view .LVU2468
 11841              	.LBE7272:
 11842              	.LBE7274:
 11843              	.LBE7276:
 11844              	.LBE7279:
 11845              	.LBE7282:
 11846              	.LBE7311:
 11847              	.LBE7315:
 11848              	.LBE7319:
 11849              	.LBE7323:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 629


 11850              	.LBE7327:
 11851              	.LBE7331:
 11852              	.LBE7341:
 11853              	.LBE7344:
 11854              	.LBE7347:
 11855              	.LBE7350:
 11856              	.LBE7353:
 11857              	.LBE7356:
 11858              	.LBE7695:
 11859              	.LBB7696:
 11860              	.LBB7512:
 11861              	.LBB7507:
 11862              	.LBB7502:
 11863              	.LBB7497:
 11864              	.LBB7492:
 11865              	.LBB7487:
 11866              	.LBB7483:
 11867              	.LBB7479:
 11868              	.LBB7475:
 11869              	.LBB7471:
 11870              	.LBB7467:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11871              		.loc 25 219 13 view .LVU2469
 11872 032c 13AF     		add	r7, sp, #76
 11873              	.LVL542:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11874              		.loc 25 219 13 view .LVU2470
 11875 032e 5146     		mov	r1, r10
 11876 0330 0022     		movs	r2, #0
 11877 0332 3846     		mov	r0, r7
 11878 0334 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11879              	.LVL543:
 11880              	.LBB7453:
 11881              	.LBI7453:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11882              		.loc 5 178 7 is_stmt 1 view .LVU2471
 11883              	.LBE7453:
 11884              	.LBB7455:
 11885              	.LBB7456:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11886              		.loc 5 211 31 is_stmt 0 view .LVU2472
 11887 0338 0C9B     		ldr	r3, [sp, #48]
 11888              	.LBE7456:
 11889              	.LBE7455:
 11890              	.LBB7458:
 11891              	.LBB7454:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11892              		.loc 5 179 26 view .LVU2473
 11893 033a 1390     		str	r0, [sp, #76]
 11894              	.LVL544:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11895              		.loc 5 179 26 view .LVU2474
 11896              	.LBE7454:
 11897              	.LBE7458:
 11898              	.LBB7459:
 11899              	.LBI7455:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 630


 11900              		.loc 5 210 7 is_stmt 1 view .LVU2475
 11901              	.LBB7457:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11902              		.loc 5 211 31 is_stmt 0 view .LVU2476
 11903 033c 1593     		str	r3, [sp, #84]
 11904              	.LVL545:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11905              		.loc 5 211 31 view .LVU2477
 11906              	.LBE7457:
 11907              	.LBE7459:
 11908              	.LBB7460:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11909              		.loc 5 186 7 is_stmt 1 view .LVU2478
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11910              		.loc 5 186 7 is_stmt 0 view .LVU2479
 11911              	.LBE7460:
 11912              	.LBB7461:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11913              		.loc 5 392 7 is_stmt 1 view .LVU2480
 11914              	.LBB7433:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11915              		.loc 5 346 7 view .LVU2481
 11916              	.LBB7430:
 11917              	.LBB7427:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11918              		.loc 5 346 7 view .LVU2482
 11919              	.LBB7425:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11920              		.loc 21 387 7 view .LVU2483
 11921              	.LBB7423:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11922              		.loc 21 389 2 view .LVU2484
 11923              	.L300:
 11924              		.loc 21 395 2 view .LVU2485
 11925              		.loc 21 395 49 is_stmt 0 view .LVU2486
 11926 033e 2A46     		mov	r2, r5
 11927 0340 4946     		mov	r1, r9
 11928 0342 FFF7FEFF 		bl	memcpy
 11929              	.LVL546:
 11930              		.loc 21 395 49 view .LVU2487
 11931              	.LBE7423:
 11932              	.LBE7425:
 11933              	.LBE7427:
 11934              	.LBE7430:
 11935              	.LBE7433:
 11936              	.LBE7461:
 11937              		.loc 25 232 15 view .LVU2488
 11938 0346 0C9D     		ldr	r5, [sp, #48]
 11939              	.LVL547:
 11940              	.LBB7462:
 11941              	.LBB7450:
 11942              	.LBB7448:
 11943              	.LBB7445:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11944              		.loc 5 187 28 view .LVU2489
 11945 0348 139A     		ldr	r2, [sp, #76]
 11946              	.LBE7445:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 631


 11947              	.LBE7448:
 11948              	.LBE7450:
 11949              	.LBE7462:
 11950              	.LBB7463:
 11951              	.LBB7434:
 11952              	.LBB7431:
 11953              	.LBB7428:
 11954              	.LBB7426:
 11955              	.LBB7424:
 11956              		.loc 21 395 66 view .LVU2490
 11957 034a 10E7     		b	.L302
 11958              	.LVL548:
 11959              	.L390:
 11960              		.loc 21 395 66 view .LVU2491
 11961              	.LBE7424:
 11962              	.LBE7426:
 11963              	.LBE7428:
 11964              	.LBE7431:
 11965              	.LBE7434:
 11966              	.LBE7463:
 11967              	.LBE7467:
 11968              	.LBE7471:
 11969              	.LBE7475:
 11970              	.LBE7479:
 11971              	.LBE7483:
 11972              	.LBE7487:
 11973              	.LBE7492:
 11974              	.LBE7497:
 11975              	.LBE7502:
 11976              	.LBE7507:
 11977              	.LBE7512:
 11978              	.LBE7696:
 11979              	.LBE7702:
 11980              	.LBE7808:
 138:Brizachord.cpp **** 	else if (gpio_state.button_G.FallingEdge())     new_root = "G";
 11981              		.loc 1 138 50 is_stmt 1 view .LVU2492
 11982              	.LBB7809:
 11983              	.LBI7809:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 11984              		.loc 5 675 7 view .LVU2493
 11985              	.LBB7810:
 11986              	.LBI7810:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11987              		.loc 5 1435 7 view .LVU2494
 11988              	.LBB7811:
 11989              	.LBB7812:
 11990              	.LBI7812:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11991              		.loc 5 901 7 view .LVU2495
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11992              		.loc 5 901 7 is_stmt 0 view .LVU2496
 11993              	.LBE7812:
 11994              	.LBE7811:
 11995              	.LBE7810:
 11996              	.LBE7809:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11997              		.loc 21 357 2 is_stmt 1 view .LVU2497
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 632


 11998              	.LBB7815:
 11999              	.LBB7814:
 12000              	.LBB7813:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12001              		.loc 5 1438 19 is_stmt 0 view .LVU2498
 12002 034c 06AF     		add	r7, sp, #24
 12003              	.LVL549:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12004              		.loc 5 1438 19 view .LVU2499
 12005 034e 0122     		movs	r2, #1
 12006 0350 0F4B     		ldr	r3, .L397+36
 12007 0352 ADE6     		b	.L377
 12008              	.LVL550:
 12009              	.L394:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12010              		.loc 5 1438 19 view .LVU2500
 12011              	.LBE7813:
 12012              	.LBE7814:
 12013              	.LBE7815:
 142:Brizachord.cpp **** 	else if (gpio_state.button_B.FallingEdge())     new_root = "B";
 12014              		.loc 1 142 50 is_stmt 1 view .LVU2501
 12015              	.LBB7816:
 12016              	.LBI7206:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 12017              		.loc 5 675 7 view .LVU2502
 12018              	.LBB7212:
 12019              	.LBI7207:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12020              		.loc 5 1435 7 view .LVU2503
 12021              	.LBB7210:
 12022              	.LBB7209:
 12023              	.LBI7209:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12024              		.loc 5 901 7 view .LVU2504
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12025              		.loc 5 901 7 is_stmt 0 view .LVU2505
 12026              	.LBE7209:
 12027              	.LBE7210:
 12028              	.LBE7212:
 12029              	.LBE7816:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12030              		.loc 21 357 2 is_stmt 1 view .LVU2506
 12031              	.LBB7817:
 12032              	.LBB7213:
 12033              	.LBB7211:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12034              		.loc 5 1438 19 is_stmt 0 view .LVU2507
 12035 0354 06AF     		add	r7, sp, #24
 12036              	.LVL551:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12037              		.loc 5 1438 19 view .LVU2508
 12038 0356 0122     		movs	r2, #1
 12039 0358 0E4B     		ldr	r3, .L397+40
 12040 035a A9E6     		b	.L377
 12041              	.LVL552:
 12042              	.L291:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 633


 12043              		.loc 5 1438 19 view .LVU2509
 12044              	.LBE7211:
 12045              	.LBE7213:
 12046              	.LBE7817:
 12047              	.LBB7818:
 12048              	.LBB7182:
 12049              	.LBB7177:
 12050              	.LBB7172:
 12051              	.LBB7163:
 12052              	.LBB7158:
 12053              	.LBB7153:
 12054              	.LBB7148:
 12055              	.LBB7143:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12056              		.loc 25 212 28 view .LVU2510
 12057 035c 0E48     		ldr	r0, .L397+44
 12058 035e FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 12059              	.LVL553:
 12060              	.L392:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12061              		.loc 25 212 28 view .LVU2511
 12062              	.LBE7143:
 12063              	.LBE7148:
 12064              	.LBE7153:
 12065              	.LBE7158:
 12066              	.LBE7163:
 12067              	.LBE7172:
 12068              	.LBE7177:
 12069              	.LBE7182:
 12070              	.LBE7818:
 140:Brizachord.cpp **** 	else if (gpio_state.button_A.FallingEdge())     new_root = "A";
 12071              		.loc 1 140 50 is_stmt 1 view .LVU2512
 12072              	.LBB7819:
 12073              	.LBI7819:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 12074              		.loc 5 675 7 view .LVU2513
 12075              	.LBB7820:
 12076              	.LBI7820:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12077              		.loc 5 1435 7 view .LVU2514
 12078              	.LBB7821:
 12079              	.LBB7822:
 12080              	.LBI7822:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12081              		.loc 5 901 7 view .LVU2515
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12082              		.loc 5 901 7 is_stmt 0 view .LVU2516
 12083              	.LBE7822:
 12084              	.LBE7821:
 12085              	.LBE7820:
 12086              	.LBE7819:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12087              		.loc 21 357 2 is_stmt 1 view .LVU2517
 12088              	.LBB7825:
 12089              	.LBB7824:
 12090              	.LBB7823:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 634


 12091              		.loc 5 1438 19 is_stmt 0 view .LVU2518
 12092 0362 06AF     		add	r7, sp, #24
 12093              	.LVL554:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12094              		.loc 5 1438 19 view .LVU2519
 12095 0364 0122     		movs	r2, #1
 12096 0366 0D4B     		ldr	r3, .L397+48
 12097 0368 A2E6     		b	.L377
 12098              	.L398:
 12099 036a 00BF     		.align	2
 12100              	.L397:
 12101 036c 18000000 		.word	.LC9
 12102 0370 FCFFFF7F 		.word	2147483644
 12103 0374 20000000 		.word	.LC11
 12104 0378 0C000000 		.word	.LC6
 12105 037c 10000000 		.word	.LC7
 12106 0380 14000000 		.word	.LC8
 12107 0384 00000000 		.word	.LC3
 12108 0388 04000000 		.word	.LC4
 12109 038c 08000000 		.word	.LC5
 12110 0390 1C000000 		.word	.LC10
 12111 0394 2C000000 		.word	.LC14
 12112 0398 00000000 		.word	.LC1
 12113 039c 24000000 		.word	.LC12
 12114              	.LVL555:
 12115              	.L393:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12116              		.loc 5 1438 19 view .LVU2520
 12117              	.LBE7823:
 12118              	.LBE7824:
 12119              	.LBE7825:
 141:Brizachord.cpp **** 	else if (gpio_state.button_Bb.FallingEdge())    new_root = "Bb";
 12120              		.loc 1 141 50 is_stmt 1 view .LVU2521
 12121              	.LBB7826:
 12122              	.LBI7826:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 12123              		.loc 5 675 7 view .LVU2522
 12124              	.LBB7827:
 12125              	.LBI7827:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12126              		.loc 5 1435 7 view .LVU2523
 12127              	.LBB7828:
 12128              	.LBB7829:
 12129              	.LBI7829:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12130              		.loc 5 901 7 view .LVU2524
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12131              		.loc 5 901 7 is_stmt 0 view .LVU2525
 12132              	.LBE7829:
 12133              	.LBE7828:
 12134              	.LBE7827:
 12135              	.LBE7826:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12136              		.loc 21 357 2 is_stmt 1 view .LVU2526
 12137              	.LBB7832:
 12138              	.LBB7831:
 12139              	.LBB7830:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 635


1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12140              		.loc 5 1438 19 is_stmt 0 view .LVU2527
 12141 03a0 06AF     		add	r7, sp, #24
 12142              	.LVL556:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12143              		.loc 5 1438 19 view .LVU2528
 12144 03a2 0222     		movs	r2, #2
 12145 03a4 064B     		ldr	r3, .L399
 12146 03a6 83E6     		b	.L377
 12147              	.LVL557:
 12148              	.L388:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 12149              		.loc 5 1438 19 view .LVU2529
 12150              	.LBE7830:
 12151              	.LBE7831:
 12152              	.LBE7832:
 12153              	.LBB7833:
 12154              	.LBB7703:
 12155              	.LBB7697:
 12156              	.LBB7648:
 12157              	.LBB7644:
 12158              	.LBB7578:
 12159              	.LBB7571:
 12160              	.LBB7565:
 12161              	.LBB7562:
 12162              	.LBB7559:
 12163              	.LBB7558:
 12164              	.LBB7557:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12165              		.loc 7 106 26 view .LVU2530
 12166 03a8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 12167              	.LVL558:
 12168              	.L395:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12169              		.loc 7 106 26 view .LVU2531
 12170              	.LBE7557:
 12171              	.LBE7558:
 12172              	.LBE7559:
 12173              	.LBE7562:
 12174              	.LBE7565:
 12175              	.LBE7571:
 12176              	.LBE7578:
 12177              	.LBE7644:
 12178              	.LBE7648:
 12179              	.LBE7697:
 12180              	.LBB7698:
 12181              	.LBB7513:
 12182              	.LBB7508:
 12183              	.LBB7503:
 12184              	.LBB7498:
 12185              	.LBB7493:
 12186              	.LBB7488:
 12187              	.LBB7484:
 12188              	.LBB7480:
 12189              	.LBB7476:
 12190              	.LBB7472:
 12191              	.LBB7468:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 636


 12192              	.LBB7464:
 12193              	.LBB7414:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12194              		.loc 5 187 28 view .LVU2532
 12195 03ac 4046     		mov	r0, r8
 12196 03ae 13AF     		add	r7, sp, #76
 12197              	.LVL559:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12198              		.loc 5 187 28 view .LVU2533
 12199 03b0 C5E7     		b	.L300
 12200              	.LVL560:
 12201              	.L389:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12202              		.loc 5 187 28 view .LVU2534
 12203              	.LBE7414:
 12204              	.LBE7464:
 12205              	.LBE7468:
 12206              	.LBE7472:
 12207              	.LBE7476:
 12208              	.LBE7480:
 12209              	.LBE7484:
 12210              	.LBE7488:
 12211              	.LBE7493:
 12212              	.LBE7498:
 12213              	.LBE7503:
 12214              	.LBE7508:
 12215              	.LBE7513:
 12216              	.LBE7698:
 12217              	.LBE7703:
 12218              	.LBE7833:
 12219              	.LBB7834:
 12220              	.LBB7183:
 12221              	.LBB7178:
 12222              	.LBB7173:
 12223              	.LBB7164:
 12224              	.LBB7159:
 12225              	.LBB7154:
 12226              	.LBB7149:
 12227              	.LBB7144:
 12228              	.LBB7139:
 12229              	.LBB7093:
 12230 03b2 3046     		mov	r0, r6
 12231              	.LVL561:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12232              		.loc 5 187 28 view .LVU2535
 12233 03b4 64E7     		b	.L271
 12234              	.LVL562:
 12235              	.L396:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12236              		.loc 5 187 28 view .LVU2536
 12237              	.LBE7093:
 12238              	.LBE7139:
 12239              	.LBE7144:
 12240              	.LBE7149:
 12241              	.LBE7154:
 12242              	.LBE7159:
 12243              	.LBE7164:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 637


 12244              	.LBE7173:
 12245              	.LBE7178:
 12246              	.LBE7183:
 12247              	.LBE7834:
 12248              	.LBB7835:
 12249              	.LBB7704:
 12250              	.LBB7699:
 12251              	.LBB7357:
 12252              	.LBB7354:
 12253              	.LBB7351:
 12254              	.LBB7348:
 12255              	.LBB7345:
 12256              	.LBB7342:
 12257              	.LBB7332:
 12258              	.LBB7328:
 12259              	.LBB7324:
 12260              	.LBB7320:
 12261              	.LBB7316:
 12262              	.LBB7312:
 12263              	.LBB7262:
 12264 03b6 3846     		mov	r0, r7
 12265 03b8 0DF1300A 		add	r10, sp, #48
 12266              	.LVL563:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12267              		.loc 5 187 28 view .LVU2537
 12268 03bc AFE7     		b	.L294
 12269              	.L400:
 12270 03be 00BF     		.align	2
 12271              	.L399:
 12272 03c0 28000000 		.word	.LC13
 12273              	.LBE7262:
 12274              	.LBE7312:
 12275              	.LBE7316:
 12276              	.LBE7320:
 12277              	.LBE7324:
 12278              	.LBE7328:
 12279              	.LBE7332:
 12280              	.LBE7342:
 12281              	.LBE7345:
 12282              	.LBE7348:
 12283              	.LBE7351:
 12284              	.LBE7354:
 12285              	.LBE7357:
 12286              	.LBE7699:
 12287              	.LBE7704:
 12288              	.LBE7835:
 12289              		.cfi_endproc
 12290              	.LFE5612:
 12292              		.section	.text._ZN10Brizachord15poll_chord_qualEv,"ax",%progbits
 12293              		.align	1
 12294              		.p2align 2,,3
 12295              		.global	_ZN10Brizachord15poll_chord_qualEv
 12296              		.syntax unified
 12297              		.thumb
 12298              		.thumb_func
 12299              		.fpu fpv5-d16
 12301              	_ZN10Brizachord15poll_chord_qualEv:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 638


 12302              	.LVL564:
 12303              	.LFB5613:
 167:Brizachord.cpp **** void Brizachord::poll_chord_qual() {
 12304              		.loc 1 167 36 is_stmt 1 view -0
 12305              		.cfi_startproc
 12306              		@ args = 0, pretend = 0, frame = 72
 12307              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 12308              		.loc 1 169 2 view .LVU2539
 12309              	.LBB8094:
 12310              	.LBB8095:
 12311              		.loc 11 70 16 is_stmt 0 view .LVU2540
 12312 0000 90F87831 		ldrb	r3, [r0, #376]	@ zero_extendqisi2
 12313              	.LBE8095:
 12314              	.LBE8094:
 167:Brizachord.cpp **** void Brizachord::poll_chord_qual() {
 12315              		.loc 1 167 36 view .LVU2541
 12316 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 12317              		.cfi_def_cfa_offset 32
 12318              		.cfi_offset 4, -32
 12319              		.cfi_offset 5, -28
 12320              		.cfi_offset 6, -24
 12321              		.cfi_offset 7, -20
 12322              		.cfi_offset 8, -16
 12323              		.cfi_offset 9, -12
 12324              		.cfi_offset 10, -8
 12325              		.cfi_offset 14, -4
 12326 0008 0446     		mov	r4, r0
 12327              	.LVL565:
 12328              	.LBB8098:
 12329              	.LBI8094:
  68:../../libDaisy//src/hid/switch.h ****     {
 12330              		.loc 11 68 17 is_stmt 1 view .LVU2542
 12331              	.LBB8096:
 12332              		.loc 11 70 9 view .LVU2543
 12333              	.LBE8096:
 12334              	.LBE8098:
 167:Brizachord.cpp **** void Brizachord::poll_chord_qual() {
 12335              		.loc 1 167 36 is_stmt 0 view .LVU2544
 12336 000a 92B0     		sub	sp, sp, #72
 12337              		.cfi_def_cfa_offset 104
 12338              	.LBB8099:
 12339              	.LBB8097:
 12340              		.loc 11 70 25 view .LVU2545
 12341 000c 002B     		cmp	r3, #0
 12342 000e 00F0B280 		beq	.L402
 12343              	.LVL566:
 12344              		.loc 11 70 25 view .LVU2546
 12345              	.LBE8097:
 12346              	.LBE8099:
 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 12347              		.loc 1 169 2 view .LVU2547
 12348 0012 90F89021 		ldrb	r2, [r0, #400]	@ zero_extendqisi2
 12349 0016 802A     		cmp	r2, #128
 12350 0018 40F0AD80 		bne	.L402
 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 12351              		.loc 1 169 50 is_stmt 1 discriminator 1 view .LVU2548
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 639


 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 12352              		.loc 1 169 82 is_stmt 0 discriminator 1 view .LVU2549
 12353 001c 0023     		movs	r3, #0
 12354              	.LBB8100:
 12355              	.LBB8101:
 12356              		.loc 11 70 16 discriminator 1 view .LVU2550
 12357 001e 90F89C21 		ldrb	r2, [r0, #412]	@ zero_extendqisi2
 12358              	.LBE8101:
 12359              	.LBE8100:
 169:Brizachord.cpp **** 	if (gpio_state.button_maj.FallingEdge())        instrument_state.queued_quality = MAJOR;
 12360              		.loc 1 169 82 discriminator 1 view .LVU2551
 12361 0022 80F8A030 		strb	r3, [r0, #160]
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 12362              		.loc 1 176 2 is_stmt 1 discriminator 1 view .LVU2552
 12363              	.LVL567:
 12364              	.LBB8103:
 12365              	.LBI8103:
  65:../../libDaisy//src/hid/switch.h **** 
 12366              		.loc 11 65 17 discriminator 1 view .LVU2553
 12367              	.LBB8104:
  65:../../libDaisy//src/hid/switch.h **** 
 12368              		.loc 11 65 38 discriminator 1 view .LVU2554
 12369              	.L403:
  65:../../libDaisy//src/hid/switch.h **** 
 12370              		.loc 11 65 38 is_stmt 0 discriminator 1 view .LVU2555
 12371              	.LBE8104:
 12372              	.LBE8103:
 12373              	.LBB8108:
 12374              	.LBI8108:
  65:../../libDaisy//src/hid/switch.h **** 
 12375              		.loc 11 65 17 is_stmt 1 discriminator 1 view .LVU2556
 12376              	.LBB8109:
  65:../../libDaisy//src/hid/switch.h **** 
 12377              		.loc 11 65 38 discriminator 1 view .LVU2557
  65:../../libDaisy//src/hid/switch.h **** 
 12378              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU2558
 12379 0026 002A     		cmp	r2, #0
 12380 0028 40F0D080 		bne	.L484
 12381              	.LVL568:
 12382              	.L406:
  65:../../libDaisy//src/hid/switch.h **** 
 12383              		.loc 11 65 54 discriminator 1 view .LVU2559
 12384              	.LBE8109:
 12385              	.LBE8108:
 12386              	.LBB8111:
 12387              	.LBI8111:
  65:../../libDaisy//src/hid/switch.h **** 
 12388              		.loc 11 65 17 is_stmt 1 view .LVU2560
 12389              	.LBB8112:
  65:../../libDaisy//src/hid/switch.h **** 
 12390              		.loc 11 65 38 view .LVU2561
  65:../../libDaisy//src/hid/switch.h **** 
 12391              		.loc 11 65 54 is_stmt 0 view .LVU2562
 12392 002c 94F8C031 		ldrb	r3, [r4, #448]	@ zero_extendqisi2
 12393 0030 1BB1     		cbz	r3, .L415
 12394              	.LVL569:
  65:../../libDaisy//src/hid/switch.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 640


 12395              		.loc 11 65 54 view .LVU2563
 12396              	.LBE8112:
 12397              	.LBE8111:
 177:Brizachord.cpp **** 		|| gpio_state.button_aug.RisingEdge() || gpio_state.button_dim.RisingEdge())) {
 12398              		.loc 1 177 3 view .LVU2564
 12399 0032 94F8D831 		ldrb	r3, [r4, #472]	@ zero_extendqisi2
 12400 0036 7F2B     		cmp	r3, #127
 12401 0038 09D0     		beq	.L407
 12402              	.L415:
 12403              	.LVL570:
 12404              	.LBB8113:
 12405              	.LBI8113:
  65:../../libDaisy//src/hid/switch.h **** 
 12406              		.loc 11 65 17 is_stmt 1 discriminator 1 view .LVU2565
 12407              	.LBB8114:
  65:../../libDaisy//src/hid/switch.h **** 
 12408              		.loc 11 65 38 discriminator 1 view .LVU2566
  65:../../libDaisy//src/hid/switch.h **** 
 12409              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU2567
 12410 003a 94F8E431 		ldrb	r3, [r4, #484]	@ zero_extendqisi2
 12411 003e 002B     		cmp	r3, #0
 12412 0040 00F09680 		beq	.L401
 12413              	.LVL571:
  65:../../libDaisy//src/hid/switch.h **** 
 12414              		.loc 11 65 54 discriminator 1 view .LVU2568
 12415              	.LBE8114:
 12416              	.LBE8113:
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 12417              		.loc 1 176 6 view .LVU2569
 12418 0044 94F8FC31 		ldrb	r3, [r4, #508]	@ zero_extendqisi2
 12419 0048 7F2B     		cmp	r3, #127
 12420 004a 40F09180 		bne	.L401
 12421              	.L407:
 181:Brizachord.cpp **** 	if (instrument_state.queued_quality != instrument_state.chord.quality) {
 12422              		.loc 1 181 2 is_stmt 1 view .LVU2570
 12423              	.LBB8115:
 181:Brizachord.cpp **** 	if (instrument_state.queued_quality != instrument_state.chord.quality) {
 12424              		.loc 1 181 23 is_stmt 0 view .LVU2571
 12425 004e 94F8A030 		ldrb	r3, [r4, #160]	@ zero_extendqisi2
 181:Brizachord.cpp **** 	if (instrument_state.queued_quality != instrument_state.chord.quality) {
 12426              		.loc 1 181 2 view .LVU2572
 12427 0052 94F89C20 		ldrb	r2, [r4, #156]	@ zero_extendqisi2
 12428 0056 9A42     		cmp	r2, r3
 12429 0058 00F08A80 		beq	.L401
 12430              	.LBB8116:
 182:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 12431              		.loc 1 182 3 is_stmt 1 view .LVU2573
 182:Brizachord.cpp **** 		instrument_state.chord.quality = instrument_state.queued_quality;
 12432              		.loc 1 182 34 is_stmt 0 view .LVU2574
 12433 005c 84F89C30 		strb	r3, [r4, #156]
 184:Brizachord.cpp **** 		__disable_irq();
 12434              		.loc 1 184 3 is_stmt 1 view .LVU2575
 12435              	.LBB8117:
 12436              	.LBI8117:
 960:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 12437              		.loc 30 960 27 view .LVU2576
 12438              	.LBB8118:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 641


 12439              		.loc 30 962 3 view .LVU2577
 12440              		.syntax unified
 12441              	@ 962 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 12442 0060 72B6     		cpsid i
 12443              	@ 0 "" 2
 12444              		.thumb
 12445              		.syntax unified
 12446              	.LBE8118:
 12447              	.LBE8117:
 185:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 12448              		.loc 1 185 3 view .LVU2578
 12449              	.LVL572:
 12450              	.LBB8119:
 12451              	.LBI8119:
 12452              		.loc 31 25 8 view .LVU2579
 12453              	.LBB8120:
 12454              	.LBB8121:
 12455              	.LBB8122:
 12456              	.LBI8122:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12457              		.loc 5 448 7 view .LVU2580
 12458              	.LBB8123:
 12459              	.LBB8124:
 12460              	.LBB8125:
 12461              	.LBI8125:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12462              		.loc 5 190 7 view .LVU2581
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12463              		.loc 5 190 7 is_stmt 0 view .LVU2582
 12464              	.LBE8125:
 12465              	.LBB8126:
 12466              	.LBI8126:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12467              		.loc 5 290 7 is_stmt 1 view .LVU2583
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12468              		.loc 5 290 7 is_stmt 0 view .LVU2584
 12469              	.LBE8126:
 12470              	.LBB8127:
 12471              	.LBI8127:
 12472              		.loc 26 97 29 is_stmt 1 view .LVU2585
 12473              	.LBB8128:
 12474              	.LBI8128:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12475              		.loc 6 558 7 view .LVU2586
 12476              	.LBB8129:
 12477              	.LBI8129:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12478              		.loc 9 147 7 view .LVU2587
 12479              	.LBB8130:
 12480              	.LBI8130:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12481              		.loc 7 82 7 view .LVU2588
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12482              		.loc 7 82 7 is_stmt 0 view .LVU2589
 12483              	.LBE8130:
 12484              	.LBE8129:
 12485              	.LBE8128:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 642


 12486              	.LBE8127:
 12487              	.LBB8131:
 12488              	.LBI8131:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12489              		.loc 5 159 2 is_stmt 1 view .LVU2590
 12490              	.LBB8132:
 12491              	.LBB8133:
 12492              	.LBB8134:
 12493              	.LBI8134:
 12494              		.loc 27 101 5 view .LVU2591
 12495              		.loc 27 101 5 is_stmt 0 view .LVU2592
 12496              	.LBE8134:
 12497              	.LBB8135:
 12498              	.LBI8135:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12499              		.loc 9 147 7 is_stmt 1 view .LVU2593
 12500              	.LBB8136:
 12501              	.LBI8136:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12502              		.loc 7 82 7 view .LVU2594
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12503              		.loc 7 82 7 is_stmt 0 view .LVU2595
 12504              	.LBE8136:
 12505              	.LBE8135:
 12506              	.LBE8133:
 12507              	.LBE8132:
 12508              	.LBE8131:
 12509              	.LBB8141:
 12510              	.LBB8142:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12511              		.loc 5 908 16 view .LVU2596
 12512 0062 D4E92175 		ldrd	r7, r5, [r4, #132]
 12513              	.LBE8142:
 12514              	.LBE8141:
 12515              	.LBB8143:
 12516              	.LBB8139:
 12517              	.LBB8137:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12518              		.loc 5 160 46 view .LVU2597
 12519 0066 06AE     		add	r6, sp, #24
 12520              	.LVL573:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12521              		.loc 5 160 46 view .LVU2598
 12522              	.LBE8137:
 12523              	.LBE8139:
 12524              	.LBE8143:
 12525              	.LBB8144:
 12526              	.LBB8145:
 12527              	.LBB8146:
 12528              	.LBB8147:
 12529              	.LBB8148:
 12530              	.LBB8149:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12531              		.loc 25 211 42 view .LVU2599
 12532 0068 EF42     		cmn	r7, r5
 12533              	.LBE8149:
 12534              	.LBE8148:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 643


 12535              	.LBE8147:
 12536              	.LBE8146:
 12537              	.LBE8145:
 12538              	.LBE8144:
 12539              	.LBB8227:
 12540              	.LBB8140:
 12541              	.LBB8138:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12542              		.loc 5 160 46 view .LVU2600
 12543 006a 0496     		str	r6, [sp, #16]
 12544              	.LVL574:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12545              		.loc 5 160 46 view .LVU2601
 12546              	.LBE8138:
 12547              	.LBE8140:
 12548              	.LBE8227:
 12549              	.LBB8228:
 12550              	.LBI8228:
 12551              		.loc 9 162 7 is_stmt 1 view .LVU2602
 12552              	.LBB8229:
 12553              	.LBI8229:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12554              		.loc 7 89 7 view .LVU2603
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12555              		.loc 7 89 7 is_stmt 0 view .LVU2604
 12556              	.LBE8229:
 12557              	.LBE8228:
 12558              	.LBB8230:
 12559              	.LBI8230:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12560              		.loc 5 186 7 is_stmt 1 view .LVU2605
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12561              		.loc 5 186 7 is_stmt 0 view .LVU2606
 12562              	.LBE8230:
 12563              	.LBB8231:
 12564              	.LBI8231:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12565              		.loc 5 186 7 is_stmt 1 view .LVU2607
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12566              		.loc 5 186 7 is_stmt 0 view .LVU2608
 12567              	.LBE8231:
 12568              	.LBB8232:
 12569              	.LBI8141:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12570              		.loc 5 907 7 is_stmt 1 view .LVU2609
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12571              		.loc 5 907 7 is_stmt 0 view .LVU2610
 12572              	.LBE8232:
 12573              	.LBB8233:
 12574              	.LBI8144:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12575              		.loc 5 263 9 is_stmt 1 view .LVU2611
 12576              	.LBB8222:
 12577              	.LBB8217:
 12578              	.LBI8146:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12579              		.loc 5 243 9 view .LVU2612
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 644


 12580              	.LBB8212:
 12581              	.LBB8207:
 12582              	.LBI8148:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12583              		.loc 25 206 7 view .LVU2613
 12584              	.LBB8202:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12585              		.loc 25 211 42 is_stmt 0 view .LVU2614
 12586 006c 02D0     		beq	.L418
 12587 006e 002F     		cmp	r7, #0
 12588 0070 00F0EB80 		beq	.L424
 12589              	.L418:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12590              		.loc 25 217 2 view .LVU2615
 12591 0074 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12592              		.loc 25 215 12 view .LVU2616
 12593 0076 0B95     		str	r5, [sp, #44]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12594              		.loc 25 217 2 view .LVU2617
 12595 0078 00F2D680 		bhi	.L485
 12596              	.LVL575:
 12597              	.LBB8150:
 12598              	.LBI8150:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12599              		.loc 5 186 7 is_stmt 1 view .LVU2618
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12600              		.loc 5 186 7 is_stmt 0 view .LVU2619
 12601              	.LBE8150:
 12602              	.LBB8152:
 12603              	.LBI8152:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12604              		.loc 5 392 7 is_stmt 1 view .LVU2620
 12605              	.LBB8153:
 12606              	.LBI8153:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12607              		.loc 5 346 7 view .LVU2621
 12608              	.LBB8154:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12609              		.loc 5 348 2 is_stmt 0 view .LVU2622
 12610 007c 012D     		cmp	r5, #1
 12611 007e 40F0B680 		bne	.L421
 12612              	.LVL576:
 12613              	.LBB8155:
 12614              	.LBI8155:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12615              		.loc 21 321 7 is_stmt 1 view .LVU2623
 12616              	.LBB8156:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12617              		.loc 21 322 9 view .LVU2624
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12618              		.loc 21 322 16 is_stmt 0 view .LVU2625
 12619 0082 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12620              		.loc 21 322 22 view .LVU2626
 12621 0084 3346     		mov	r3, r6
 12622 0086 0DF11009 		add	r9, sp, #16
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 645


 12623              	.LVL577:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12624              		.loc 21 322 14 view .LVU2627
 12625 008a 8DF81820 		strb	r2, [sp, #24]
 12626              	.LVL578:
 12627              	.L422:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12628              		.loc 21 322 14 view .LVU2628
 12629              	.LBE8156:
 12630              	.LBE8155:
 12631              	.LBE8154:
 12632              	.LBE8153:
 12633              	.LBE8152:
 12634              	.LBB8172:
 12635              	.LBI8172:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12636              		.loc 5 214 7 is_stmt 1 view .LVU2629
 12637              	.LBB8173:
 12638              	.LBB8174:
 12639              	.LBI8174:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12640              		.loc 5 182 7 view .LVU2630
 12641              	.LBE8174:
 12642              	.LBB8176:
 12643              	.LBB8177:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12644              		.loc 21 322 14 is_stmt 0 view .LVU2631
 12645 008e 0022     		movs	r2, #0
 12646              	.LBE8177:
 12647              	.LBE8176:
 12648              	.LBB8180:
 12649              	.LBB8175:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12650              		.loc 5 183 26 view .LVU2632
 12651 0090 0595     		str	r5, [sp, #20]
 12652              	.LVL579:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12653              		.loc 5 183 26 view .LVU2633
 12654              	.LBE8175:
 12655              	.LBE8180:
 12656              	.LBB8181:
 12657              	.LBI8181:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12658              		.loc 5 186 7 is_stmt 1 view .LVU2634
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12659              		.loc 5 186 7 is_stmt 0 view .LVU2635
 12660              	.LBE8181:
 12661              	.LBB8183:
 12662              	.LBI8176:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12663              		.loc 21 321 7 is_stmt 1 view .LVU2636
 12664              	.LBB8178:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12665              		.loc 21 322 9 view .LVU2637
 12666              	.LBE8178:
 12667              	.LBE8183:
 12668              	.LBE8173:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 646


 12669              	.LBE8172:
 12670              	.LBE8202:
 12671              	.LBE8207:
 12672              	.LBE8212:
 12673              	.LBE8217:
 12674              	.LBE8222:
 12675              	.LBE8233:
 12676              	.LBE8124:
 12677              	.LBE8123:
 12678              	.LBE8122:
 12679              	.LBE8121:
 12680              	.LBE8120:
 12681              	.LBE8119:
 185:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 12682              		.loc 1 185 57 is_stmt 0 view .LVU2638
 12683 0092 01A8     		add	r0, sp, #4
 12684 0094 4946     		mov	r1, r9
 12685              	.LBB8258:
 12686              	.LBB8254:
 12687              	.LBB8250:
 12688              	.LBB8246:
 12689              	.LBB8242:
 12690              	.LBB8238:
 12691              	.LBB8234:
 12692              	.LBB8223:
 12693              	.LBB8218:
 12694              	.LBB8213:
 12695              	.LBB8208:
 12696              	.LBB8203:
 12697              	.LBB8188:
 12698              	.LBB8186:
 12699              	.LBB8184:
 12700              	.LBB8179:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12701              		.loc 21 322 14 view .LVU2639
 12702 0096 5A55     		strb	r2, [r3, r5]
 12703              	.LVL580:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12704              		.loc 21 322 14 view .LVU2640
 12705              	.LBE8179:
 12706              	.LBE8184:
 12707              	.LBE8186:
 12708              	.LBE8188:
 12709              	.LBE8203:
 12710              	.LBE8208:
 12711              	.LBE8213:
 12712              	.LBE8218:
 12713              	.LBE8223:
 12714              	.LBE8234:
 12715              	.LBE8238:
 12716              	.LBE8242:
 12717              	.LBE8246:
 12718              		.loc 31 25 8 view .LVU2641
 12719 0098 B4F89C30 		ldrh	r3, [r4, #156]
 12720 009c ADF82830 		strh	r3, [sp, #40]	@ movhi
 12721              	.LVL581:
 12722              		.loc 31 25 8 view .LVU2642
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 647


 12723              	.LBE8250:
 12724              	.LBE8254:
 12725              	.LBE8258:
 185:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 12726              		.loc 1 185 57 view .LVU2643
 12727 00a0 FFF7FEFF 		bl	_Z13chord_to_midi5Chord
 12728              	.LVL582:
 12729              	.LBB8259:
 12730              	.LBI8259:
 12731              		.loc 31 25 8 is_stmt 1 view .LVU2644
 12732              	.LBB8260:
 12733              	.LBI8260:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 12734              		.loc 5 657 7 view .LVU2645
 12735              	.LBB8261:
 12736              	.LBI8261:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12737              		.loc 5 229 7 view .LVU2646
 12738              	.LBB8262:
 12739              	.LBB8263:
 12740              	.LBI8263:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 12741              		.loc 5 221 7 view .LVU2647
 12742              	.LBB8264:
 12743              	.LBI8264:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12744              		.loc 5 186 7 view .LVU2648
 12745              	.LBB8265:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12746              		.loc 5 187 28 is_stmt 0 view .LVU2649
 12747 00a4 0498     		ldr	r0, [sp, #16]
 12748              	.LVL583:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12749              		.loc 5 187 28 view .LVU2650
 12750              	.LBE8265:
 12751              	.LBE8264:
 12752              	.LBB8266:
 12753              	.LBI8266:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12754              		.loc 5 200 7 is_stmt 1 view .LVU2651
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12755              		.loc 5 200 7 is_stmt 0 view .LVU2652
 12756              	.LBE8266:
 12757              	.LBE8263:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12758              		.loc 5 231 2 view .LVU2653
 12759 00a6 B042     		cmp	r0, r6
 12760 00a8 03D0     		beq	.L423
 12761              	.LVL584:
 12762              	.LBB8267:
 12763              	.LBI8267:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12764              		.loc 5 236 7 is_stmt 1 view .LVU2654
 12765              	.LBB8268:
 12766              	.LBB8269:
 12767              	.LBI8269:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 648


 12768              		.loc 6 491 7 view .LVU2655
 12769              	.LBB8270:
 12770              	.LBI8270:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12771              		.loc 7 120 7 view .LVU2656
 12772              	.LBE8270:
 12773              	.LBE8269:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12774              		.loc 5 237 34 is_stmt 0 view .LVU2657
 12775 00aa 0699     		ldr	r1, [sp, #24]
 12776              	.LBB8273:
 12777              	.LBB8272:
 12778              	.LBB8271:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12779              		.loc 7 133 19 view .LVU2658
 12780 00ac 0131     		adds	r1, r1, #1
 12781              	.LVL585:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12782              		.loc 7 133 19 view .LVU2659
 12783 00ae FFF7FEFF 		bl	_ZdlPvj
 12784              	.LVL586:
 12785              	.L423:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12786              		.loc 7 133 19 view .LVU2660
 12787              	.LBE8271:
 12788              	.LBE8272:
 12789              	.LBE8273:
 12790              	.LBE8268:
 12791              	.LBE8267:
 12792              	.LBE8262:
 12793              	.LBE8261:
 12794              	.LBB8274:
 12795              	.LBI8274:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12796              		.loc 5 150 14 is_stmt 1 view .LVU2661
 12797              	.LBB8275:
 12798              	.LBI8275:
 12799              		.loc 9 162 7 view .LVU2662
 12800              	.LBB8276:
 12801              	.LBI8276:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12802              		.loc 7 89 7 view .LVU2663
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12803              		.loc 7 89 7 is_stmt 0 view .LVU2664
 12804              	.LBE8276:
 12805              	.LBE8275:
 12806              	.LBE8274:
 12807              	.LBE8260:
 12808              	.LBE8259:
 186:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 12809              		.loc 1 186 3 is_stmt 1 view .LVU2665
 12810              	.LBB8277:
 12811              	.LBB8278:
 12812              	.LBB8279:
 12813              	.LBB8280:
 12814              	.LBB8281:
 12815              	.LBB8282:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 649


 12816              	.LBB8283:
 12817              	.LBB8284:
 12818              	.LBB8285:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12819              		.loc 5 160 46 is_stmt 0 view .LVU2666
 12820 00b2 0DAF     		add	r7, sp, #52
 12821              	.LBE8285:
 12822              	.LBE8284:
 12823              	.LBE8283:
 12824              	.LBE8282:
 12825              	.LBE8281:
 12826              	.LBE8280:
 12827              	.LBE8279:
 12828              	.LBE8278:
 12829              	.LBE8277:
 186:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 12830              		.loc 1 186 24 view .LVU2667
 12831 00b4 04F5D76A 		add	r10, r4, #1720
 12832              	.LVL587:
 12833              	.LBB8404:
 12834              	.LBI8277:
 12835              		.loc 31 25 8 is_stmt 1 view .LVU2668
 12836              	.LBB8400:
 12837              	.LBB8396:
 12838              	.LBB8392:
 12839              	.LBI8280:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12840              		.loc 5 448 7 view .LVU2669
 12841              	.LBB8388:
 12842              	.LBB8384:
 12843              	.LBB8293:
 12844              	.LBI8293:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12845              		.loc 5 190 7 view .LVU2670
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12846              		.loc 5 190 7 is_stmt 0 view .LVU2671
 12847              	.LBE8293:
 12848              	.LBB8294:
 12849              	.LBI8294:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12850              		.loc 5 290 7 is_stmt 1 view .LVU2672
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12851              		.loc 5 290 7 is_stmt 0 view .LVU2673
 12852              	.LBE8294:
 12853              	.LBB8295:
 12854              	.LBI8295:
 12855              		.loc 26 97 29 is_stmt 1 view .LVU2674
 12856              	.LBB8296:
 12857              	.LBI8296:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12858              		.loc 6 558 7 view .LVU2675
 12859              	.LBB8297:
 12860              	.LBI8297:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12861              		.loc 9 147 7 view .LVU2676
 12862              	.LBB8298:
 12863              	.LBI8298:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 650


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12864              		.loc 7 82 7 view .LVU2677
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12865              		.loc 7 82 7 is_stmt 0 view .LVU2678
 12866              	.LBE8298:
 12867              	.LBE8297:
 12868              	.LBE8296:
 12869              	.LBE8295:
 12870              	.LBB8299:
 12871              	.LBI8283:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12872              		.loc 5 159 2 is_stmt 1 view .LVU2679
 12873              	.LBB8291:
 12874              	.LBB8289:
 12875              	.LBB8286:
 12876              	.LBI8286:
 12877              		.loc 27 101 5 view .LVU2680
 12878              		.loc 27 101 5 is_stmt 0 view .LVU2681
 12879              	.LBE8286:
 12880              	.LBB8287:
 12881              	.LBI8287:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12882              		.loc 9 147 7 is_stmt 1 view .LVU2682
 12883              	.LBB8288:
 12884              	.LBI8288:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12885              		.loc 7 82 7 view .LVU2683
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12886              		.loc 7 82 7 is_stmt 0 view .LVU2684
 12887              	.LBE8288:
 12888              	.LBE8287:
 12889              	.LBE8289:
 12890              	.LBE8291:
 12891              	.LBE8299:
 12892              	.LBB8300:
 12893              	.LBB8301:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12894              		.loc 5 908 16 view .LVU2685
 12895 00b8 D4E92185 		ldrd	r8, r5, [r4, #132]
 12896              	.LBE8301:
 12897              	.LBE8300:
 12898              	.LBB8302:
 12899              	.LBB8292:
 12900              	.LBB8290:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12901              		.loc 5 160 46 view .LVU2686
 12902 00bc 0B97     		str	r7, [sp, #44]
 12903              	.LVL588:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12904              		.loc 5 160 46 view .LVU2687
 12905              	.LBE8290:
 12906              	.LBE8292:
 12907              	.LBE8302:
 12908              	.LBB8303:
 12909              	.LBI8303:
 12910              		.loc 9 162 7 is_stmt 1 view .LVU2688
 12911              	.LBB8304:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 651


 12912              	.LBI8304:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12913              		.loc 7 89 7 view .LVU2689
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12914              		.loc 7 89 7 is_stmt 0 view .LVU2690
 12915              	.LBE8304:
 12916              	.LBE8303:
 12917              	.LBB8305:
 12918              	.LBI8305:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12919              		.loc 5 186 7 is_stmt 1 view .LVU2691
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12920              		.loc 5 186 7 is_stmt 0 view .LVU2692
 12921              	.LBE8305:
 12922              	.LBB8306:
 12923              	.LBI8306:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12924              		.loc 5 186 7 is_stmt 1 view .LVU2693
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12925              		.loc 5 186 7 is_stmt 0 view .LVU2694
 12926              	.LBE8306:
 12927              	.LBB8307:
 12928              	.LBI8300:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12929              		.loc 5 907 7 is_stmt 1 view .LVU2695
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12930              		.loc 5 907 7 is_stmt 0 view .LVU2696
 12931              	.LBE8307:
 12932              	.LBB8308:
 12933              	.LBI8308:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12934              		.loc 5 263 9 is_stmt 1 view .LVU2697
 12935              	.LBB8309:
 12936              	.LBB8310:
 12937              	.LBI8310:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12938              		.loc 5 243 9 view .LVU2698
 12939              	.LBB8311:
 12940              	.LBB8312:
 12941              	.LBI8312:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12942              		.loc 25 206 7 view .LVU2699
 12943              	.LBB8313:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12944              		.loc 25 211 42 is_stmt 0 view .LVU2700
 12945 00be 18EB050F 		cmn	r8, r5
 12946 00c2 03D0     		beq	.L439
 12947 00c4 B8F1000F 		cmp	r8, #0
 12948 00c8 00F0BF80 		beq	.L424
 12949              	.L439:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12950              		.loc 25 217 2 view .LVU2701
 12951 00cc 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12952              		.loc 25 215 12 view .LVU2702
 12953 00ce 0495     		str	r5, [sp, #16]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 652


 12954              		.loc 25 217 2 view .LVU2703
 12955 00d0 00F29A80 		bhi	.L486
 12956              	.LVL589:
 12957              	.LBB8314:
 12958              	.LBI8314:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12959              		.loc 5 186 7 is_stmt 1 view .LVU2704
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12960              		.loc 5 186 7 is_stmt 0 view .LVU2705
 12961              	.LBE8314:
 12962              	.LBB8316:
 12963              	.LBI8316:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12964              		.loc 5 392 7 is_stmt 1 view .LVU2706
 12965              	.LBB8317:
 12966              	.LBI8317:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12967              		.loc 5 346 7 view .LVU2707
 12968              	.LBB8318:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12969              		.loc 5 348 2 is_stmt 0 view .LVU2708
 12970 00d4 012D     		cmp	r5, #1
 12971 00d6 40F09380 		bne	.L428
 12972              	.LVL590:
 12973              	.LBB8319:
 12974              	.LBI8319:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12975              		.loc 21 321 7 is_stmt 1 view .LVU2709
 12976              	.LBB8320:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12977              		.loc 21 322 9 view .LVU2710
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12978              		.loc 21 322 16 is_stmt 0 view .LVU2711
 12979 00da 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 12980 00de 0BAE     		add	r6, sp, #44
 12981              	.LVL591:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12982              		.loc 21 322 14 view .LVU2712
 12983 00e0 8DF83430 		strb	r3, [sp, #52]
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12984              		.loc 21 322 22 view .LVU2713
 12985 00e4 3B46     		mov	r3, r7
 12986              	.LVL592:
 12987              	.L429:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12988              		.loc 21 322 22 view .LVU2714
 12989              	.LBE8320:
 12990              	.LBE8319:
 12991              	.LBE8318:
 12992              	.LBE8317:
 12993              	.LBE8316:
 12994              	.LBB8336:
 12995              	.LBI8336:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12996              		.loc 5 214 7 is_stmt 1 view .LVU2715
 12997              	.LBB8337:
 12998              	.LBB8338:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 653


 12999              	.LBI8338:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13000              		.loc 5 182 7 view .LVU2716
 13001              	.LBE8338:
 13002              	.LBB8340:
 13003              	.LBB8341:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13004              		.loc 21 322 14 is_stmt 0 view .LVU2717
 13005 00e6 0022     		movs	r2, #0
 13006              	.LBE8341:
 13007              	.LBE8340:
 13008              	.LBB8344:
 13009              	.LBB8339:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13010              		.loc 5 183 26 view .LVU2718
 13011 00e8 0C95     		str	r5, [sp, #48]
 13012              	.LVL593:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13013              		.loc 5 183 26 view .LVU2719
 13014              	.LBE8339:
 13015              	.LBE8344:
 13016              	.LBB8345:
 13017              	.LBI8345:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13018              		.loc 5 186 7 is_stmt 1 view .LVU2720
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13019              		.loc 5 186 7 is_stmt 0 view .LVU2721
 13020              	.LBE8345:
 13021              	.LBB8347:
 13022              	.LBI8340:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13023              		.loc 21 321 7 is_stmt 1 view .LVU2722
 13024              	.LBB8342:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13025              		.loc 21 322 9 view .LVU2723
 13026              	.LBE8342:
 13027              	.LBE8347:
 13028              	.LBE8337:
 13029              	.LBE8336:
 13030              	.LBE8313:
 13031              	.LBE8312:
 13032              	.LBE8311:
 13033              	.LBE8310:
 13034              	.LBE8309:
 13035              	.LBE8308:
 13036              	.LBE8384:
 13037              	.LBE8388:
 13038              	.LBE8392:
 13039              	.LBE8396:
 13040              	.LBE8400:
 13041              	.LBE8404:
 186:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 13042              		.loc 1 186 24 is_stmt 0 view .LVU2724
 13043 00ea 5046     		mov	r0, r10
 13044 00ec 3146     		mov	r1, r6
 13045              	.LBB8405:
 13046              	.LBB8401:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 654


 13047              	.LBB8397:
 13048              	.LBB8393:
 13049              	.LBB8389:
 13050              	.LBB8385:
 13051              	.LBB8381:
 13052              	.LBB8378:
 13053              	.LBB8375:
 13054              	.LBB8372:
 13055              	.LBB8369:
 13056              	.LBB8366:
 13057              	.LBB8352:
 13058              	.LBB8350:
 13059              	.LBB8348:
 13060              	.LBB8343:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13061              		.loc 21 322 14 view .LVU2725
 13062 00ee 5A55     		strb	r2, [r3, r5]
 13063              	.LVL594:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13064              		.loc 21 322 14 view .LVU2726
 13065              	.LBE8343:
 13066              	.LBE8348:
 13067              	.LBE8350:
 13068              	.LBE8352:
 13069              	.LBE8366:
 13070              	.LBE8369:
 13071              	.LBE8372:
 13072              	.LBE8375:
 13073              	.LBE8378:
 13074              	.LBE8381:
 13075              	.LBE8385:
 13076              	.LBE8389:
 13077              	.LBE8393:
 13078              		.loc 31 25 8 view .LVU2727
 13079 00f0 B4F89C30 		ldrh	r3, [r4, #156]
 13080 00f4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 13081              	.LVL595:
 13082              		.loc 31 25 8 view .LVU2728
 13083              	.LBE8397:
 13084              	.LBE8401:
 13085              	.LBE8405:
 186:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 13086              		.loc 1 186 24 view .LVU2729
 13087 00f8 FFF7FEFF 		bl	_ZN10ChordSynth9set_chordE5Chord
 13088              	.LVL596:
 13089              	.LBB8406:
 13090              	.LBI8406:
 13091              		.loc 31 25 8 is_stmt 1 view .LVU2730
 13092              	.LBB8407:
 13093              	.LBI8407:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 13094              		.loc 5 657 7 view .LVU2731
 13095              	.LBB8408:
 13096              	.LBI8408:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13097              		.loc 5 229 7 view .LVU2732
 13098              	.LBB8409:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 655


 13099              	.LBB8410:
 13100              	.LBI8410:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 13101              		.loc 5 221 7 view .LVU2733
 13102              	.LBB8411:
 13103              	.LBI8411:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13104              		.loc 5 186 7 view .LVU2734
 13105              	.LBB8412:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13106              		.loc 5 187 28 is_stmt 0 view .LVU2735
 13107 00fc 0B98     		ldr	r0, [sp, #44]
 13108              	.LVL597:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13109              		.loc 5 187 28 view .LVU2736
 13110              	.LBE8412:
 13111              	.LBE8411:
 13112              	.LBB8413:
 13113              	.LBI8413:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13114              		.loc 5 200 7 is_stmt 1 view .LVU2737
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13115              		.loc 5 200 7 is_stmt 0 view .LVU2738
 13116              	.LBE8413:
 13117              	.LBE8410:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13118              		.loc 5 231 2 view .LVU2739
 13119 00fe B842     		cmp	r0, r7
 13120 0100 03D0     		beq	.L430
 13121              	.LVL598:
 13122              	.LBB8414:
 13123              	.LBI8414:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13124              		.loc 5 236 7 is_stmt 1 view .LVU2740
 13125              	.LBB8415:
 13126              	.LBB8416:
 13127              	.LBI8416:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13128              		.loc 6 491 7 view .LVU2741
 13129              	.LBB8417:
 13130              	.LBI8417:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13131              		.loc 7 120 7 view .LVU2742
 13132              	.LBE8417:
 13133              	.LBE8416:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13134              		.loc 5 237 34 is_stmt 0 view .LVU2743
 13135 0102 0D99     		ldr	r1, [sp, #52]
 13136              	.LBB8420:
 13137              	.LBB8419:
 13138              	.LBB8418:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13139              		.loc 7 133 19 view .LVU2744
 13140 0104 0131     		adds	r1, r1, #1
 13141              	.LVL599:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13142              		.loc 7 133 19 view .LVU2745
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 656


 13143 0106 FFF7FEFF 		bl	_ZdlPvj
 13144              	.LVL600:
 13145              	.L430:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13146              		.loc 7 133 19 view .LVU2746
 13147              	.LBE8418:
 13148              	.LBE8419:
 13149              	.LBE8420:
 13150              	.LBE8415:
 13151              	.LBE8414:
 13152              	.LBE8409:
 13153              	.LBE8408:
 13154              	.LBB8421:
 13155              	.LBI8421:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13156              		.loc 5 150 14 is_stmt 1 view .LVU2747
 13157              	.LBB8422:
 13158              	.LBI8422:
 13159              		.loc 9 162 7 view .LVU2748
 13160              	.LBB8423:
 13161              	.LBI8423:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13162              		.loc 7 89 7 view .LVU2749
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13163              		.loc 7 89 7 is_stmt 0 view .LVU2750
 13164              	.LBE8423:
 13165              	.LBE8422:
 13166              	.LBE8421:
 13167              	.LBE8407:
 13168              	.LBE8406:
 187:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 13169              		.loc 1 187 3 is_stmt 1 view .LVU2751
 13170              	.LBB8424:
 13171              	.LBB8425:
 13172              	.LBB8426:
 13173              	.LBB8427:
 13174              	.LBB8428:
 13175              	.LBB8429:
 13176              	.LBB8430:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13177              		.loc 14 98 47 is_stmt 0 view .LVU2752
 13178 010a 0023     		movs	r3, #0
 13179              	.LBE8430:
 13180              	.LBE8429:
 13181              	.LBE8428:
 13182              	.LBE8427:
 13183              	.LBE8426:
 13184              	.LBE8425:
 13185              	.LBE8424:
 187:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 13186              		.loc 1 187 27 view .LVU2753
 13187 010c 04F5FE64 		add	r4, r4, #2032
 13188              	.LVL601:
 13189              	.LBB8550:
 13190              	.LBI8424:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13191              		.loc 14 553 7 is_stmt 1 view .LVU2754
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 657


 13192              	.LBB8546:
 13193              	.LBB8476:
 13194              	.LBI8476:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13195              		.loc 14 918 7 view .LVU2755
 13196              	.LBB8477:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13197              		.loc 14 919 66 is_stmt 0 view .LVU2756
 13198 0110 DDE90110 		ldrd	r1, r0, [sp, #4]
 13199              	.LVL602:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13200              		.loc 14 919 66 view .LVU2757
 13201              	.LBE8477:
 13202              	.LBE8476:
 13203              	.LBB8478:
 13204              	.LBI8478:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13205              		.loc 14 280 7 is_stmt 1 view .LVU2758
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13206              		.loc 14 280 7 is_stmt 0 view .LVU2759
 13207              	.LBE8478:
 13208              	.LBB8479:
 13209              	.LBI8479:
 13210              		.loc 26 97 29 is_stmt 1 view .LVU2760
 13211              	.LBB8480:
 13212              	.LBI8480:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 13213              		.loc 6 558 7 view .LVU2761
 13214              	.LBB8481:
 13215              	.LBI8481:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13216              		.loc 9 147 7 view .LVU2762
 13217              	.LBB8482:
 13218              	.LBI8482:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13219              		.loc 7 82 7 view .LVU2763
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13220              		.loc 7 82 7 is_stmt 0 view .LVU2764
 13221              	.LBE8482:
 13222              	.LBE8481:
 13223              	.LBE8480:
 13224              	.LBE8479:
 13225              	.LBB8483:
 13226              	.LBI8426:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 13227              		.loc 14 303 7 is_stmt 1 view .LVU2765
 13228              	.LBB8439:
 13229              	.LBI8427:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 13230              		.loc 14 136 2 view .LVU2766
 13231              	.LBB8435:
 13232              	.LBI8435:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13233              		.loc 9 147 7 view .LVU2767
 13234              	.LBB8436:
 13235              	.LBI8436:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 658


 13236              		.loc 7 82 7 view .LVU2768
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13237              		.loc 7 82 7 is_stmt 0 view .LVU2769
 13238              	.LBE8436:
 13239              	.LBE8435:
 13240              	.LBB8437:
 13241              	.LBI8428:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 13242              		.loc 14 97 2 is_stmt 1 view .LVU2770
 13243              	.LBB8433:
 13244              	.LBB8431:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13245              		.loc 14 98 47 is_stmt 0 view .LVU2771
 13246 0114 CDE90B33 		strd	r3, r3, [sp, #44]
 13247              	.LBE8431:
 13248              	.LBE8433:
 13249              	.LBE8437:
 13250              	.LBE8439:
 13251              	.LBB8440:
 13252              	.LBB8441:
 13253              	.LBB8442:
 13254              	.LBB8443:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13255              		.loc 14 346 18 view .LVU2772
 13256 0118 451A     		subs	r5, r0, r1
 13257              	.LVL603:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13258              		.loc 14 346 18 view .LVU2773
 13259              	.LBE8443:
 13260              	.LBE8442:
 13261              	.LBE8441:
 13262              	.LBE8440:
 13263              	.LBB8468:
 13264              	.LBB8438:
 13265              	.LBB8434:
 13266              	.LBB8432:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13267              		.loc 14 98 47 view .LVU2774
 13268 011a 0D93     		str	r3, [sp, #52]
 13269              	.LVL604:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13270              		.loc 14 98 47 view .LVU2775
 13271              	.LBE8432:
 13272              	.LBE8434:
 13273              	.LBE8438:
 13274              	.LBE8468:
 13275              	.LBB8469:
 13276              	.LBI8440:
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13277              		.loc 14 359 7 is_stmt 1 view .LVU2776
 13278              	.LBB8461:
 13279              	.LBB8457:
 13280              	.LBI8442:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13281              		.loc 14 343 7 view .LVU2777
 13282              	.LBB8453:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 659


 13283              		.loc 14 346 18 is_stmt 0 view .LVU2778
 13284 011c 6DD0     		beq	.L438
 13285              	.LVL605:
 13286              	.LBB8444:
 13287              	.LBI8444:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 13288              		.loc 6 459 7 is_stmt 1 view .LVU2779
 13289              	.LBB8445:
 13290              	.LBI8445:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13291              		.loc 7 103 7 view .LVU2780
 13292              	.LBB8446:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13293              		.loc 7 105 2 is_stmt 0 view .LVU2781
 13294 011e 514B     		ldr	r3, .L492
 13295 0120 9D42     		cmp	r5, r3
 13296 0122 00F29580 		bhi	.L487
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13297              		.loc 7 115 41 view .LVU2782
 13298 0126 2846     		mov	r0, r5
 13299 0128 FFF7FEFF 		bl	_Znwj
 13300              	.LVL606:
 13301              	.LBE8446:
 13302              	.LBE8445:
 13303              	.LBE8444:
 13304              	.LBE8453:
 13305              	.LBE8457:
 13306              	.LBE8461:
 13307              	.LBE8469:
 13308              	.LBE8483:
 13309              	.LBB8484:
 13310              	.LBB8485:
 13311              	.LBB8486:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 13312              		.loc 17 979 23 view .LVU2783
 13313 012c 0199     		ldr	r1, [sp, #4]
 13314              	.LBE8486:
 13315              	.LBE8485:
 13316              	.LBE8484:
 13317              	.LBB8488:
 13318              	.LBB8470:
 13319              	.LBB8462:
 13320              	.LBB8458:
 13321              	.LBB8454:
 13322              	.LBB8451:
 13323              	.LBB8449:
 13324              	.LBB8447:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13325              		.loc 7 115 41 view .LVU2784
 13326 012e 0346     		mov	r3, r0
 13327              	.LVL607:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13328              		.loc 7 115 41 view .LVU2785
 13329              	.LBE8447:
 13330              	.LBE8449:
 13331              	.LBE8451:
 13332              	.LBE8454:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 660


 13333              	.LBE8458:
 13334              	.LBE8462:
 13335              	.LBE8470:
 13336              	.LBE8488:
 13337              	.LBB8489:
 13338              	.LBB8490:
 13339              	.LBB8491:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 13340              		.loc 17 979 23 view .LVU2786
 13341 0130 0298     		ldr	r0, [sp, #8]
 13342              	.LBE8491:
 13343              	.LBE8490:
 13344              	.LBE8489:
 13345              	.LBB8493:
 13346              	.LBB8494:
 13347              	.LBB8495:
 13348              	.LBB8496:
 13349              	.LBB8497:
 13350              	.LBB8498:
 13351              	.LBB8499:
 13352              	.LBB8500:
 13353              	.LBB8501:
 13354              	.LBB8502:
 13355              	.LBB8503:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 13356              		.loc 23 424 34 view .LVU2787
 13357 0132 471A     		subs	r7, r0, r1
 13358              	.L431:
 13359              	.LVL608:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 13360              		.loc 23 424 34 view .LVU2788
 13361              	.LBE8503:
 13362              	.LBE8502:
 13363              	.LBE8501:
 13364              	.LBE8500:
 13365              	.LBE8499:
 13366              	.LBE8498:
 13367              	.LBE8497:
 13368              	.LBE8496:
 13369              	.LBE8495:
 13370              	.LBE8494:
 13371              	.LBE8493:
 13372              	.LBB8533:
 13373              	.LBB8471:
 13374              	.LBB8463:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13375              		.loc 14 363 59 view .LVU2789
 13376 0134 1D44     		add	r5, r5, r3
 13377              	.LVL609:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13378              		.loc 14 363 59 view .LVU2790
 13379              	.LBE8463:
 13380              	.LBE8471:
 13381              	.LBE8533:
 13382              	.LBB8534:
 13383              	.LBB8530:
 13384              	.LBB8527:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 661


 13385              	.LBB8524:
 13386              	.LBB8521:
 13387              	.LBB8518:
 13388              	.LBB8515:
 13389              	.LBB8512:
 13390              	.LBB8509:
 13391              	.LBB8506:
 13392              	.LBB8504:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 13393              		.loc 23 425 4 view .LVU2791
 13394 0136 8142     		cmp	r1, r0
 13395              	.LBE8504:
 13396              	.LBE8506:
 13397              	.LBE8509:
 13398              	.LBE8512:
 13399              	.LBE8515:
 13400              	.LBE8518:
 13401              	.LBE8521:
 13402              	.LBE8524:
 13403              	.LBE8527:
 13404              	.LBE8530:
 13405              	.LBE8534:
 13406              	.LBB8535:
 13407              	.LBB8472:
 13408              	.LBB8464:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13409              		.loc 14 363 34 view .LVU2792
 13410 0138 0D95     		str	r5, [sp, #52]
 13411              	.LVL610:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13412              		.loc 14 363 34 view .LVU2793
 13413              	.LBE8464:
 13414              	.LBE8472:
 13415              	.LBE8535:
 13416              	.LBB8536:
 13417              	.LBI8536:
 13418              		.loc 9 162 7 is_stmt 1 view .LVU2794
 13419              	.LBB8537:
 13420              	.LBI8537:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13421              		.loc 7 89 7 view .LVU2795
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13422              		.loc 7 89 7 is_stmt 0 view .LVU2796
 13423              	.LBE8537:
 13424              	.LBE8536:
 13425              	.LBB8538:
 13426              	.LBI8484:
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 13427              		.loc 14 820 7 is_stmt 1 view .LVU2797
 13428              	.LBB8487:
 13429              	.LBI8485:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13430              		.loc 17 978 7 view .LVU2798
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13431              		.loc 17 978 7 is_stmt 0 view .LVU2799
 13432              	.LBE8487:
 13433              	.LBE8538:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 662


 13434              	.LBB8539:
 13435              	.LBI8489:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 13436              		.loc 14 838 7 is_stmt 1 view .LVU2800
 13437              	.LBB8492:
 13438              	.LBI8490:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13439              		.loc 17 978 7 view .LVU2801
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13440              		.loc 17 978 7 is_stmt 0 view .LVU2802
 13441              	.LBE8492:
 13442              	.LBE8539:
 13443              	.LBB8540:
 13444              	.LBI8540:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13445              		.loc 14 276 7 is_stmt 1 view .LVU2803
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13446              		.loc 14 276 7 is_stmt 0 view .LVU2804
 13447              	.LBE8540:
 13448              	.LBB8541:
 13449              	.LBI8493:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 13450              		.loc 19 323 5 is_stmt 1 view .LVU2805
 13451              	.LBB8531:
 13452              	.LBI8494:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 13453              		.loc 19 125 5 view .LVU2806
 13454              	.LBB8528:
 13455              	.LBB8525:
 13456              	.LBI8496:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 13457              		.loc 19 107 9 view .LVU2807
 13458              	.LBB8522:
 13459              	.LBI8497:
 13460              		.loc 23 560 5 view .LVU2808
 13461              	.LBB8519:
 13462              	.LBI8498:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13463              		.loc 23 511 5 view .LVU2809
 13464              	.LBB8516:
 13465              	.LBI8499:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 13466              		.loc 23 505 5 view .LVU2810
 13467              	.LBB8513:
 13468              	.LBI8500:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13469              		.loc 23 463 5 view .LVU2811
 13470              	.LBB8510:
 13471              	.LBB8507:
 13472              	.LBI8502:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 13473              		.loc 23 415 2 view .LVU2812
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 13474              		.loc 23 415 2 is_stmt 0 view .LVU2813
 13475              	.LBE8507:
 13476              	.LBE8510:
 13477              	.LBE8513:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 663


 13478              	.LBE8516:
 13479              	.LBE8519:
 13480              	.LBE8522:
 13481              	.LBE8525:
 13482              	.LBE8528:
 13483              	.LBE8531:
 13484              	.LBE8541:
 13485              	.LBB8542:
 13486              	.LBB8473:
 13487              	.LBB8465:
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13488              		.loc 14 362 26 view .LVU2814
 13489 013a CDE90B33 		strd	r3, r3, [sp, #44]
 13490              	.LBE8465:
 13491              	.LBE8473:
 13492              	.LBE8542:
 13493              	.LBB8543:
 13494              	.LBB8532:
 13495              	.LBB8529:
 13496              	.LBB8526:
 13497              	.LBB8523:
 13498              	.LBB8520:
 13499              	.LBB8517:
 13500              	.LBB8514:
 13501              	.LBB8511:
 13502              	.LBB8508:
 13503              	.LBB8505:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 13504              		.loc 23 425 4 view .LVU2815
 13505 013e 04D0     		beq	.L433
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 13506              		.loc 23 426 23 view .LVU2816
 13507 0140 1846     		mov	r0, r3
 13508 0142 3A46     		mov	r2, r7
 13509 0144 FFF7FEFF 		bl	memmove
 13510              	.LVL611:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 13511              		.loc 23 426 23 view .LVU2817
 13512 0148 0346     		mov	r3, r0
 13513              	.L433:
 13514              	.LVL612:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 13515              		.loc 23 427 22 view .LVU2818
 13516 014a 3B44     		add	r3, r3, r7
 13517              	.LBE8505:
 13518              	.LBE8508:
 13519              	.LBE8511:
 13520              	.LBE8514:
 13521              	.LBE8517:
 13522              	.LBE8520:
 13523              	.LBE8523:
 13524              	.LBE8526:
 13525              	.LBE8529:
 13526              	.LBE8532:
 13527              	.LBE8543:
 13528              	.LBE8546:
 13529              	.LBE8550:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 664


 187:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 13530              		.loc 1 187 27 view .LVU2819
 13531 014c 2046     		mov	r0, r4
 13532 014e 3146     		mov	r1, r6
 13533              	.LBB8551:
 13534              	.LBB8547:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 13535              		.loc 14 557 26 view .LVU2820
 13536 0150 0C93     		str	r3, [sp, #48]
 13537              	.LVL613:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 13538              		.loc 14 557 26 view .LVU2821
 13539              	.LBE8547:
 13540              	.LBE8551:
 187:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 13541              		.loc 1 187 27 view .LVU2822
 13542 0152 FFF7FEFF 		bl	_ZN10StrumSynth12set_arpeggioESt6vectorIiSaIiEE
 13543              	.LVL614:
 13544              	.LBB8552:
 13545              	.LBI8552:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13546              		.loc 14 678 7 is_stmt 1 view .LVU2823
 13547              	.LBB8553:
 13548              	.LBB8554:
 13549              	.LBI8554:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13550              		.loc 14 276 7 view .LVU2824
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13551              		.loc 14 276 7 is_stmt 0 view .LVU2825
 13552              	.LBE8554:
 13553              	.LBB8555:
 13554              	.LBI8555:
 13555              		.loc 6 735 5 is_stmt 1 view .LVU2826
 13556              		.loc 6 735 5 is_stmt 0 view .LVU2827
 13557              	.LBE8555:
 13558              	.LBB8556:
 13559              	.LBI8556:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13560              		.loc 14 333 7 is_stmt 1 view .LVU2828
 13561              	.LBB8557:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 13562              		.loc 14 335 15 is_stmt 0 view .LVU2829
 13563 0156 0B98     		ldr	r0, [sp, #44]
 13564              	.LVL615:
 13565              	.LBB8558:
 13566              	.LBI8558:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13567              		.loc 14 350 7 is_stmt 1 view .LVU2830
 13568              	.LBB8559:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13569              		.loc 14 353 2 is_stmt 0 view .LVU2831
 13570 0158 18B1     		cbz	r0, .L434
 13571              	.LVL616:
 13572              	.LBB8560:
 13573              	.LBI8560:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13574              		.loc 6 491 7 is_stmt 1 view .LVU2832
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 665


 13575              	.LBB8561:
 13576              	.LBB8562:
 13577              	.LBI8562:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13578              		.loc 7 120 7 view .LVU2833
 13579              	.LBE8562:
 13580              	.LBE8561:
 13581              	.LBE8560:
 13582              	.LBE8559:
 13583              	.LBE8558:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13584              		.loc 14 336 35 is_stmt 0 view .LVU2834
 13585 015a 0D99     		ldr	r1, [sp, #52]
 13586              	.LBB8568:
 13587              	.LBB8567:
 13588              	.LBB8566:
 13589              	.LBB8565:
 13590              	.LBB8564:
 13591              	.LBB8563:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13592              		.loc 7 133 19 view .LVU2835
 13593 015c 091A     		subs	r1, r1, r0
 13594 015e FFF7FEFF 		bl	_ZdlPvj
 13595              	.LVL617:
 13596              	.L434:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13597              		.loc 7 133 19 view .LVU2836
 13598              	.LBE8563:
 13599              	.LBE8564:
 13600              	.LBE8565:
 13601              	.LBE8566:
 13602              	.LBE8567:
 13603              	.LBE8568:
 13604              	.LBB8569:
 13605              	.LBI8569:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 13606              		.loc 14 128 14 is_stmt 1 view .LVU2837
 13607              	.LBB8570:
 13608              	.LBI8570:
 13609              		.loc 9 162 7 view .LVU2838
 13610              	.LBB8571:
 13611              	.LBI8571:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13612              		.loc 7 89 7 view .LVU2839
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13613              		.loc 7 89 7 is_stmt 0 view .LVU2840
 13614              	.LBE8571:
 13615              	.LBE8570:
 13616              	.LBE8569:
 13617              	.LBE8557:
 13618              	.LBE8556:
 13619              	.LBE8553:
 13620              	.LBE8552:
 188:Brizachord.cpp **** 		__enable_irq();
 13621              		.loc 1 188 3 is_stmt 1 view .LVU2841
 13622              	.LBB8572:
 13623              	.LBI8572:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 666


 949:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 13624              		.loc 30 949 27 view .LVU2842
 13625              	.LBB8573:
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 13626              		.loc 30 951 3 view .LVU2843
 13627              		.syntax unified
 13628              	@ 951 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 13629 0162 62B6     		cpsie i
 13630              	@ 0 "" 2
 13631              	.LVL618:
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 13632              		.loc 30 951 3 is_stmt 0 view .LVU2844
 13633              		.thumb
 13634              		.syntax unified
 13635              	.LBE8573:
 13636              	.LBE8572:
 13637              	.LBB8574:
 13638              	.LBI8574:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13639              		.loc 14 678 7 is_stmt 1 view .LVU2845
 13640              	.LBB8575:
 13641              	.LBB8576:
 13642              	.LBI8576:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13643              		.loc 14 276 7 view .LVU2846
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13644              		.loc 14 276 7 is_stmt 0 view .LVU2847
 13645              	.LBE8576:
 13646              	.LBB8577:
 13647              	.LBI8577:
 13648              		.loc 6 735 5 is_stmt 1 view .LVU2848
 13649              		.loc 6 735 5 is_stmt 0 view .LVU2849
 13650              	.LBE8577:
 13651              	.LBB8578:
 13652              	.LBI8578:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13653              		.loc 14 333 7 is_stmt 1 view .LVU2850
 13654              	.LBB8579:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 13655              		.loc 14 335 15 is_stmt 0 view .LVU2851
 13656 0164 0198     		ldr	r0, [sp, #4]
 13657              	.LVL619:
 13658              	.LBB8580:
 13659              	.LBI8580:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13660              		.loc 14 350 7 is_stmt 1 view .LVU2852
 13661              	.LBB8581:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13662              		.loc 14 353 2 is_stmt 0 view .LVU2853
 13663 0166 18B1     		cbz	r0, .L401
 13664              	.LVL620:
 13665              	.LBB8582:
 13666              	.LBI8582:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13667              		.loc 6 491 7 is_stmt 1 view .LVU2854
 13668              	.LBB8583:
 13669              	.LBB8584:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 667


 13670              	.LBI8584:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13671              		.loc 7 120 7 view .LVU2855
 13672              	.LBE8584:
 13673              	.LBE8583:
 13674              	.LBE8582:
 13675              	.LBE8581:
 13676              	.LBE8580:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13677              		.loc 14 336 35 is_stmt 0 view .LVU2856
 13678 0168 0399     		ldr	r1, [sp, #12]
 13679              	.LBB8590:
 13680              	.LBB8589:
 13681              	.LBB8588:
 13682              	.LBB8587:
 13683              	.LBB8586:
 13684              	.LBB8585:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13685              		.loc 7 133 19 view .LVU2857
 13686 016a 091A     		subs	r1, r1, r0
 13687 016c FFF7FEFF 		bl	_ZdlPvj
 13688              	.LVL621:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 13689              		.loc 7 133 19 view .LVU2858
 13690              	.LBE8585:
 13691              	.LBE8586:
 13692              	.LBE8587:
 13693              	.LBE8588:
 13694              	.LBE8589:
 13695              	.LBE8590:
 13696              	.LBB8591:
 13697              	.LBI8591:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 13698              		.loc 14 128 14 is_stmt 1 view .LVU2859
 13699              	.LBB8592:
 13700              	.LBI8592:
 13701              		.loc 9 162 7 view .LVU2860
 13702              	.LBB8593:
 13703              	.LBI8593:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13704              		.loc 7 89 7 view .LVU2861
 13705              	.L401:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13706              		.loc 7 89 7 is_stmt 0 view .LVU2862
 13707              	.LBE8593:
 13708              	.LBE8592:
 13709              	.LBE8591:
 13710              	.LBE8579:
 13711              	.LBE8578:
 13712              	.LBE8575:
 13713              	.LBE8574:
 13714              	.LBE8116:
 13715              	.LBE8115:
 190:Brizachord.cpp **** }
 13716              		.loc 1 190 1 view .LVU2863
 13717 0170 12B0     		add	sp, sp, #72
 13718              		.cfi_remember_state
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 668


 13719              		.cfi_def_cfa_offset 32
 13720              		@ sp needed
 13721 0172 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 13722              	.LVL622:
 13723              	.L402:
 13724              		.cfi_restore_state
 170:Brizachord.cpp **** 	else if (gpio_state.button_min.FallingEdge())   instrument_state.queued_quality = MINOR;
 13725              		.loc 1 170 7 is_stmt 1 view .LVU2864
 13726              	.LBB8602:
 13727              	.LBI8100:
  68:../../libDaisy//src/hid/switch.h ****     {
 13728              		.loc 11 68 17 view .LVU2865
 13729              	.LBB8102:
 13730              		.loc 11 70 9 view .LVU2866
 13731              		.loc 11 70 16 is_stmt 0 view .LVU2867
 13732 0176 94F89C21 		ldrb	r2, [r4, #412]	@ zero_extendqisi2
 13733              		.loc 11 70 25 view .LVU2868
 13734 017a 7AB1     		cbz	r2, .L404
 13735              	.LVL623:
 13736              		.loc 11 70 25 view .LVU2869
 13737              	.LBE8102:
 13738              	.LBE8602:
 170:Brizachord.cpp **** 	else if (gpio_state.button_min.FallingEdge())   instrument_state.queued_quality = MINOR;
 13739              		.loc 1 170 7 view .LVU2870
 13740 017c 94F8B411 		ldrb	r1, [r4, #436]	@ zero_extendqisi2
 13741 0180 8029     		cmp	r1, #128
 13742 0182 0BD1     		bne	.L404
 170:Brizachord.cpp **** 	else if (gpio_state.button_min.FallingEdge())   instrument_state.queued_quality = MINOR;
 13743              		.loc 1 170 50 is_stmt 1 discriminator 1 view .LVU2871
 170:Brizachord.cpp **** 	else if (gpio_state.button_min.FallingEdge())   instrument_state.queued_quality = MINOR;
 13744              		.loc 1 170 82 is_stmt 0 discriminator 1 view .LVU2872
 13745 0184 0122     		movs	r2, #1
 13746 0186 84F8A020 		strb	r2, [r4, #160]
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13747              		.loc 1 176 2 is_stmt 1 discriminator 1 view .LVU2873
 13748              	.LVL624:
 13749              	.LBB8603:
  65:../../libDaisy//src/hid/switch.h **** 
 13750              		.loc 11 65 17 discriminator 1 view .LVU2874
 13751              	.LBB8105:
  65:../../libDaisy//src/hid/switch.h **** 
 13752              		.loc 11 65 38 discriminator 1 view .LVU2875
  65:../../libDaisy//src/hid/switch.h **** 
 13753              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU2876
 13754 018a 002B     		cmp	r3, #0
 13755 018c 3FF44EAF 		beq	.L406
 13756              	.LVL625:
  65:../../libDaisy//src/hid/switch.h **** 
 13757              		.loc 11 65 54 discriminator 1 view .LVU2877
 13758              	.LBE8105:
 13759              	.LBE8603:
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13760              		.loc 1 176 6 view .LVU2878
 13761 0190 94F89031 		ldrb	r3, [r4, #400]	@ zero_extendqisi2
 13762 0194 7F2B     		cmp	r3, #127
 13763 0196 3FF45AAF 		beq	.L407
 13764 019a 47E7     		b	.L406
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 669


 13765              	.L404:
 171:Brizachord.cpp **** 	else if (gpio_state.button_aug.FallingEdge())   instrument_state.queued_quality = AUGMENTED;
 13766              		.loc 1 171 7 is_stmt 1 view .LVU2879
 13767              	.LVL626:
 13768              	.LBB8604:
 13769              	.LBI8604:
  68:../../libDaisy//src/hid/switch.h ****     {
 13770              		.loc 11 68 17 view .LVU2880
 13771              	.LBB8605:
 13772              		.loc 11 70 9 view .LVU2881
 13773              		.loc 11 70 25 is_stmt 0 view .LVU2882
 13774 019c 94F8C011 		ldrb	r1, [r4, #448]	@ zero_extendqisi2
 13775 01a0 D1B9     		cbnz	r1, .L488
 13776              	.LVL627:
 13777              	.L408:
 13778              		.loc 11 70 25 view .LVU2883
 13779              	.LBE8605:
 13780              	.LBE8604:
 172:Brizachord.cpp **** 	else if (gpio_state.button_dim.FallingEdge())   instrument_state.queued_quality = DIMINISHED;
 13781              		.loc 1 172 7 is_stmt 1 view .LVU2884
 13782              	.LBB8606:
 13783              	.LBI8606:
  68:../../libDaisy//src/hid/switch.h ****     {
 13784              		.loc 11 68 17 view .LVU2885
 13785              	.LBB8607:
 13786              		.loc 11 70 9 view .LVU2886
 13787              		.loc 11 70 25 is_stmt 0 view .LVU2887
 13788 01a2 94F8E411 		ldrb	r1, [r4, #484]	@ zero_extendqisi2
 13789 01a6 31B1     		cbz	r1, .L409
 13790              	.LVL628:
 13791              		.loc 11 70 25 view .LVU2888
 13792              	.LBE8607:
 13793              	.LBE8606:
 172:Brizachord.cpp **** 	else if (gpio_state.button_dim.FallingEdge())   instrument_state.queued_quality = DIMINISHED;
 13794              		.loc 1 172 7 view .LVU2889
 13795 01a8 94F8FC11 		ldrb	r1, [r4, #508]	@ zero_extendqisi2
 13796 01ac 8029     		cmp	r1, #128
 13797 01ae 02D1     		bne	.L409
 172:Brizachord.cpp **** 	else if (gpio_state.button_dim.FallingEdge())   instrument_state.queued_quality = DIMINISHED;
 13798              		.loc 1 172 50 is_stmt 1 discriminator 1 view .LVU2890
 172:Brizachord.cpp **** 	else if (gpio_state.button_dim.FallingEdge())   instrument_state.queued_quality = DIMINISHED;
 13799              		.loc 1 172 82 is_stmt 0 discriminator 1 view .LVU2891
 13800 01b0 0321     		movs	r1, #3
 13801 01b2 84F8A010 		strb	r1, [r4, #160]
 13802              	.L409:
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13803              		.loc 1 176 2 is_stmt 1 view .LVU2892
 13804              	.LVL629:
 13805              	.LBB8608:
  65:../../libDaisy//src/hid/switch.h **** 
 13806              		.loc 11 65 17 view .LVU2893
 13807              	.LBB8106:
  65:../../libDaisy//src/hid/switch.h **** 
 13808              		.loc 11 65 38 view .LVU2894
  65:../../libDaisy//src/hid/switch.h **** 
 13809              		.loc 11 65 54 is_stmt 0 view .LVU2895
 13810 01b6 002B     		cmp	r3, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 670


 13811 01b8 3FF435AF 		beq	.L403
 13812              	.LVL630:
 13813              	.L489:
  65:../../libDaisy//src/hid/switch.h **** 
 13814              		.loc 11 65 54 view .LVU2896
 13815              	.LBE8106:
 13816              	.LBE8608:
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13817              		.loc 1 176 6 view .LVU2897
 13818 01bc 94F89031 		ldrb	r3, [r4, #400]	@ zero_extendqisi2
 13819 01c0 7F2B     		cmp	r3, #127
 13820 01c2 3FF444AF 		beq	.L407
 13821              	.LVL631:
 13822              	.LBB8609:
  65:../../libDaisy//src/hid/switch.h **** 
 13823              		.loc 11 65 17 is_stmt 1 view .LVU2898
 13824              	.LBB8110:
  65:../../libDaisy//src/hid/switch.h **** 
 13825              		.loc 11 65 38 view .LVU2899
  65:../../libDaisy//src/hid/switch.h **** 
 13826              		.loc 11 65 54 is_stmt 0 view .LVU2900
 13827 01c6 002A     		cmp	r2, #0
 13828 01c8 3FF430AF 		beq	.L406
 13829              	.LVL632:
 13830              	.L484:
  65:../../libDaisy//src/hid/switch.h **** 
 13831              		.loc 11 65 54 view .LVU2901
 13832 01cc 94F8B411 		ldrb	r1, [r4, #436]	@ zero_extendqisi2
 13833              	.LVL633:
  65:../../libDaisy//src/hid/switch.h **** 
 13834              		.loc 11 65 54 view .LVU2902
 13835              	.LBE8110:
 13836              	.LBE8609:
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13837              		.loc 1 176 44 view .LVU2903
 13838 01d0 7F29     		cmp	r1, #127
 13839 01d2 3FF43CAF 		beq	.L407
 13840 01d6 29E7     		b	.L406
 13841              	.LVL634:
 13842              	.L488:
 171:Brizachord.cpp **** 	else if (gpio_state.button_aug.FallingEdge())   instrument_state.queued_quality = AUGMENTED;
 13843              		.loc 1 171 7 view .LVU2904
 13844 01d8 94F8D811 		ldrb	r1, [r4, #472]	@ zero_extendqisi2
 13845 01dc 8029     		cmp	r1, #128
 13846 01de E0D1     		bne	.L408
 171:Brizachord.cpp **** 	else if (gpio_state.button_aug.FallingEdge())   instrument_state.queued_quality = AUGMENTED;
 13847              		.loc 1 171 50 is_stmt 1 discriminator 1 view .LVU2905
 171:Brizachord.cpp **** 	else if (gpio_state.button_aug.FallingEdge())   instrument_state.queued_quality = AUGMENTED;
 13848              		.loc 1 171 82 is_stmt 0 discriminator 1 view .LVU2906
 13849 01e0 0221     		movs	r1, #2
 13850 01e2 84F8A010 		strb	r1, [r4, #160]
 176:Brizachord.cpp **** 	if (!(gpio_state.button_maj.RisingEdge()  || gpio_state.button_min.RisingEdge()
 13851              		.loc 1 176 2 is_stmt 1 discriminator 1 view .LVU2907
 13852              	.LVL635:
 13853              	.LBB8610:
  65:../../libDaisy//src/hid/switch.h **** 
 13854              		.loc 11 65 17 discriminator 1 view .LVU2908
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 671


 13855              	.LBB8107:
  65:../../libDaisy//src/hid/switch.h **** 
 13856              		.loc 11 65 38 discriminator 1 view .LVU2909
  65:../../libDaisy//src/hid/switch.h **** 
 13857              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU2910
 13858 01e6 002B     		cmp	r3, #0
 13859 01e8 3FF41DAF 		beq	.L403
 13860 01ec E6E7     		b	.L489
 13861              	.LVL636:
 13862              	.L421:
  65:../../libDaisy//src/hid/switch.h **** 
 13863              		.loc 11 65 54 discriminator 1 view .LVU2911
 13864              	.LBE8107:
 13865              	.LBE8610:
 13866              	.LBB8611:
 13867              	.LBB8601:
 13868              	.LBB8594:
 13869              	.LBB8255:
 13870              	.LBB8251:
 13871              	.LBB8247:
 13872              	.LBB8243:
 13873              	.LBB8239:
 13874              	.LBB8235:
 13875              	.LBB8224:
 13876              	.LBB8219:
 13877              	.LBB8214:
 13878              	.LBB8209:
 13879              	.LBB8204:
 13880              	.LBB8189:
 13881              	.LBB8169:
 13882              	.LBB8166:
 13883              	.LBB8157:
 13884              	.LBI8157:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13885              		.loc 5 346 7 is_stmt 1 view .LVU2912
 13886              	.LBB8158:
 13887              	.LBI8158:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13888              		.loc 21 387 7 view .LVU2913
 13889              	.LBB8159:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13890              		.loc 21 389 2 view .LVU2914
 13891 01ee 002D     		cmp	r5, #0
 13892 01f0 33D1     		bne	.L490
 13893 01f2 3346     		mov	r3, r6
 13894 01f4 0DF11009 		add	r9, sp, #16
 13895              	.LVL637:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13896              		.loc 21 389 2 is_stmt 0 view .LVU2915
 13897 01f8 49E7     		b	.L422
 13898              	.LVL638:
 13899              	.L438:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13900              		.loc 21 389 2 view .LVU2916
 13901              	.LBE8159:
 13902              	.LBE8158:
 13903              	.LBE8157:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 672


 13904              	.LBE8166:
 13905              	.LBE8169:
 13906              	.LBE8189:
 13907              	.LBE8204:
 13908              	.LBE8209:
 13909              	.LBE8214:
 13910              	.LBE8219:
 13911              	.LBE8224:
 13912              	.LBE8235:
 13913              	.LBE8239:
 13914              	.LBE8243:
 13915              	.LBE8247:
 13916              	.LBE8251:
 13917              	.LBE8255:
 13918              	.LBE8594:
 13919              	.LBB8595:
 13920              	.LBB8548:
 13921              	.LBB8544:
 13922              	.LBB8474:
 13923              	.LBB8466:
 13924              	.LBB8459:
 13925              	.LBB8455:
 13926 01fa 2F46     		mov	r7, r5
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13927              		.loc 14 346 18 view .LVU2917
 13928 01fc 2B46     		mov	r3, r5
 13929 01fe 99E7     		b	.L431
 13930              	.LVL639:
 13931              	.L428:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13932              		.loc 14 346 18 view .LVU2918
 13933              	.LBE8455:
 13934              	.LBE8459:
 13935              	.LBE8466:
 13936              	.LBE8474:
 13937              	.LBE8544:
 13938              	.LBE8548:
 13939              	.LBE8595:
 13940              	.LBB8596:
 13941              	.LBB8402:
 13942              	.LBB8398:
 13943              	.LBB8394:
 13944              	.LBB8390:
 13945              	.LBB8386:
 13946              	.LBB8382:
 13947              	.LBB8379:
 13948              	.LBB8376:
 13949              	.LBB8373:
 13950              	.LBB8370:
 13951              	.LBB8367:
 13952              	.LBB8353:
 13953              	.LBB8333:
 13954              	.LBB8330:
 13955              	.LBB8321:
 13956              	.LBI8321:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13957              		.loc 5 346 7 is_stmt 1 view .LVU2919
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 673


 13958              	.LBB8322:
 13959              	.LBI8322:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13960              		.loc 21 387 7 view .LVU2920
 13961              	.LBB8323:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13962              		.loc 21 389 2 view .LVU2921
 13963 0200 45BB     		cbnz	r5, .L491
 13964 0202 3B46     		mov	r3, r7
 13965 0204 0BAE     		add	r6, sp, #44
 13966              	.LVL640:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13967              		.loc 21 389 2 is_stmt 0 view .LVU2922
 13968 0206 6EE7     		b	.L429
 13969              	.LVL641:
 13970              	.L486:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13971              		.loc 21 389 2 view .LVU2923
 13972              	.LBE8323:
 13973              	.LBE8322:
 13974              	.LBE8321:
 13975              	.LBE8330:
 13976              	.LBE8333:
 13977              	.LBE8353:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13978              		.loc 25 219 13 view .LVU2924
 13979 0208 0BAE     		add	r6, sp, #44
 13980              	.LVL642:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13981              		.loc 25 219 13 view .LVU2925
 13982 020a 4946     		mov	r1, r9
 13983 020c 0022     		movs	r2, #0
 13984 020e 3046     		mov	r0, r6
 13985 0210 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13986              	.LVL643:
 13987              	.LBB8354:
 13988              	.LBI8354:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13989              		.loc 5 178 7 is_stmt 1 view .LVU2926
 13990              	.LBE8354:
 13991              	.LBB8356:
 13992              	.LBB8357:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13993              		.loc 5 211 31 is_stmt 0 view .LVU2927
 13994 0214 049B     		ldr	r3, [sp, #16]
 13995              	.LBE8357:
 13996              	.LBE8356:
 13997              	.LBB8359:
 13998              	.LBB8355:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13999              		.loc 5 179 26 view .LVU2928
 14000 0216 0B90     		str	r0, [sp, #44]
 14001              	.LVL644:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14002              		.loc 5 179 26 view .LVU2929
 14003              	.LBE8355:
 14004              	.LBE8359:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 674


 14005              	.LBB8360:
 14006              	.LBI8356:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14007              		.loc 5 210 7 is_stmt 1 view .LVU2930
 14008              	.LBB8358:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14009              		.loc 5 211 31 is_stmt 0 view .LVU2931
 14010 0218 0D93     		str	r3, [sp, #52]
 14011              	.LVL645:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14012              		.loc 5 211 31 view .LVU2932
 14013              	.LBE8358:
 14014              	.LBE8360:
 14015              	.LBB8361:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14016              		.loc 5 186 7 is_stmt 1 view .LVU2933
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14017              		.loc 5 186 7 is_stmt 0 view .LVU2934
 14018              	.LBE8361:
 14019              	.LBB8362:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14020              		.loc 5 392 7 is_stmt 1 view .LVU2935
 14021              	.LBB8334:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14022              		.loc 5 346 7 view .LVU2936
 14023              	.LBB8331:
 14024              	.LBB8328:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14025              		.loc 5 346 7 view .LVU2937
 14026              	.LBB8326:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14027              		.loc 21 387 7 view .LVU2938
 14028              	.LBB8324:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14029              		.loc 21 389 2 view .LVU2939
 14030              	.L427:
 14031              		.loc 21 395 2 view .LVU2940
 14032              		.loc 21 395 49 is_stmt 0 view .LVU2941
 14033 021a 2A46     		mov	r2, r5
 14034 021c 4146     		mov	r1, r8
 14035 021e FFF7FEFF 		bl	memcpy
 14036              	.LVL646:
 14037              		.loc 21 395 49 view .LVU2942
 14038              	.LBE8324:
 14039              	.LBE8326:
 14040              	.LBE8328:
 14041              	.LBE8331:
 14042              	.LBE8334:
 14043              	.LBE8362:
 14044              		.loc 25 232 15 view .LVU2943
 14045 0222 049D     		ldr	r5, [sp, #16]
 14046              	.LVL647:
 14047              	.LBB8363:
 14048              	.LBB8351:
 14049              	.LBB8349:
 14050              	.LBB8346:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 675


 14051              		.loc 5 187 28 view .LVU2944
 14052 0224 0B9B     		ldr	r3, [sp, #44]
 14053              	.LBE8346:
 14054              	.LBE8349:
 14055              	.LBE8351:
 14056              	.LBE8363:
 14057              	.LBB8364:
 14058              	.LBB8335:
 14059              	.LBB8332:
 14060              	.LBB8329:
 14061              	.LBB8327:
 14062              	.LBB8325:
 14063              		.loc 21 395 66 view .LVU2945
 14064 0226 5EE7     		b	.L429
 14065              	.LVL648:
 14066              	.L485:
 14067              		.loc 21 395 66 view .LVU2946
 14068              	.LBE8325:
 14069              	.LBE8327:
 14070              	.LBE8329:
 14071              	.LBE8332:
 14072              	.LBE8335:
 14073              	.LBE8364:
 14074              	.LBE8367:
 14075              	.LBE8370:
 14076              	.LBE8373:
 14077              	.LBE8376:
 14078              	.LBE8379:
 14079              	.LBE8382:
 14080              	.LBE8386:
 14081              	.LBE8390:
 14082              	.LBE8394:
 14083              	.LBE8398:
 14084              	.LBE8402:
 14085              	.LBE8596:
 14086              	.LBB8597:
 14087              	.LBB8256:
 14088              	.LBB8252:
 14089              	.LBB8248:
 14090              	.LBB8244:
 14091              	.LBB8240:
 14092              	.LBB8236:
 14093              	.LBB8225:
 14094              	.LBB8220:
 14095              	.LBB8215:
 14096              	.LBB8210:
 14097              	.LBB8205:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14098              		.loc 25 219 13 view .LVU2947
 14099 0228 0DF11009 		add	r9, sp, #16
 14100              	.LVL649:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14101              		.loc 25 219 13 view .LVU2948
 14102 022c 0022     		movs	r2, #0
 14103 022e 0BA9     		add	r1, sp, #44
 14104 0230 4846     		mov	r0, r9
 14105              	.LVL650:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 676


 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14106              		.loc 25 219 13 view .LVU2949
 14107 0232 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 14108              	.LVL651:
 14109              	.LBB8190:
 14110              	.LBI8190:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 14111              		.loc 5 178 7 is_stmt 1 view .LVU2950
 14112              	.LBE8190:
 14113              	.LBB8192:
 14114              	.LBB8193:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14115              		.loc 5 211 31 is_stmt 0 view .LVU2951
 14116 0236 0B9B     		ldr	r3, [sp, #44]
 14117              	.LBE8193:
 14118              	.LBE8192:
 14119              	.LBB8195:
 14120              	.LBB8191:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14121              		.loc 5 179 26 view .LVU2952
 14122 0238 0490     		str	r0, [sp, #16]
 14123              	.LVL652:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14124              		.loc 5 179 26 view .LVU2953
 14125              	.LBE8191:
 14126              	.LBE8195:
 14127              	.LBB8196:
 14128              	.LBI8192:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14129              		.loc 5 210 7 is_stmt 1 view .LVU2954
 14130              	.LBB8194:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14131              		.loc 5 211 31 is_stmt 0 view .LVU2955
 14132 023a 0693     		str	r3, [sp, #24]
 14133              	.LVL653:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14134              		.loc 5 211 31 view .LVU2956
 14135              	.LBE8194:
 14136              	.LBE8196:
 14137              	.LBB8197:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14138              		.loc 5 186 7 is_stmt 1 view .LVU2957
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14139              		.loc 5 186 7 is_stmt 0 view .LVU2958
 14140              	.LBE8197:
 14141              	.LBB8198:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14142              		.loc 5 392 7 is_stmt 1 view .LVU2959
 14143              	.LBB8170:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14144              		.loc 5 346 7 view .LVU2960
 14145              	.LBB8167:
 14146              	.LBB8164:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14147              		.loc 5 346 7 view .LVU2961
 14148              	.LBB8162:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 677


 14149              		.loc 21 387 7 view .LVU2962
 14150              	.LBB8160:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14151              		.loc 21 389 2 view .LVU2963
 14152              	.L420:
 14153              		.loc 21 395 2 view .LVU2964
 14154              		.loc 21 395 49 is_stmt 0 view .LVU2965
 14155 023c 2A46     		mov	r2, r5
 14156 023e 3946     		mov	r1, r7
 14157 0240 FFF7FEFF 		bl	memcpy
 14158              	.LVL654:
 14159              		.loc 21 395 49 view .LVU2966
 14160              	.LBE8160:
 14161              	.LBE8162:
 14162              	.LBE8164:
 14163              	.LBE8167:
 14164              	.LBE8170:
 14165              	.LBE8198:
 14166              		.loc 25 232 15 view .LVU2967
 14167 0244 0B9D     		ldr	r5, [sp, #44]
 14168              	.LVL655:
 14169              	.LBB8199:
 14170              	.LBB8187:
 14171              	.LBB8185:
 14172              	.LBB8182:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14173              		.loc 5 187 28 view .LVU2968
 14174 0246 049B     		ldr	r3, [sp, #16]
 14175              	.LBE8182:
 14176              	.LBE8185:
 14177              	.LBE8187:
 14178              	.LBE8199:
 14179              	.LBB8200:
 14180              	.LBB8171:
 14181              	.LBB8168:
 14182              	.LBB8165:
 14183              	.LBB8163:
 14184              	.LBB8161:
 14185              		.loc 21 395 66 view .LVU2969
 14186 0248 21E7     		b	.L422
 14187              	.LVL656:
 14188              	.L424:
 14189              		.loc 21 395 66 view .LVU2970
 14190              	.LBE8161:
 14191              	.LBE8163:
 14192              	.LBE8165:
 14193              	.LBE8168:
 14194              	.LBE8171:
 14195              	.LBE8200:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14196              		.loc 25 212 28 view .LVU2971
 14197 024a 0748     		ldr	r0, .L492+4
 14198 024c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 14199              	.LVL657:
 14200              	.L487:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14201              		.loc 25 212 28 view .LVU2972
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 678


 14202              	.LBE8205:
 14203              	.LBE8210:
 14204              	.LBE8215:
 14205              	.LBE8220:
 14206              	.LBE8225:
 14207              	.LBE8236:
 14208              	.LBE8240:
 14209              	.LBE8244:
 14210              	.LBE8248:
 14211              	.LBE8252:
 14212              	.LBE8256:
 14213              	.LBE8597:
 14214              	.LBB8598:
 14215              	.LBB8549:
 14216              	.LBB8545:
 14217              	.LBB8475:
 14218              	.LBB8467:
 14219              	.LBB8460:
 14220              	.LBB8456:
 14221              	.LBB8452:
 14222              	.LBB8450:
 14223              	.LBB8448:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14224              		.loc 7 106 26 view .LVU2973
 14225 0250 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 14226              	.LVL658:
 14227              	.L491:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14228              		.loc 7 106 26 view .LVU2974
 14229              	.LBE8448:
 14230              	.LBE8450:
 14231              	.LBE8452:
 14232              	.LBE8456:
 14233              	.LBE8460:
 14234              	.LBE8467:
 14235              	.LBE8475:
 14236              	.LBE8545:
 14237              	.LBE8549:
 14238              	.LBE8598:
 14239              	.LBB8599:
 14240              	.LBB8403:
 14241              	.LBB8399:
 14242              	.LBB8395:
 14243              	.LBB8391:
 14244              	.LBB8387:
 14245              	.LBB8383:
 14246              	.LBB8380:
 14247              	.LBB8377:
 14248              	.LBB8374:
 14249              	.LBB8371:
 14250              	.LBB8368:
 14251              	.LBB8365:
 14252              	.LBB8315:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14253              		.loc 5 187 28 view .LVU2975
 14254 0254 3846     		mov	r0, r7
 14255 0256 0BAE     		add	r6, sp, #44
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 679


 14256              	.LVL659:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14257              		.loc 5 187 28 view .LVU2976
 14258 0258 DFE7     		b	.L427
 14259              	.LVL660:
 14260              	.L490:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14261              		.loc 5 187 28 view .LVU2977
 14262              	.LBE8315:
 14263              	.LBE8365:
 14264              	.LBE8368:
 14265              	.LBE8371:
 14266              	.LBE8374:
 14267              	.LBE8377:
 14268              	.LBE8380:
 14269              	.LBE8383:
 14270              	.LBE8387:
 14271              	.LBE8391:
 14272              	.LBE8395:
 14273              	.LBE8399:
 14274              	.LBE8403:
 14275              	.LBE8599:
 14276              	.LBB8600:
 14277              	.LBB8257:
 14278              	.LBB8253:
 14279              	.LBB8249:
 14280              	.LBB8245:
 14281              	.LBB8241:
 14282              	.LBB8237:
 14283              	.LBB8226:
 14284              	.LBB8221:
 14285              	.LBB8216:
 14286              	.LBB8211:
 14287              	.LBB8206:
 14288              	.LBB8201:
 14289              	.LBB8151:
 14290 025a 3046     		mov	r0, r6
 14291              	.LVL661:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14292              		.loc 5 187 28 view .LVU2978
 14293 025c 0DF11009 		add	r9, sp, #16
 14294              	.LVL662:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14295              		.loc 5 187 28 view .LVU2979
 14296 0260 ECE7     		b	.L420
 14297              	.L493:
 14298 0262 00BF     		.align	2
 14299              	.L492:
 14300 0264 FCFFFF7F 		.word	2147483644
 14301 0268 00000000 		.word	.LC1
 14302              	.LBE8151:
 14303              	.LBE8201:
 14304              	.LBE8206:
 14305              	.LBE8211:
 14306              	.LBE8216:
 14307              	.LBE8221:
 14308              	.LBE8226:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 680


 14309              	.LBE8237:
 14310              	.LBE8241:
 14311              	.LBE8245:
 14312              	.LBE8249:
 14313              	.LBE8253:
 14314              	.LBE8257:
 14315              	.LBE8600:
 14316              	.LBE8601:
 14317              	.LBE8611:
 14318              		.cfi_endproc
 14319              	.LFE5613:
 14321              		.section	.text._ZN10Brizachord14poll_chord_extEv,"ax",%progbits
 14322              		.align	1
 14323              		.p2align 2,,3
 14324              		.global	_ZN10Brizachord14poll_chord_extEv
 14325              		.syntax unified
 14326              		.thumb
 14327              		.thumb_func
 14328              		.fpu fpv5-d16
 14330              	_ZN10Brizachord14poll_chord_extEv:
 14331              	.LVL663:
 14332              	.LFB5614:
 200:Brizachord.cpp **** void Brizachord::poll_chord_ext() {
 14333              		.loc 1 200 35 is_stmt 1 view -0
 14334              		.cfi_startproc
 14335              		@ args = 0, pretend = 0, frame = 72
 14336              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 14337              		.loc 1 202 2 view .LVU2981
 14338              	.LBB8874:
 14339              	.LBB8875:
 14340              		.loc 11 70 16 is_stmt 0 view .LVU2982
 14341 0000 90F8C430 		ldrb	r3, [r0, #196]	@ zero_extendqisi2
 14342              	.LBE8875:
 14343              	.LBE8874:
 200:Brizachord.cpp **** void Brizachord::poll_chord_ext() {
 14344              		.loc 1 200 35 view .LVU2983
 14345 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 14346              		.cfi_def_cfa_offset 32
 14347              		.cfi_offset 4, -32
 14348              		.cfi_offset 5, -28
 14349              		.cfi_offset 6, -24
 14350              		.cfi_offset 7, -20
 14351              		.cfi_offset 8, -16
 14352              		.cfi_offset 9, -12
 14353              		.cfi_offset 10, -8
 14354              		.cfi_offset 14, -4
 14355 0008 0446     		mov	r4, r0
 14356              	.LVL664:
 14357              	.LBB8878:
 14358              	.LBI8874:
  68:../../libDaisy//src/hid/switch.h ****     {
 14359              		.loc 11 68 17 is_stmt 1 view .LVU2984
 14360              	.LBB8876:
 14361              		.loc 11 70 9 view .LVU2985
 14362              	.LBE8876:
 14363              	.LBE8878:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 681


 200:Brizachord.cpp **** void Brizachord::poll_chord_ext() {
 14364              		.loc 1 200 35 is_stmt 0 view .LVU2986
 14365 000a 92B0     		sub	sp, sp, #72
 14366              		.cfi_def_cfa_offset 104
 14367              	.LBB8879:
 14368              	.LBB8877:
 14369              		.loc 11 70 25 view .LVU2987
 14370 000c 002B     		cmp	r3, #0
 14371 000e 00F0B380 		beq	.L495
 14372              	.LVL665:
 14373              		.loc 11 70 25 view .LVU2988
 14374              	.LBE8877:
 14375              	.LBE8879:
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 14376              		.loc 1 202 2 view .LVU2989
 14377 0012 90F8DC20 		ldrb	r2, [r0, #220]	@ zero_extendqisi2
 14378 0016 802A     		cmp	r2, #128
 14379 0018 40F0AE80 		bne	.L495
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 14380              		.loc 1 202 50 is_stmt 1 discriminator 1 view .LVU2990
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 14381              		.loc 1 202 84 is_stmt 0 discriminator 1 view .LVU2991
 14382 001c 0023     		movs	r3, #0
 14383              	.LBB8880:
 14384              	.LBB8881:
 14385              		.loc 11 70 16 discriminator 1 view .LVU2992
 14386 001e 90F8E820 		ldrb	r2, [r0, #232]	@ zero_extendqisi2
 14387              	.LBE8881:
 14388              	.LBE8880:
 202:Brizachord.cpp **** 	if (gpio_state.button_triad.FallingEdge())      instrument_state.queued_extension = TRIAD;
 14389              		.loc 1 202 84 discriminator 1 view .LVU2993
 14390 0022 80F8A130 		strb	r3, [r0, #161]
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 14391              		.loc 1 209 3 is_stmt 1 discriminator 1 view .LVU2994
 14392              	.LVL666:
 14393              	.LBB8883:
 14394              	.LBI8883:
  65:../../libDaisy//src/hid/switch.h **** 
 14395              		.loc 11 65 17 discriminator 1 view .LVU2995
 14396              	.LBB8884:
  65:../../libDaisy//src/hid/switch.h **** 
 14397              		.loc 11 65 38 discriminator 1 view .LVU2996
 14398              	.L496:
  65:../../libDaisy//src/hid/switch.h **** 
 14399              		.loc 11 65 38 is_stmt 0 discriminator 1 view .LVU2997
 14400              	.LBE8884:
 14401              	.LBE8883:
 14402              	.LBB8889:
 14403              	.LBI8889:
  65:../../libDaisy//src/hid/switch.h **** 
 14404              		.loc 11 65 17 is_stmt 1 view .LVU2998
 14405              	.LBB8890:
  65:../../libDaisy//src/hid/switch.h **** 
 14406              		.loc 11 65 38 view .LVU2999
  65:../../libDaisy//src/hid/switch.h **** 
 14407              		.loc 11 65 54 is_stmt 0 view .LVU3000
 14408 0026 002A     		cmp	r2, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 682


 14409 0028 40F0D180 		bne	.L588
 14410              	.LVL667:
 14411              	.L499:
  65:../../libDaisy//src/hid/switch.h **** 
 14412              		.loc 11 65 54 view .LVU3001
 14413              	.LBE8890:
 14414              	.LBE8889:
 14415              	.LBB8892:
 14416              	.LBI8892:
  65:../../libDaisy//src/hid/switch.h **** 
 14417              		.loc 11 65 17 is_stmt 1 view .LVU3002
 14418              	.LBB8893:
  65:../../libDaisy//src/hid/switch.h **** 
 14419              		.loc 11 65 38 view .LVU3003
  65:../../libDaisy//src/hid/switch.h **** 
 14420              		.loc 11 65 54 is_stmt 0 view .LVU3004
 14421 002c 94F80C31 		ldrb	r3, [r4, #268]	@ zero_extendqisi2
 14422 0030 1BB1     		cbz	r3, .L509
 14423              	.LVL668:
  65:../../libDaisy//src/hid/switch.h **** 
 14424              		.loc 11 65 54 view .LVU3005
 14425              	.LBE8893:
 14426              	.LBE8892:
 211:Brizachord.cpp **** 			|| gpio_state.button_7th.RisingEdge()
 14427              		.loc 1 211 4 view .LVU3006
 14428 0032 94F82431 		ldrb	r3, [r4, #292]	@ zero_extendqisi2
 14429 0036 7F2B     		cmp	r3, #127
 14430 0038 09D0     		beq	.L500
 14431              	.L509:
 14432              	.LVL669:
 14433              	.LBB8894:
 14434              	.LBI8894:
  65:../../libDaisy//src/hid/switch.h **** 
 14435              		.loc 11 65 17 is_stmt 1 view .LVU3007
 14436              	.LBB8895:
  65:../../libDaisy//src/hid/switch.h **** 
 14437              		.loc 11 65 38 view .LVU3008
  65:../../libDaisy//src/hid/switch.h **** 
 14438              		.loc 11 65 54 is_stmt 0 view .LVU3009
 14439 003a 94F83031 		ldrb	r3, [r4, #304]	@ zero_extendqisi2
 14440 003e 002B     		cmp	r3, #0
 14441 0040 00F0D680 		beq	.L510
 14442              	.LVL670:
  65:../../libDaisy//src/hid/switch.h **** 
 14443              		.loc 11 65 54 view .LVU3010
 14444              	.LBE8895:
 14445              	.LBE8894:
 212:Brizachord.cpp **** 			||gpio_state.button_9th.RisingEdge() 
 14446              		.loc 1 212 4 view .LVU3011
 14447 0044 94F84831 		ldrb	r3, [r4, #328]	@ zero_extendqisi2
 14448 0048 7F2B     		cmp	r3, #127
 14449 004a 40F0D180 		bne	.L510
 14450              	.L500:
 217:Brizachord.cpp **** 	if (instrument_state.queued_extension != instrument_state.chord.extension) {
 14451              		.loc 1 217 2 is_stmt 1 view .LVU3012
 14452              	.LBB8896:
 217:Brizachord.cpp **** 	if (instrument_state.queued_extension != instrument_state.chord.extension) {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 683


 14453              		.loc 1 217 23 is_stmt 0 view .LVU3013
 14454 004e 94F8A130 		ldrb	r3, [r4, #161]	@ zero_extendqisi2
 217:Brizachord.cpp **** 	if (instrument_state.queued_extension != instrument_state.chord.extension) {
 14455              		.loc 1 217 2 view .LVU3014
 14456 0052 94F89D20 		ldrb	r2, [r4, #157]	@ zero_extendqisi2
 14457 0056 9A42     		cmp	r2, r3
 14458 0058 00F08B80 		beq	.L494
 14459              	.LBB8897:
 218:Brizachord.cpp **** 		instrument_state.chord.extension = instrument_state.queued_extension;
 14460              		.loc 1 218 3 is_stmt 1 view .LVU3015
 218:Brizachord.cpp **** 		instrument_state.chord.extension = instrument_state.queued_extension;
 14461              		.loc 1 218 36 is_stmt 0 view .LVU3016
 14462 005c 84F89D30 		strb	r3, [r4, #157]
 220:Brizachord.cpp **** 		__disable_irq();
 14463              		.loc 1 220 3 is_stmt 1 view .LVU3017
 14464              	.LBB8898:
 14465              	.LBI8898:
 960:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 14466              		.loc 30 960 27 view .LVU3018
 14467              	.LBB8899:
 14468              		.loc 30 962 3 view .LVU3019
 14469              		.syntax unified
 14470              	@ 962 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 14471 0060 72B6     		cpsid i
 14472              	@ 0 "" 2
 14473              		.thumb
 14474              		.syntax unified
 14475              	.LBE8899:
 14476              	.LBE8898:
 221:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 14477              		.loc 1 221 3 view .LVU3020
 14478              	.LVL671:
 14479              	.LBB8900:
 14480              	.LBI8900:
 14481              		.loc 31 25 8 view .LVU3021
 14482              	.LBB8901:
 14483              	.LBB8902:
 14484              	.LBB8903:
 14485              	.LBI8903:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 14486              		.loc 5 448 7 view .LVU3022
 14487              	.LBB8904:
 14488              	.LBB8905:
 14489              	.LBB8906:
 14490              	.LBI8906:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14491              		.loc 5 190 7 view .LVU3023
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14492              		.loc 5 190 7 is_stmt 0 view .LVU3024
 14493              	.LBE8906:
 14494              	.LBB8907:
 14495              	.LBI8907:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14496              		.loc 5 290 7 is_stmt 1 view .LVU3025
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14497              		.loc 5 290 7 is_stmt 0 view .LVU3026
 14498              	.LBE8907:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 684


 14499              	.LBB8908:
 14500              	.LBI8908:
 14501              		.loc 26 97 29 is_stmt 1 view .LVU3027
 14502              	.LBB8909:
 14503              	.LBI8909:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 14504              		.loc 6 558 7 view .LVU3028
 14505              	.LBB8910:
 14506              	.LBI8910:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14507              		.loc 9 147 7 view .LVU3029
 14508              	.LBB8911:
 14509              	.LBI8911:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14510              		.loc 7 82 7 view .LVU3030
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14511              		.loc 7 82 7 is_stmt 0 view .LVU3031
 14512              	.LBE8911:
 14513              	.LBE8910:
 14514              	.LBE8909:
 14515              	.LBE8908:
 14516              	.LBB8912:
 14517              	.LBI8912:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14518              		.loc 5 159 2 is_stmt 1 view .LVU3032
 14519              	.LBB8913:
 14520              	.LBB8914:
 14521              	.LBB8915:
 14522              	.LBI8915:
 14523              		.loc 27 101 5 view .LVU3033
 14524              		.loc 27 101 5 is_stmt 0 view .LVU3034
 14525              	.LBE8915:
 14526              	.LBB8916:
 14527              	.LBI8916:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14528              		.loc 9 147 7 is_stmt 1 view .LVU3035
 14529              	.LBB8917:
 14530              	.LBI8917:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14531              		.loc 7 82 7 view .LVU3036
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14532              		.loc 7 82 7 is_stmt 0 view .LVU3037
 14533              	.LBE8917:
 14534              	.LBE8916:
 14535              	.LBE8914:
 14536              	.LBE8913:
 14537              	.LBE8912:
 14538              	.LBB8922:
 14539              	.LBB8923:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14540              		.loc 5 908 16 view .LVU3038
 14541 0062 D4E92175 		ldrd	r7, r5, [r4, #132]
 14542              	.LBE8923:
 14543              	.LBE8922:
 14544              	.LBB8924:
 14545              	.LBB8920:
 14546              	.LBB8918:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 685


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14547              		.loc 5 160 46 view .LVU3039
 14548 0066 06AE     		add	r6, sp, #24
 14549              	.LVL672:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14550              		.loc 5 160 46 view .LVU3040
 14551              	.LBE8918:
 14552              	.LBE8920:
 14553              	.LBE8924:
 14554              	.LBB8925:
 14555              	.LBB8926:
 14556              	.LBB8927:
 14557              	.LBB8928:
 14558              	.LBB8929:
 14559              	.LBB8930:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14560              		.loc 25 211 42 view .LVU3041
 14561 0068 EF42     		cmn	r7, r5
 14562              	.LBE8930:
 14563              	.LBE8929:
 14564              	.LBE8928:
 14565              	.LBE8927:
 14566              	.LBE8926:
 14567              	.LBE8925:
 14568              	.LBB9008:
 14569              	.LBB8921:
 14570              	.LBB8919:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14571              		.loc 5 160 46 view .LVU3042
 14572 006a 0496     		str	r6, [sp, #16]
 14573              	.LVL673:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14574              		.loc 5 160 46 view .LVU3043
 14575              	.LBE8919:
 14576              	.LBE8921:
 14577              	.LBE9008:
 14578              	.LBB9009:
 14579              	.LBI9009:
 14580              		.loc 9 162 7 is_stmt 1 view .LVU3044
 14581              	.LBB9010:
 14582              	.LBI9010:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14583              		.loc 7 89 7 view .LVU3045
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14584              		.loc 7 89 7 is_stmt 0 view .LVU3046
 14585              	.LBE9010:
 14586              	.LBE9009:
 14587              	.LBB9011:
 14588              	.LBI9011:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14589              		.loc 5 186 7 is_stmt 1 view .LVU3047
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14590              		.loc 5 186 7 is_stmt 0 view .LVU3048
 14591              	.LBE9011:
 14592              	.LBB9012:
 14593              	.LBI9012:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 686


 14594              		.loc 5 186 7 is_stmt 1 view .LVU3049
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14595              		.loc 5 186 7 is_stmt 0 view .LVU3050
 14596              	.LBE9012:
 14597              	.LBB9013:
 14598              	.LBI8922:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14599              		.loc 5 907 7 is_stmt 1 view .LVU3051
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14600              		.loc 5 907 7 is_stmt 0 view .LVU3052
 14601              	.LBE9013:
 14602              	.LBB9014:
 14603              	.LBI8925:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14604              		.loc 5 263 9 is_stmt 1 view .LVU3053
 14605              	.LBB9003:
 14606              	.LBB8998:
 14607              	.LBI8927:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14608              		.loc 5 243 9 view .LVU3054
 14609              	.LBB8993:
 14610              	.LBB8988:
 14611              	.LBI8929:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14612              		.loc 25 206 7 view .LVU3055
 14613              	.LBB8983:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14614              		.loc 25 211 42 is_stmt 0 view .LVU3056
 14615 006c 02D0     		beq	.L513
 14616 006e 002F     		cmp	r7, #0
 14617 0070 00F00581 		beq	.L519
 14618              	.L513:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14619              		.loc 25 217 2 view .LVU3057
 14620 0074 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14621              		.loc 25 215 12 view .LVU3058
 14622 0076 0B95     		str	r5, [sp, #44]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14623              		.loc 25 217 2 view .LVU3059
 14624 0078 00F2F080 		bhi	.L589
 14625              	.LVL674:
 14626              	.LBB8931:
 14627              	.LBI8931:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14628              		.loc 5 186 7 is_stmt 1 view .LVU3060
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14629              		.loc 5 186 7 is_stmt 0 view .LVU3061
 14630              	.LBE8931:
 14631              	.LBB8933:
 14632              	.LBI8933:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14633              		.loc 5 392 7 is_stmt 1 view .LVU3062
 14634              	.LBB8934:
 14635              	.LBI8934:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14636              		.loc 5 346 7 view .LVU3063
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 687


 14637              	.LBB8935:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14638              		.loc 5 348 2 is_stmt 0 view .LVU3064
 14639 007c 012D     		cmp	r5, #1
 14640 007e 40F0D080 		bne	.L516
 14641              	.LVL675:
 14642              	.LBB8936:
 14643              	.LBI8936:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14644              		.loc 21 321 7 is_stmt 1 view .LVU3065
 14645              	.LBB8937:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14646              		.loc 21 322 9 view .LVU3066
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14647              		.loc 21 322 16 is_stmt 0 view .LVU3067
 14648 0082 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14649              		.loc 21 322 22 view .LVU3068
 14650 0084 3246     		mov	r2, r6
 14651 0086 0DF11009 		add	r9, sp, #16
 14652              	.LVL676:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14653              		.loc 21 322 14 view .LVU3069
 14654 008a 8DF81830 		strb	r3, [sp, #24]
 14655              	.LVL677:
 14656              	.L517:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14657              		.loc 21 322 14 view .LVU3070
 14658              	.LBE8937:
 14659              	.LBE8936:
 14660              	.LBE8935:
 14661              	.LBE8934:
 14662              	.LBE8933:
 14663              	.LBB8953:
 14664              	.LBI8953:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14665              		.loc 5 214 7 is_stmt 1 view .LVU3071
 14666              	.LBB8954:
 14667              	.LBB8955:
 14668              	.LBI8955:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 14669              		.loc 5 182 7 view .LVU3072
 14670              	.LBE8955:
 14671              	.LBB8957:
 14672              	.LBB8958:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14673              		.loc 21 322 14 is_stmt 0 view .LVU3073
 14674 008e 0023     		movs	r3, #0
 14675              	.LBE8958:
 14676              	.LBE8957:
 14677              	.LBB8961:
 14678              	.LBB8956:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14679              		.loc 5 183 26 view .LVU3074
 14680 0090 0595     		str	r5, [sp, #20]
 14681              	.LVL678:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 688


 14682              		.loc 5 183 26 view .LVU3075
 14683              	.LBE8956:
 14684              	.LBE8961:
 14685              	.LBB8962:
 14686              	.LBI8962:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14687              		.loc 5 186 7 is_stmt 1 view .LVU3076
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14688              		.loc 5 186 7 is_stmt 0 view .LVU3077
 14689              	.LBE8962:
 14690              	.LBB8964:
 14691              	.LBI8957:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14692              		.loc 21 321 7 is_stmt 1 view .LVU3078
 14693              	.LBB8959:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14694              		.loc 21 322 9 view .LVU3079
 14695              	.LBE8959:
 14696              	.LBE8964:
 14697              	.LBE8954:
 14698              	.LBE8953:
 14699              	.LBE8983:
 14700              	.LBE8988:
 14701              	.LBE8993:
 14702              	.LBE8998:
 14703              	.LBE9003:
 14704              	.LBE9014:
 14705              	.LBE8905:
 14706              	.LBE8904:
 14707              	.LBE8903:
 14708              	.LBE8902:
 14709              	.LBE8901:
 14710              	.LBE8900:
 221:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 14711              		.loc 1 221 57 is_stmt 0 view .LVU3080
 14712 0092 01A8     		add	r0, sp, #4
 14713 0094 4946     		mov	r1, r9
 14714              	.LBB9039:
 14715              	.LBB9035:
 14716              	.LBB9031:
 14717              	.LBB9027:
 14718              	.LBB9023:
 14719              	.LBB9019:
 14720              	.LBB9015:
 14721              	.LBB9004:
 14722              	.LBB8999:
 14723              	.LBB8994:
 14724              	.LBB8989:
 14725              	.LBB8984:
 14726              	.LBB8969:
 14727              	.LBB8967:
 14728              	.LBB8965:
 14729              	.LBB8960:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14730              		.loc 21 322 14 view .LVU3081
 14731 0096 5355     		strb	r3, [r2, r5]
 14732              	.LVL679:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 689


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14733              		.loc 21 322 14 view .LVU3082
 14734              	.LBE8960:
 14735              	.LBE8965:
 14736              	.LBE8967:
 14737              	.LBE8969:
 14738              	.LBE8984:
 14739              	.LBE8989:
 14740              	.LBE8994:
 14741              	.LBE8999:
 14742              	.LBE9004:
 14743              	.LBE9015:
 14744              	.LBE9019:
 14745              	.LBE9023:
 14746              	.LBE9027:
 14747              		.loc 31 25 8 view .LVU3083
 14748 0098 B4F89C30 		ldrh	r3, [r4, #156]
 14749 009c ADF82830 		strh	r3, [sp, #40]	@ movhi
 14750              	.LVL680:
 14751              		.loc 31 25 8 view .LVU3084
 14752              	.LBE9031:
 14753              	.LBE9035:
 14754              	.LBE9039:
 221:Brizachord.cpp **** 		auto midi_notes = chord_to_midi(instrument_state.chord);
 14755              		.loc 1 221 57 view .LVU3085
 14756 00a0 FFF7FEFF 		bl	_Z13chord_to_midi5Chord
 14757              	.LVL681:
 14758              	.LBB9040:
 14759              	.LBI9040:
 14760              		.loc 31 25 8 is_stmt 1 view .LVU3086
 14761              	.LBB9041:
 14762              	.LBI9041:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14763              		.loc 5 657 7 view .LVU3087
 14764              	.LBB9042:
 14765              	.LBI9042:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14766              		.loc 5 229 7 view .LVU3088
 14767              	.LBB9043:
 14768              	.LBB9044:
 14769              	.LBI9044:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 14770              		.loc 5 221 7 view .LVU3089
 14771              	.LBB9045:
 14772              	.LBI9045:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14773              		.loc 5 186 7 view .LVU3090
 14774              	.LBB9046:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14775              		.loc 5 187 28 is_stmt 0 view .LVU3091
 14776 00a4 0498     		ldr	r0, [sp, #16]
 14777              	.LVL682:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14778              		.loc 5 187 28 view .LVU3092
 14779              	.LBE9046:
 14780              	.LBE9045:
 14781              	.LBB9047:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 690


 14782              	.LBI9047:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14783              		.loc 5 200 7 is_stmt 1 view .LVU3093
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14784              		.loc 5 200 7 is_stmt 0 view .LVU3094
 14785              	.LBE9047:
 14786              	.LBE9044:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14787              		.loc 5 231 2 view .LVU3095
 14788 00a6 B042     		cmp	r0, r6
 14789 00a8 03D0     		beq	.L518
 14790              	.LVL683:
 14791              	.LBB9048:
 14792              	.LBI9048:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14793              		.loc 5 236 7 is_stmt 1 view .LVU3096
 14794              	.LBB9049:
 14795              	.LBB9050:
 14796              	.LBI9050:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14797              		.loc 6 491 7 view .LVU3097
 14798              	.LBB9051:
 14799              	.LBI9051:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 14800              		.loc 7 120 7 view .LVU3098
 14801              	.LBE9051:
 14802              	.LBE9050:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14803              		.loc 5 237 34 is_stmt 0 view .LVU3099
 14804 00aa 0699     		ldr	r1, [sp, #24]
 14805              	.LBB9054:
 14806              	.LBB9053:
 14807              	.LBB9052:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 14808              		.loc 7 133 19 view .LVU3100
 14809 00ac 0131     		adds	r1, r1, #1
 14810              	.LVL684:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 14811              		.loc 7 133 19 view .LVU3101
 14812 00ae FFF7FEFF 		bl	_ZdlPvj
 14813              	.LVL685:
 14814              	.L518:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 14815              		.loc 7 133 19 view .LVU3102
 14816              	.LBE9052:
 14817              	.LBE9053:
 14818              	.LBE9054:
 14819              	.LBE9049:
 14820              	.LBE9048:
 14821              	.LBE9043:
 14822              	.LBE9042:
 14823              	.LBB9055:
 14824              	.LBI9055:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14825              		.loc 5 150 14 is_stmt 1 view .LVU3103
 14826              	.LBB9056:
 14827              	.LBI9056:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 691


 14828              		.loc 9 162 7 view .LVU3104
 14829              	.LBB9057:
 14830              	.LBI9057:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14831              		.loc 7 89 7 view .LVU3105
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14832              		.loc 7 89 7 is_stmt 0 view .LVU3106
 14833              	.LBE9057:
 14834              	.LBE9056:
 14835              	.LBE9055:
 14836              	.LBE9041:
 14837              	.LBE9040:
 222:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 14838              		.loc 1 222 3 is_stmt 1 view .LVU3107
 14839              	.LBB9058:
 14840              	.LBB9059:
 14841              	.LBB9060:
 14842              	.LBB9061:
 14843              	.LBB9062:
 14844              	.LBB9063:
 14845              	.LBB9064:
 14846              	.LBB9065:
 14847              	.LBB9066:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14848              		.loc 5 160 46 is_stmt 0 view .LVU3108
 14849 00b2 0DAF     		add	r7, sp, #52
 14850              	.LBE9066:
 14851              	.LBE9065:
 14852              	.LBE9064:
 14853              	.LBE9063:
 14854              	.LBE9062:
 14855              	.LBE9061:
 14856              	.LBE9060:
 14857              	.LBE9059:
 14858              	.LBE9058:
 222:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 14859              		.loc 1 222 24 view .LVU3109
 14860 00b4 04F5D76A 		add	r10, r4, #1720
 14861              	.LVL686:
 14862              	.LBB9185:
 14863              	.LBI9058:
 14864              		.loc 31 25 8 is_stmt 1 view .LVU3110
 14865              	.LBB9181:
 14866              	.LBB9177:
 14867              	.LBB9173:
 14868              	.LBI9061:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 14869              		.loc 5 448 7 view .LVU3111
 14870              	.LBB9169:
 14871              	.LBB9165:
 14872              	.LBB9074:
 14873              	.LBI9074:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14874              		.loc 5 190 7 view .LVU3112
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14875              		.loc 5 190 7 is_stmt 0 view .LVU3113
 14876              	.LBE9074:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 692


 14877              	.LBB9075:
 14878              	.LBI9075:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14879              		.loc 5 290 7 is_stmt 1 view .LVU3114
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14880              		.loc 5 290 7 is_stmt 0 view .LVU3115
 14881              	.LBE9075:
 14882              	.LBB9076:
 14883              	.LBI9076:
 14884              		.loc 26 97 29 is_stmt 1 view .LVU3116
 14885              	.LBB9077:
 14886              	.LBI9077:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 14887              		.loc 6 558 7 view .LVU3117
 14888              	.LBB9078:
 14889              	.LBI9078:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14890              		.loc 9 147 7 view .LVU3118
 14891              	.LBB9079:
 14892              	.LBI9079:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14893              		.loc 7 82 7 view .LVU3119
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14894              		.loc 7 82 7 is_stmt 0 view .LVU3120
 14895              	.LBE9079:
 14896              	.LBE9078:
 14897              	.LBE9077:
 14898              	.LBE9076:
 14899              	.LBB9080:
 14900              	.LBI9064:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14901              		.loc 5 159 2 is_stmt 1 view .LVU3121
 14902              	.LBB9072:
 14903              	.LBB9070:
 14904              	.LBB9067:
 14905              	.LBI9067:
 14906              		.loc 27 101 5 view .LVU3122
 14907              		.loc 27 101 5 is_stmt 0 view .LVU3123
 14908              	.LBE9067:
 14909              	.LBB9068:
 14910              	.LBI9068:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14911              		.loc 9 147 7 is_stmt 1 view .LVU3124
 14912              	.LBB9069:
 14913              	.LBI9069:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14914              		.loc 7 82 7 view .LVU3125
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14915              		.loc 7 82 7 is_stmt 0 view .LVU3126
 14916              	.LBE9069:
 14917              	.LBE9068:
 14918              	.LBE9070:
 14919              	.LBE9072:
 14920              	.LBE9080:
 14921              	.LBB9081:
 14922              	.LBB9082:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 693


 14923              		.loc 5 908 16 view .LVU3127
 14924 00b8 D4E92185 		ldrd	r8, r5, [r4, #132]
 14925              	.LBE9082:
 14926              	.LBE9081:
 14927              	.LBB9083:
 14928              	.LBB9073:
 14929              	.LBB9071:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14930              		.loc 5 160 46 view .LVU3128
 14931 00bc 0B97     		str	r7, [sp, #44]
 14932              	.LVL687:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14933              		.loc 5 160 46 view .LVU3129
 14934              	.LBE9071:
 14935              	.LBE9073:
 14936              	.LBE9083:
 14937              	.LBB9084:
 14938              	.LBI9084:
 14939              		.loc 9 162 7 is_stmt 1 view .LVU3130
 14940              	.LBB9085:
 14941              	.LBI9085:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14942              		.loc 7 89 7 view .LVU3131
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14943              		.loc 7 89 7 is_stmt 0 view .LVU3132
 14944              	.LBE9085:
 14945              	.LBE9084:
 14946              	.LBB9086:
 14947              	.LBI9086:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14948              		.loc 5 186 7 is_stmt 1 view .LVU3133
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14949              		.loc 5 186 7 is_stmt 0 view .LVU3134
 14950              	.LBE9086:
 14951              	.LBB9087:
 14952              	.LBI9087:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14953              		.loc 5 186 7 is_stmt 1 view .LVU3135
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14954              		.loc 5 186 7 is_stmt 0 view .LVU3136
 14955              	.LBE9087:
 14956              	.LBB9088:
 14957              	.LBI9081:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14958              		.loc 5 907 7 is_stmt 1 view .LVU3137
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14959              		.loc 5 907 7 is_stmt 0 view .LVU3138
 14960              	.LBE9088:
 14961              	.LBB9089:
 14962              	.LBI9089:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14963              		.loc 5 263 9 is_stmt 1 view .LVU3139
 14964              	.LBB9090:
 14965              	.LBB9091:
 14966              	.LBI9091:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14967              		.loc 5 243 9 view .LVU3140
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 694


 14968              	.LBB9092:
 14969              	.LBB9093:
 14970              	.LBI9093:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14971              		.loc 25 206 7 view .LVU3141
 14972              	.LBB9094:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14973              		.loc 25 211 42 is_stmt 0 view .LVU3142
 14974 00be 18EB050F 		cmn	r8, r5
 14975 00c2 03D0     		beq	.L534
 14976 00c4 B8F1000F 		cmp	r8, #0
 14977 00c8 00F0D980 		beq	.L519
 14978              	.L534:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14979              		.loc 25 217 2 view .LVU3143
 14980 00cc 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14981              		.loc 25 215 12 view .LVU3144
 14982 00ce 0495     		str	r5, [sp, #16]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14983              		.loc 25 217 2 view .LVU3145
 14984 00d0 00F2B480 		bhi	.L590
 14985              	.LVL688:
 14986              	.LBB9095:
 14987              	.LBI9095:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14988              		.loc 5 186 7 is_stmt 1 view .LVU3146
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14989              		.loc 5 186 7 is_stmt 0 view .LVU3147
 14990              	.LBE9095:
 14991              	.LBB9097:
 14992              	.LBI9097:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14993              		.loc 5 392 7 is_stmt 1 view .LVU3148
 14994              	.LBB9098:
 14995              	.LBI9098:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14996              		.loc 5 346 7 view .LVU3149
 14997              	.LBB9099:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14998              		.loc 5 348 2 is_stmt 0 view .LVU3150
 14999 00d4 012D     		cmp	r5, #1
 15000 00d6 40F0AD80 		bne	.L523
 15001              	.LVL689:
 15002              	.LBB9100:
 15003              	.LBI9100:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15004              		.loc 21 321 7 is_stmt 1 view .LVU3151
 15005              	.LBB9101:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15006              		.loc 21 322 9 view .LVU3152
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15007              		.loc 21 322 16 is_stmt 0 view .LVU3153
 15008 00da 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15009              		.loc 21 322 22 view .LVU3154
 15010 00de 3A46     		mov	r2, r7
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 695


 15011 00e0 0BAE     		add	r6, sp, #44
 15012              	.LVL690:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15013              		.loc 21 322 14 view .LVU3155
 15014 00e2 8DF83430 		strb	r3, [sp, #52]
 15015              	.LVL691:
 15016              	.L524:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15017              		.loc 21 322 14 view .LVU3156
 15018              	.LBE9101:
 15019              	.LBE9100:
 15020              	.LBE9099:
 15021              	.LBE9098:
 15022              	.LBE9097:
 15023              	.LBB9117:
 15024              	.LBI9117:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15025              		.loc 5 214 7 is_stmt 1 view .LVU3157
 15026              	.LBB9118:
 15027              	.LBB9119:
 15028              	.LBI9119:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 15029              		.loc 5 182 7 view .LVU3158
 15030              	.LBE9119:
 15031              	.LBB9121:
 15032              	.LBB9122:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15033              		.loc 21 322 14 is_stmt 0 view .LVU3159
 15034 00e6 0023     		movs	r3, #0
 15035              	.LBE9122:
 15036              	.LBE9121:
 15037              	.LBB9125:
 15038              	.LBB9120:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15039              		.loc 5 183 26 view .LVU3160
 15040 00e8 0C95     		str	r5, [sp, #48]
 15041              	.LVL692:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15042              		.loc 5 183 26 view .LVU3161
 15043              	.LBE9120:
 15044              	.LBE9125:
 15045              	.LBB9126:
 15046              	.LBI9126:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15047              		.loc 5 186 7 is_stmt 1 view .LVU3162
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15048              		.loc 5 186 7 is_stmt 0 view .LVU3163
 15049              	.LBE9126:
 15050              	.LBB9128:
 15051              	.LBI9121:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15052              		.loc 21 321 7 is_stmt 1 view .LVU3164
 15053              	.LBB9123:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15054              		.loc 21 322 9 view .LVU3165
 15055              	.LBE9123:
 15056              	.LBE9128:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 696


 15057              	.LBE9118:
 15058              	.LBE9117:
 15059              	.LBE9094:
 15060              	.LBE9093:
 15061              	.LBE9092:
 15062              	.LBE9091:
 15063              	.LBE9090:
 15064              	.LBE9089:
 15065              	.LBE9165:
 15066              	.LBE9169:
 15067              	.LBE9173:
 15068              	.LBE9177:
 15069              	.LBE9181:
 15070              	.LBE9185:
 222:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 15071              		.loc 1 222 24 is_stmt 0 view .LVU3166
 15072 00ea 5046     		mov	r0, r10
 15073 00ec 3146     		mov	r1, r6
 15074              	.LBB9186:
 15075              	.LBB9182:
 15076              	.LBB9178:
 15077              	.LBB9174:
 15078              	.LBB9170:
 15079              	.LBB9166:
 15080              	.LBB9162:
 15081              	.LBB9159:
 15082              	.LBB9156:
 15083              	.LBB9153:
 15084              	.LBB9150:
 15085              	.LBB9147:
 15086              	.LBB9133:
 15087              	.LBB9131:
 15088              	.LBB9129:
 15089              	.LBB9124:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15090              		.loc 21 322 14 view .LVU3167
 15091 00ee 5355     		strb	r3, [r2, r5]
 15092              	.LVL693:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15093              		.loc 21 322 14 view .LVU3168
 15094              	.LBE9124:
 15095              	.LBE9129:
 15096              	.LBE9131:
 15097              	.LBE9133:
 15098              	.LBE9147:
 15099              	.LBE9150:
 15100              	.LBE9153:
 15101              	.LBE9156:
 15102              	.LBE9159:
 15103              	.LBE9162:
 15104              	.LBE9166:
 15105              	.LBE9170:
 15106              	.LBE9174:
 15107              		.loc 31 25 8 view .LVU3169
 15108 00f0 B4F89C30 		ldrh	r3, [r4, #156]
 15109 00f4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 15110              	.LVL694:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 697


 15111              		.loc 31 25 8 view .LVU3170
 15112              	.LBE9178:
 15113              	.LBE9182:
 15114              	.LBE9186:
 222:Brizachord.cpp **** 		chord_synth.set_chord(instrument_state.chord);
 15115              		.loc 1 222 24 view .LVU3171
 15116 00f8 FFF7FEFF 		bl	_ZN10ChordSynth9set_chordE5Chord
 15117              	.LVL695:
 15118              	.LBB9187:
 15119              	.LBI9187:
 15120              		.loc 31 25 8 is_stmt 1 view .LVU3172
 15121              	.LBB9188:
 15122              	.LBI9188:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15123              		.loc 5 657 7 view .LVU3173
 15124              	.LBB9189:
 15125              	.LBI9189:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15126              		.loc 5 229 7 view .LVU3174
 15127              	.LBB9190:
 15128              	.LBB9191:
 15129              	.LBI9191:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 15130              		.loc 5 221 7 view .LVU3175
 15131              	.LBB9192:
 15132              	.LBI9192:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15133              		.loc 5 186 7 view .LVU3176
 15134              	.LBB9193:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15135              		.loc 5 187 28 is_stmt 0 view .LVU3177
 15136 00fc 0B98     		ldr	r0, [sp, #44]
 15137              	.LVL696:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15138              		.loc 5 187 28 view .LVU3178
 15139              	.LBE9193:
 15140              	.LBE9192:
 15141              	.LBB9194:
 15142              	.LBI9194:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15143              		.loc 5 200 7 is_stmt 1 view .LVU3179
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15144              		.loc 5 200 7 is_stmt 0 view .LVU3180
 15145              	.LBE9194:
 15146              	.LBE9191:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15147              		.loc 5 231 2 view .LVU3181
 15148 00fe B842     		cmp	r0, r7
 15149 0100 03D0     		beq	.L525
 15150              	.LVL697:
 15151              	.LBB9195:
 15152              	.LBI9195:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15153              		.loc 5 236 7 is_stmt 1 view .LVU3182
 15154              	.LBB9196:
 15155              	.LBB9197:
 15156              	.LBI9197:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 698


 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15157              		.loc 6 491 7 view .LVU3183
 15158              	.LBB9198:
 15159              	.LBI9198:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15160              		.loc 7 120 7 view .LVU3184
 15161              	.LBE9198:
 15162              	.LBE9197:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15163              		.loc 5 237 34 is_stmt 0 view .LVU3185
 15164 0102 0D99     		ldr	r1, [sp, #52]
 15165              	.LBB9201:
 15166              	.LBB9200:
 15167              	.LBB9199:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15168              		.loc 7 133 19 view .LVU3186
 15169 0104 0131     		adds	r1, r1, #1
 15170              	.LVL698:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15171              		.loc 7 133 19 view .LVU3187
 15172 0106 FFF7FEFF 		bl	_ZdlPvj
 15173              	.LVL699:
 15174              	.L525:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15175              		.loc 7 133 19 view .LVU3188
 15176              	.LBE9199:
 15177              	.LBE9200:
 15178              	.LBE9201:
 15179              	.LBE9196:
 15180              	.LBE9195:
 15181              	.LBE9190:
 15182              	.LBE9189:
 15183              	.LBB9202:
 15184              	.LBI9202:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15185              		.loc 5 150 14 is_stmt 1 view .LVU3189
 15186              	.LBB9203:
 15187              	.LBI9203:
 15188              		.loc 9 162 7 view .LVU3190
 15189              	.LBB9204:
 15190              	.LBI9204:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15191              		.loc 7 89 7 view .LVU3191
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15192              		.loc 7 89 7 is_stmt 0 view .LVU3192
 15193              	.LBE9204:
 15194              	.LBE9203:
 15195              	.LBE9202:
 15196              	.LBE9188:
 15197              	.LBE9187:
 223:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 15198              		.loc 1 223 3 is_stmt 1 view .LVU3193
 15199              	.LBB9205:
 15200              	.LBB9206:
 15201              	.LBB9207:
 15202              	.LBB9208:
 15203              	.LBB9209:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 699


 15204              	.LBB9210:
 15205              	.LBB9211:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15206              		.loc 14 98 47 is_stmt 0 view .LVU3194
 15207 010a 0023     		movs	r3, #0
 15208              	.LBE9211:
 15209              	.LBE9210:
 15210              	.LBE9209:
 15211              	.LBE9208:
 15212              	.LBE9207:
 15213              	.LBE9206:
 15214              	.LBE9205:
 223:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 15215              		.loc 1 223 27 view .LVU3195
 15216 010c 04F5FE64 		add	r4, r4, #2032
 15217              	.LVL700:
 15218              	.LBB9331:
 15219              	.LBI9205:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 15220              		.loc 14 553 7 is_stmt 1 view .LVU3196
 15221              	.LBB9327:
 15222              	.LBB9257:
 15223              	.LBI9257:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15224              		.loc 14 918 7 view .LVU3197
 15225              	.LBB9258:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15226              		.loc 14 919 66 is_stmt 0 view .LVU3198
 15227 0110 DDE90110 		ldrd	r1, r0, [sp, #4]
 15228              	.LVL701:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15229              		.loc 14 919 66 view .LVU3199
 15230              	.LBE9258:
 15231              	.LBE9257:
 15232              	.LBB9259:
 15233              	.LBI9259:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15234              		.loc 14 280 7 is_stmt 1 view .LVU3200
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15235              		.loc 14 280 7 is_stmt 0 view .LVU3201
 15236              	.LBE9259:
 15237              	.LBB9260:
 15238              	.LBI9260:
 15239              		.loc 26 97 29 is_stmt 1 view .LVU3202
 15240              	.LBB9261:
 15241              	.LBI9261:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 15242              		.loc 6 558 7 view .LVU3203
 15243              	.LBB9262:
 15244              	.LBI9262:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15245              		.loc 9 147 7 view .LVU3204
 15246              	.LBB9263:
 15247              	.LBI9263:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15248              		.loc 7 82 7 view .LVU3205
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 700


 15249              		.loc 7 82 7 is_stmt 0 view .LVU3206
 15250              	.LBE9263:
 15251              	.LBE9262:
 15252              	.LBE9261:
 15253              	.LBE9260:
 15254              	.LBB9264:
 15255              	.LBI9207:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 15256              		.loc 14 303 7 is_stmt 1 view .LVU3207
 15257              	.LBB9220:
 15258              	.LBI9208:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 15259              		.loc 14 136 2 view .LVU3208
 15260              	.LBB9216:
 15261              	.LBI9216:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15262              		.loc 9 147 7 view .LVU3209
 15263              	.LBB9217:
 15264              	.LBI9217:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15265              		.loc 7 82 7 view .LVU3210
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15266              		.loc 7 82 7 is_stmt 0 view .LVU3211
 15267              	.LBE9217:
 15268              	.LBE9216:
 15269              	.LBB9218:
 15270              	.LBI9209:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 15271              		.loc 14 97 2 is_stmt 1 view .LVU3212
 15272              	.LBB9214:
 15273              	.LBB9212:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15274              		.loc 14 98 47 is_stmt 0 view .LVU3213
 15275 0114 CDE90B33 		strd	r3, r3, [sp, #44]
 15276              	.LBE9212:
 15277              	.LBE9214:
 15278              	.LBE9218:
 15279              	.LBE9220:
 15280              	.LBB9221:
 15281              	.LBB9222:
 15282              	.LBB9223:
 15283              	.LBB9224:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15284              		.loc 14 346 18 view .LVU3214
 15285 0118 451A     		subs	r5, r0, r1
 15286              	.LVL702:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15287              		.loc 14 346 18 view .LVU3215
 15288              	.LBE9224:
 15289              	.LBE9223:
 15290              	.LBE9222:
 15291              	.LBE9221:
 15292              	.LBB9249:
 15293              	.LBB9219:
 15294              	.LBB9215:
 15295              	.LBB9213:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 701


 15296              		.loc 14 98 47 view .LVU3216
 15297 011a 0D93     		str	r3, [sp, #52]
 15298              	.LVL703:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15299              		.loc 14 98 47 view .LVU3217
 15300              	.LBE9213:
 15301              	.LBE9215:
 15302              	.LBE9219:
 15303              	.LBE9249:
 15304              	.LBB9250:
 15305              	.LBI9221:
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15306              		.loc 14 359 7 is_stmt 1 view .LVU3218
 15307              	.LBB9242:
 15308              	.LBB9238:
 15309              	.LBI9223:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15310              		.loc 14 343 7 view .LVU3219
 15311              	.LBB9234:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15312              		.loc 14 346 18 is_stmt 0 view .LVU3220
 15313 011c 00F08780 		beq	.L533
 15314              	.LVL704:
 15315              	.LBB9225:
 15316              	.LBI9225:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 15317              		.loc 6 459 7 is_stmt 1 view .LVU3221
 15318              	.LBB9226:
 15319              	.LBI9226:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15320              		.loc 7 103 7 view .LVU3222
 15321              	.LBB9227:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 15322              		.loc 7 105 2 is_stmt 0 view .LVU3223
 15323 0120 5D4B     		ldr	r3, .L596
 15324 0122 9D42     		cmp	r5, r3
 15325 0124 00F2AE80 		bhi	.L591
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15326              		.loc 7 115 41 view .LVU3224
 15327 0128 2846     		mov	r0, r5
 15328 012a FFF7FEFF 		bl	_Znwj
 15329              	.LVL705:
 15330              	.LBE9227:
 15331              	.LBE9226:
 15332              	.LBE9225:
 15333              	.LBE9234:
 15334              	.LBE9238:
 15335              	.LBE9242:
 15336              	.LBE9250:
 15337              	.LBE9264:
 15338              	.LBB9265:
 15339              	.LBB9266:
 15340              	.LBB9267:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 15341              		.loc 17 979 23 view .LVU3225
 15342 012e 0199     		ldr	r1, [sp, #4]
 15343              	.LBE9267:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 702


 15344              	.LBE9266:
 15345              	.LBE9265:
 15346              	.LBB9269:
 15347              	.LBB9251:
 15348              	.LBB9243:
 15349              	.LBB9239:
 15350              	.LBB9235:
 15351              	.LBB9232:
 15352              	.LBB9230:
 15353              	.LBB9228:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15354              		.loc 7 115 41 view .LVU3226
 15355 0130 0346     		mov	r3, r0
 15356              	.LVL706:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15357              		.loc 7 115 41 view .LVU3227
 15358              	.LBE9228:
 15359              	.LBE9230:
 15360              	.LBE9232:
 15361              	.LBE9235:
 15362              	.LBE9239:
 15363              	.LBE9243:
 15364              	.LBE9251:
 15365              	.LBE9269:
 15366              	.LBB9270:
 15367              	.LBB9271:
 15368              	.LBB9272:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 15369              		.loc 17 979 23 view .LVU3228
 15370 0132 0298     		ldr	r0, [sp, #8]
 15371              	.LBE9272:
 15372              	.LBE9271:
 15373              	.LBE9270:
 15374              	.LBB9274:
 15375              	.LBB9275:
 15376              	.LBB9276:
 15377              	.LBB9277:
 15378              	.LBB9278:
 15379              	.LBB9279:
 15380              	.LBB9280:
 15381              	.LBB9281:
 15382              	.LBB9282:
 15383              	.LBB9283:
 15384              	.LBB9284:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15385              		.loc 23 424 34 view .LVU3229
 15386 0134 471A     		subs	r7, r0, r1
 15387              	.L526:
 15388              	.LVL707:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15389              		.loc 23 424 34 view .LVU3230
 15390              	.LBE9284:
 15391              	.LBE9283:
 15392              	.LBE9282:
 15393              	.LBE9281:
 15394              	.LBE9280:
 15395              	.LBE9279:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 703


 15396              	.LBE9278:
 15397              	.LBE9277:
 15398              	.LBE9276:
 15399              	.LBE9275:
 15400              	.LBE9274:
 15401              	.LBB9314:
 15402              	.LBB9252:
 15403              	.LBB9244:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15404              		.loc 14 363 59 view .LVU3231
 15405 0136 1D44     		add	r5, r5, r3
 15406              	.LVL708:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15407              		.loc 14 363 59 view .LVU3232
 15408              	.LBE9244:
 15409              	.LBE9252:
 15410              	.LBE9314:
 15411              	.LBB9315:
 15412              	.LBB9311:
 15413              	.LBB9308:
 15414              	.LBB9305:
 15415              	.LBB9302:
 15416              	.LBB9299:
 15417              	.LBB9296:
 15418              	.LBB9293:
 15419              	.LBB9290:
 15420              	.LBB9287:
 15421              	.LBB9285:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 15422              		.loc 23 425 4 view .LVU3233
 15423 0138 8142     		cmp	r1, r0
 15424              	.LBE9285:
 15425              	.LBE9287:
 15426              	.LBE9290:
 15427              	.LBE9293:
 15428              	.LBE9296:
 15429              	.LBE9299:
 15430              	.LBE9302:
 15431              	.LBE9305:
 15432              	.LBE9308:
 15433              	.LBE9311:
 15434              	.LBE9315:
 15435              	.LBB9316:
 15436              	.LBB9253:
 15437              	.LBB9245:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15438              		.loc 14 363 34 view .LVU3234
 15439 013a 0D95     		str	r5, [sp, #52]
 15440              	.LVL709:
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15441              		.loc 14 363 34 view .LVU3235
 15442              	.LBE9245:
 15443              	.LBE9253:
 15444              	.LBE9316:
 15445              	.LBB9317:
 15446              	.LBI9317:
 15447              		.loc 9 162 7 is_stmt 1 view .LVU3236
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 704


 15448              	.LBB9318:
 15449              	.LBI9318:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15450              		.loc 7 89 7 view .LVU3237
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15451              		.loc 7 89 7 is_stmt 0 view .LVU3238
 15452              	.LBE9318:
 15453              	.LBE9317:
 15454              	.LBB9319:
 15455              	.LBI9265:
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 15456              		.loc 14 820 7 is_stmt 1 view .LVU3239
 15457              	.LBB9268:
 15458              	.LBI9266:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 15459              		.loc 17 978 7 view .LVU3240
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 15460              		.loc 17 978 7 is_stmt 0 view .LVU3241
 15461              	.LBE9268:
 15462              	.LBE9319:
 15463              	.LBB9320:
 15464              	.LBI9270:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 15465              		.loc 14 838 7 is_stmt 1 view .LVU3242
 15466              	.LBB9273:
 15467              	.LBI9271:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 15468              		.loc 17 978 7 view .LVU3243
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 15469              		.loc 17 978 7 is_stmt 0 view .LVU3244
 15470              	.LBE9273:
 15471              	.LBE9320:
 15472              	.LBB9321:
 15473              	.LBI9321:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15474              		.loc 14 276 7 is_stmt 1 view .LVU3245
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15475              		.loc 14 276 7 is_stmt 0 view .LVU3246
 15476              	.LBE9321:
 15477              	.LBB9322:
 15478              	.LBI9274:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 15479              		.loc 19 323 5 is_stmt 1 view .LVU3247
 15480              	.LBB9312:
 15481              	.LBI9275:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 15482              		.loc 19 125 5 view .LVU3248
 15483              	.LBB9309:
 15484              	.LBB9306:
 15485              	.LBI9277:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 15486              		.loc 19 107 9 view .LVU3249
 15487              	.LBB9303:
 15488              	.LBI9278:
 15489              		.loc 23 560 5 view .LVU3250
 15490              	.LBB9300:
 15491              	.LBI9279:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 705


 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15492              		.loc 23 511 5 view .LVU3251
 15493              	.LBB9297:
 15494              	.LBI9280:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 15495              		.loc 23 505 5 view .LVU3252
 15496              	.LBB9294:
 15497              	.LBI9281:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15498              		.loc 23 463 5 view .LVU3253
 15499              	.LBB9291:
 15500              	.LBB9288:
 15501              	.LBI9283:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15502              		.loc 23 415 2 view .LVU3254
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15503              		.loc 23 415 2 is_stmt 0 view .LVU3255
 15504              	.LBE9288:
 15505              	.LBE9291:
 15506              	.LBE9294:
 15507              	.LBE9297:
 15508              	.LBE9300:
 15509              	.LBE9303:
 15510              	.LBE9306:
 15511              	.LBE9309:
 15512              	.LBE9312:
 15513              	.LBE9322:
 15514              	.LBB9323:
 15515              	.LBB9254:
 15516              	.LBB9246:
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 15517              		.loc 14 362 26 view .LVU3256
 15518 013c CDE90B33 		strd	r3, r3, [sp, #44]
 15519              	.LBE9246:
 15520              	.LBE9254:
 15521              	.LBE9323:
 15522              	.LBB9324:
 15523              	.LBB9313:
 15524              	.LBB9310:
 15525              	.LBB9307:
 15526              	.LBB9304:
 15527              	.LBB9301:
 15528              	.LBB9298:
 15529              	.LBB9295:
 15530              	.LBB9292:
 15531              	.LBB9289:
 15532              	.LBB9286:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 15533              		.loc 23 425 4 view .LVU3257
 15534 0140 04D0     		beq	.L528
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 15535              		.loc 23 426 23 view .LVU3258
 15536 0142 1846     		mov	r0, r3
 15537 0144 3A46     		mov	r2, r7
 15538 0146 FFF7FEFF 		bl	memmove
 15539              	.LVL710:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 706


 15540              		.loc 23 426 23 view .LVU3259
 15541 014a 0346     		mov	r3, r0
 15542              	.L528:
 15543              	.LVL711:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15544              		.loc 23 427 22 view .LVU3260
 15545 014c 3B44     		add	r3, r3, r7
 15546              	.LBE9286:
 15547              	.LBE9289:
 15548              	.LBE9292:
 15549              	.LBE9295:
 15550              	.LBE9298:
 15551              	.LBE9301:
 15552              	.LBE9304:
 15553              	.LBE9307:
 15554              	.LBE9310:
 15555              	.LBE9313:
 15556              	.LBE9324:
 15557              	.LBE9327:
 15558              	.LBE9331:
 223:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 15559              		.loc 1 223 27 view .LVU3261
 15560 014e 2046     		mov	r0, r4
 15561 0150 3146     		mov	r1, r6
 15562              	.LBB9332:
 15563              	.LBB9328:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 15564              		.loc 14 557 26 view .LVU3262
 15565 0152 0C93     		str	r3, [sp, #48]
 15566              	.LVL712:
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 15567              		.loc 14 557 26 view .LVU3263
 15568              	.LBE9328:
 15569              	.LBE9332:
 223:Brizachord.cpp **** 		strum_synth.set_arpeggio(midi_notes);
 15570              		.loc 1 223 27 view .LVU3264
 15571 0154 FFF7FEFF 		bl	_ZN10StrumSynth12set_arpeggioESt6vectorIiSaIiEE
 15572              	.LVL713:
 15573              	.LBB9333:
 15574              	.LBI9333:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15575              		.loc 14 678 7 is_stmt 1 view .LVU3265
 15576              	.LBB9334:
 15577              	.LBB9335:
 15578              	.LBI9335:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15579              		.loc 14 276 7 view .LVU3266
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15580              		.loc 14 276 7 is_stmt 0 view .LVU3267
 15581              	.LBE9335:
 15582              	.LBB9336:
 15583              	.LBI9336:
 15584              		.loc 6 735 5 is_stmt 1 view .LVU3268
 15585              		.loc 6 735 5 is_stmt 0 view .LVU3269
 15586              	.LBE9336:
 15587              	.LBB9337:
 15588              	.LBI9337:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 707


 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15589              		.loc 14 333 7 is_stmt 1 view .LVU3270
 15590              	.LBB9338:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 15591              		.loc 14 335 15 is_stmt 0 view .LVU3271
 15592 0158 0B98     		ldr	r0, [sp, #44]
 15593              	.LVL714:
 15594              	.LBB9339:
 15595              	.LBI9339:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15596              		.loc 14 350 7 is_stmt 1 view .LVU3272
 15597              	.LBB9340:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 15598              		.loc 14 353 2 is_stmt 0 view .LVU3273
 15599 015a 18B1     		cbz	r0, .L529
 15600              	.LVL715:
 15601              	.LBB9341:
 15602              	.LBI9341:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15603              		.loc 6 491 7 is_stmt 1 view .LVU3274
 15604              	.LBB9342:
 15605              	.LBB9343:
 15606              	.LBI9343:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15607              		.loc 7 120 7 view .LVU3275
 15608              	.LBE9343:
 15609              	.LBE9342:
 15610              	.LBE9341:
 15611              	.LBE9340:
 15612              	.LBE9339:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15613              		.loc 14 336 35 is_stmt 0 view .LVU3276
 15614 015c 0D99     		ldr	r1, [sp, #52]
 15615              	.LBB9349:
 15616              	.LBB9348:
 15617              	.LBB9347:
 15618              	.LBB9346:
 15619              	.LBB9345:
 15620              	.LBB9344:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15621              		.loc 7 133 19 view .LVU3277
 15622 015e 091A     		subs	r1, r1, r0
 15623 0160 FFF7FEFF 		bl	_ZdlPvj
 15624              	.LVL716:
 15625              	.L529:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15626              		.loc 7 133 19 view .LVU3278
 15627              	.LBE9344:
 15628              	.LBE9345:
 15629              	.LBE9346:
 15630              	.LBE9347:
 15631              	.LBE9348:
 15632              	.LBE9349:
 15633              	.LBB9350:
 15634              	.LBI9350:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 15635              		.loc 14 128 14 is_stmt 1 view .LVU3279
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 708


 15636              	.LBB9351:
 15637              	.LBI9351:
 15638              		.loc 9 162 7 view .LVU3280
 15639              	.LBB9352:
 15640              	.LBI9352:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15641              		.loc 7 89 7 view .LVU3281
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15642              		.loc 7 89 7 is_stmt 0 view .LVU3282
 15643              	.LBE9352:
 15644              	.LBE9351:
 15645              	.LBE9350:
 15646              	.LBE9338:
 15647              	.LBE9337:
 15648              	.LBE9334:
 15649              	.LBE9333:
 224:Brizachord.cpp **** 		__enable_irq();
 15650              		.loc 1 224 3 is_stmt 1 view .LVU3283
 15651              	.LBB9353:
 15652              	.LBI9353:
 949:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 15653              		.loc 30 949 27 view .LVU3284
 15654              	.LBB9354:
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 15655              		.loc 30 951 3 view .LVU3285
 15656              		.syntax unified
 15657              	@ 951 "../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 15658 0164 62B6     		cpsie i
 15659              	@ 0 "" 2
 15660              	.LVL717:
 951:../../libDaisy//Drivers/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 15661              		.loc 30 951 3 is_stmt 0 view .LVU3286
 15662              		.thumb
 15663              		.syntax unified
 15664              	.LBE9354:
 15665              	.LBE9353:
 15666              	.LBB9355:
 15667              	.LBI9355:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15668              		.loc 14 678 7 is_stmt 1 view .LVU3287
 15669              	.LBB9356:
 15670              	.LBB9357:
 15671              	.LBI9357:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15672              		.loc 14 276 7 view .LVU3288
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15673              		.loc 14 276 7 is_stmt 0 view .LVU3289
 15674              	.LBE9357:
 15675              	.LBB9358:
 15676              	.LBI9358:
 15677              		.loc 6 735 5 is_stmt 1 view .LVU3290
 15678              		.loc 6 735 5 is_stmt 0 view .LVU3291
 15679              	.LBE9358:
 15680              	.LBB9359:
 15681              	.LBI9359:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15682              		.loc 14 333 7 is_stmt 1 view .LVU3292
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 709


 15683              	.LBB9360:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 15684              		.loc 14 335 15 is_stmt 0 view .LVU3293
 15685 0166 0198     		ldr	r0, [sp, #4]
 15686              	.LVL718:
 15687              	.LBB9361:
 15688              	.LBI9361:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15689              		.loc 14 350 7 is_stmt 1 view .LVU3294
 15690              	.LBB9362:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 15691              		.loc 14 353 2 is_stmt 0 view .LVU3295
 15692 0168 18B1     		cbz	r0, .L494
 15693              	.LVL719:
 15694              	.LBB9363:
 15695              	.LBI9363:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15696              		.loc 6 491 7 is_stmt 1 view .LVU3296
 15697              	.LBB9364:
 15698              	.LBB9365:
 15699              	.LBI9365:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15700              		.loc 7 120 7 view .LVU3297
 15701              	.LBE9365:
 15702              	.LBE9364:
 15703              	.LBE9363:
 15704              	.LBE9362:
 15705              	.LBE9361:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15706              		.loc 14 336 35 is_stmt 0 view .LVU3298
 15707 016a 0399     		ldr	r1, [sp, #12]
 15708              	.LBB9371:
 15709              	.LBB9370:
 15710              	.LBB9369:
 15711              	.LBB9368:
 15712              	.LBB9367:
 15713              	.LBB9366:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15714              		.loc 7 133 19 view .LVU3299
 15715 016c 091A     		subs	r1, r1, r0
 15716 016e FFF7FEFF 		bl	_ZdlPvj
 15717              	.LVL720:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15718              		.loc 7 133 19 view .LVU3300
 15719              	.LBE9366:
 15720              	.LBE9367:
 15721              	.LBE9368:
 15722              	.LBE9369:
 15723              	.LBE9370:
 15724              	.LBE9371:
 15725              	.LBB9372:
 15726              	.LBI9372:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 15727              		.loc 14 128 14 is_stmt 1 view .LVU3301
 15728              	.LBB9373:
 15729              	.LBI9373:
 15730              		.loc 9 162 7 view .LVU3302
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 710


 15731              	.LBB9374:
 15732              	.LBI9374:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15733              		.loc 7 89 7 view .LVU3303
 15734              	.L494:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15735              		.loc 7 89 7 is_stmt 0 view .LVU3304
 15736              	.LBE9374:
 15737              	.LBE9373:
 15738              	.LBE9372:
 15739              	.LBE9360:
 15740              	.LBE9359:
 15741              	.LBE9356:
 15742              	.LBE9355:
 15743              	.LBE8897:
 15744              	.LBE8896:
 226:Brizachord.cpp **** }
 15745              		.loc 1 226 1 view .LVU3305
 15746 0172 12B0     		add	sp, sp, #72
 15747              		.cfi_remember_state
 15748              		.cfi_def_cfa_offset 32
 15749              		@ sp needed
 15750 0174 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 15751              	.LVL721:
 15752              	.L495:
 15753              		.cfi_restore_state
 203:Brizachord.cpp **** 	else if (gpio_state.button_6th.FallingEdge())   instrument_state.queued_extension = SIXTH;
 15754              		.loc 1 203 7 is_stmt 1 view .LVU3306
 15755              	.LBB9383:
 15756              	.LBI8880:
  68:../../libDaisy//src/hid/switch.h ****     {
 15757              		.loc 11 68 17 view .LVU3307
 15758              	.LBB8882:
 15759              		.loc 11 70 9 view .LVU3308
 15760              		.loc 11 70 16 is_stmt 0 view .LVU3309
 15761 0178 94F8E820 		ldrb	r2, [r4, #232]	@ zero_extendqisi2
 15762              		.loc 11 70 25 view .LVU3310
 15763 017c 7AB1     		cbz	r2, .L497
 15764              	.LVL722:
 15765              		.loc 11 70 25 view .LVU3311
 15766              	.LBE8882:
 15767              	.LBE9383:
 203:Brizachord.cpp **** 	else if (gpio_state.button_6th.FallingEdge())   instrument_state.queued_extension = SIXTH;
 15768              		.loc 1 203 7 view .LVU3312
 15769 017e 94F80011 		ldrb	r1, [r4, #256]	@ zero_extendqisi2
 15770 0182 8029     		cmp	r1, #128
 15771 0184 0BD1     		bne	.L497
 203:Brizachord.cpp **** 	else if (gpio_state.button_6th.FallingEdge())   instrument_state.queued_extension = SIXTH;
 15772              		.loc 1 203 50 is_stmt 1 discriminator 1 view .LVU3313
 203:Brizachord.cpp **** 	else if (gpio_state.button_6th.FallingEdge())   instrument_state.queued_extension = SIXTH;
 15773              		.loc 1 203 84 is_stmt 0 discriminator 1 view .LVU3314
 15774 0186 0122     		movs	r2, #1
 15775 0188 84F8A120 		strb	r2, [r4, #161]
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15776              		.loc 1 209 3 is_stmt 1 discriminator 1 view .LVU3315
 15777              	.LVL723:
 15778              	.LBB9384:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 711


  65:../../libDaisy//src/hid/switch.h **** 
 15779              		.loc 11 65 17 discriminator 1 view .LVU3316
 15780              	.LBB8885:
  65:../../libDaisy//src/hid/switch.h **** 
 15781              		.loc 11 65 38 discriminator 1 view .LVU3317
  65:../../libDaisy//src/hid/switch.h **** 
 15782              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU3318
 15783 018c 002B     		cmp	r3, #0
 15784 018e 3FF44DAF 		beq	.L499
 15785              	.LVL724:
  65:../../libDaisy//src/hid/switch.h **** 
 15786              		.loc 11 65 54 discriminator 1 view .LVU3319
 15787              	.LBE8885:
 15788              	.LBE9384:
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15789              		.loc 1 209 7 view .LVU3320
 15790 0192 94F8DC30 		ldrb	r3, [r4, #220]	@ zero_extendqisi2
 15791 0196 7F2B     		cmp	r3, #127
 15792 0198 3FF459AF 		beq	.L500
 15793 019c 46E7     		b	.L499
 15794              	.L497:
 204:Brizachord.cpp **** 	else if (gpio_state.button_7th.FallingEdge())   instrument_state.queued_extension = SEVENTH;
 15795              		.loc 1 204 7 is_stmt 1 view .LVU3321
 15796              	.LVL725:
 15797              	.LBB9385:
 15798              	.LBI9385:
  68:../../libDaisy//src/hid/switch.h ****     {
 15799              		.loc 11 68 17 view .LVU3322
 15800              	.LBB9386:
 15801              		.loc 11 70 9 view .LVU3323
 15802              		.loc 11 70 25 is_stmt 0 view .LVU3324
 15803 019e 94F80C11 		ldrb	r1, [r4, #268]	@ zero_extendqisi2
 15804 01a2 D1B9     		cbnz	r1, .L592
 15805              	.LVL726:
 15806              	.L501:
 15807              		.loc 11 70 25 view .LVU3325
 15808              	.LBE9386:
 15809              	.LBE9385:
 205:Brizachord.cpp **** 	else if (gpio_state.button_9th.FallingEdge())   instrument_state.queued_extension = NINTH;
 15810              		.loc 1 205 7 is_stmt 1 view .LVU3326
 15811              	.LBB9387:
 15812              	.LBI9387:
  68:../../libDaisy//src/hid/switch.h ****     {
 15813              		.loc 11 68 17 view .LVU3327
 15814              	.LBB9388:
 15815              		.loc 11 70 9 view .LVU3328
 15816              		.loc 11 70 25 is_stmt 0 view .LVU3329
 15817 01a4 94F83011 		ldrb	r1, [r4, #304]	@ zero_extendqisi2
 15818 01a8 61B3     		cbz	r1, .L503
 15819              	.LVL727:
 15820              		.loc 11 70 25 view .LVU3330
 15821              	.LBE9388:
 15822              	.LBE9387:
 205:Brizachord.cpp **** 	else if (gpio_state.button_9th.FallingEdge())   instrument_state.queued_extension = NINTH;
 15823              		.loc 1 205 7 view .LVU3331
 15824 01aa 94F84811 		ldrb	r1, [r4, #328]	@ zero_extendqisi2
 15825 01ae 8029     		cmp	r1, #128
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 712


 15826 01b0 28D1     		bne	.L503
 205:Brizachord.cpp **** 	else if (gpio_state.button_9th.FallingEdge())   instrument_state.queued_extension = NINTH;
 15827              		.loc 1 205 50 is_stmt 1 discriminator 1 view .LVU3332
 205:Brizachord.cpp **** 	else if (gpio_state.button_9th.FallingEdge())   instrument_state.queued_extension = NINTH;
 15828              		.loc 1 205 84 is_stmt 0 discriminator 1 view .LVU3333
 15829 01b2 0321     		movs	r1, #3
 15830 01b4 84F8A110 		strb	r1, [r4, #161]
 15831              	.L502:
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15832              		.loc 1 209 3 is_stmt 1 view .LVU3334
 15833              	.LVL728:
 15834              	.LBB9389:
  65:../../libDaisy//src/hid/switch.h **** 
 15835              		.loc 11 65 17 view .LVU3335
 15836              	.LBB8886:
  65:../../libDaisy//src/hid/switch.h **** 
 15837              		.loc 11 65 38 view .LVU3336
  65:../../libDaisy//src/hid/switch.h **** 
 15838              		.loc 11 65 54 is_stmt 0 view .LVU3337
 15839 01b8 002B     		cmp	r3, #0
 15840 01ba 3FF434AF 		beq	.L496
 15841              	.LVL729:
 15842              	.L593:
  65:../../libDaisy//src/hid/switch.h **** 
 15843              		.loc 11 65 54 view .LVU3338
 15844              	.LBE8886:
 15845              	.LBE9389:
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15846              		.loc 1 209 7 view .LVU3339
 15847 01be 94F8DC30 		ldrb	r3, [r4, #220]	@ zero_extendqisi2
 15848 01c2 7F2B     		cmp	r3, #127
 15849 01c4 3FF443AF 		beq	.L500
 15850              	.LVL730:
 15851              	.LBB9390:
  65:../../libDaisy//src/hid/switch.h **** 
 15852              		.loc 11 65 17 is_stmt 1 view .LVU3340
 15853              	.LBB8891:
  65:../../libDaisy//src/hid/switch.h **** 
 15854              		.loc 11 65 38 view .LVU3341
  65:../../libDaisy//src/hid/switch.h **** 
 15855              		.loc 11 65 54 is_stmt 0 view .LVU3342
 15856 01c8 002A     		cmp	r2, #0
 15857 01ca 3FF42FAF 		beq	.L499
 15858              	.LVL731:
 15859              	.L588:
  65:../../libDaisy//src/hid/switch.h **** 
 15860              		.loc 11 65 54 view .LVU3343
 15861 01ce 94F80011 		ldrb	r1, [r4, #256]	@ zero_extendqisi2
 15862              	.LVL732:
  65:../../libDaisy//src/hid/switch.h **** 
 15863              		.loc 11 65 54 view .LVU3344
 15864              	.LBE8891:
 15865              	.LBE9390:
 210:Brizachord.cpp **** 			|| gpio_state.button_6th.RisingEdge() 
 15866              		.loc 1 210 4 view .LVU3345
 15867 01d2 7F29     		cmp	r1, #127
 15868 01d4 3FF43BAF 		beq	.L500
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 713


 15869 01d8 28E7     		b	.L499
 15870              	.LVL733:
 15871              	.L592:
 204:Brizachord.cpp **** 	else if (gpio_state.button_7th.FallingEdge())   instrument_state.queued_extension = SEVENTH;
 15872              		.loc 1 204 7 view .LVU3346
 15873 01da 94F82411 		ldrb	r1, [r4, #292]	@ zero_extendqisi2
 15874 01de 8029     		cmp	r1, #128
 15875 01e0 E0D1     		bne	.L501
 204:Brizachord.cpp **** 	else if (gpio_state.button_7th.FallingEdge())   instrument_state.queued_extension = SEVENTH;
 15876              		.loc 1 204 50 is_stmt 1 discriminator 1 view .LVU3347
 204:Brizachord.cpp **** 	else if (gpio_state.button_7th.FallingEdge())   instrument_state.queued_extension = SEVENTH;
 15877              		.loc 1 204 84 is_stmt 0 discriminator 1 view .LVU3348
 15878 01e2 0221     		movs	r1, #2
 15879 01e4 84F8A110 		strb	r1, [r4, #161]
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15880              		.loc 1 209 3 is_stmt 1 discriminator 1 view .LVU3349
 15881              	.LVL734:
 15882              	.LBB9391:
  65:../../libDaisy//src/hid/switch.h **** 
 15883              		.loc 11 65 17 discriminator 1 view .LVU3350
 15884              	.LBB8887:
  65:../../libDaisy//src/hid/switch.h **** 
 15885              		.loc 11 65 38 discriminator 1 view .LVU3351
  65:../../libDaisy//src/hid/switch.h **** 
 15886              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU3352
 15887 01e8 002B     		cmp	r3, #0
 15888 01ea 3FF41CAF 		beq	.L496
 15889 01ee E6E7     		b	.L593
 15890              	.LVL735:
 15891              	.L510:
  65:../../libDaisy//src/hid/switch.h **** 
 15892              		.loc 11 65 54 discriminator 1 view .LVU3353
 15893              	.LBE8887:
 15894              	.LBE9391:
 15895              	.LBB9392:
 15896              	.LBI9392:
  65:../../libDaisy//src/hid/switch.h **** 
 15897              		.loc 11 65 17 is_stmt 1 discriminator 3 view .LVU3354
 15898              	.LBB9393:
  65:../../libDaisy//src/hid/switch.h **** 
 15899              		.loc 11 65 38 discriminator 3 view .LVU3355
  65:../../libDaisy//src/hid/switch.h **** 
 15900              		.loc 11 65 54 is_stmt 0 discriminator 3 view .LVU3356
 15901 01f0 94F85431 		ldrb	r3, [r4, #340]	@ zero_extendqisi2
 15902 01f4 002B     		cmp	r3, #0
 15903 01f6 BCD0     		beq	.L494
 15904              	.LVL736:
  65:../../libDaisy//src/hid/switch.h **** 
 15905              		.loc 11 65 54 discriminator 3 view .LVU3357
 15906              	.LBE9393:
 15907              	.LBE9392:
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15908              		.loc 1 209 7 view .LVU3358
 15909 01f8 94F86C31 		ldrb	r3, [r4, #364]	@ zero_extendqisi2
 15910 01fc 7F2B     		cmp	r3, #127
 15911 01fe 3FF426AF 		beq	.L500
 15912 0202 B6E7     		b	.L494
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 714


 15913              	.L503:
 206:Brizachord.cpp **** 	else if (gpio_state.button_11th.FallingEdge())  instrument_state.queued_extension = ELEVENTH;
 15914              		.loc 1 206 7 is_stmt 1 view .LVU3359
 15915              	.LVL737:
 15916              	.LBB9394:
 15917              	.LBI9394:
  68:../../libDaisy//src/hid/switch.h ****     {
 15918              		.loc 11 68 17 view .LVU3360
 15919              	.LBB9395:
 15920              		.loc 11 70 9 view .LVU3361
 15921              		.loc 11 70 25 is_stmt 0 view .LVU3362
 15922 0204 94F85411 		ldrb	r1, [r4, #340]	@ zero_extendqisi2
 15923 0208 0029     		cmp	r1, #0
 15924 020a D5D0     		beq	.L502
 15925              	.LVL738:
 15926              		.loc 11 70 25 view .LVU3363
 15927              	.LBE9395:
 15928              	.LBE9394:
 206:Brizachord.cpp **** 	else if (gpio_state.button_11th.FallingEdge())  instrument_state.queued_extension = ELEVENTH;
 15929              		.loc 1 206 7 view .LVU3364
 15930 020c 94F86C11 		ldrb	r1, [r4, #364]	@ zero_extendqisi2
 15931 0210 8029     		cmp	r1, #128
 15932 0212 D1D1     		bne	.L502
 206:Brizachord.cpp **** 	else if (gpio_state.button_11th.FallingEdge())  instrument_state.queued_extension = ELEVENTH;
 15933              		.loc 1 206 50 is_stmt 1 discriminator 1 view .LVU3365
 206:Brizachord.cpp **** 	else if (gpio_state.button_11th.FallingEdge())  instrument_state.queued_extension = ELEVENTH;
 15934              		.loc 1 206 84 is_stmt 0 discriminator 1 view .LVU3366
 15935 0214 0421     		movs	r1, #4
 15936 0216 84F8A110 		strb	r1, [r4, #161]
 209:Brizachord.cpp **** 		if (!(gpio_state.button_triad.RisingEdge()
 15937              		.loc 1 209 3 is_stmt 1 discriminator 1 view .LVU3367
 15938              	.LVL739:
 15939              	.LBB9396:
  65:../../libDaisy//src/hid/switch.h **** 
 15940              		.loc 11 65 17 discriminator 1 view .LVU3368
 15941              	.LBB8888:
  65:../../libDaisy//src/hid/switch.h **** 
 15942              		.loc 11 65 38 discriminator 1 view .LVU3369
  65:../../libDaisy//src/hid/switch.h **** 
 15943              		.loc 11 65 54 is_stmt 0 discriminator 1 view .LVU3370
 15944 021a 002B     		cmp	r3, #0
 15945 021c 3FF403AF 		beq	.L496
 15946 0220 CDE7     		b	.L593
 15947              	.LVL740:
 15948              	.L516:
  65:../../libDaisy//src/hid/switch.h **** 
 15949              		.loc 11 65 54 discriminator 1 view .LVU3371
 15950              	.LBE8888:
 15951              	.LBE9396:
 15952              	.LBB9397:
 15953              	.LBB9382:
 15954              	.LBB9375:
 15955              	.LBB9036:
 15956              	.LBB9032:
 15957              	.LBB9028:
 15958              	.LBB9024:
 15959              	.LBB9020:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 715


 15960              	.LBB9016:
 15961              	.LBB9005:
 15962              	.LBB9000:
 15963              	.LBB8995:
 15964              	.LBB8990:
 15965              	.LBB8985:
 15966              	.LBB8970:
 15967              	.LBB8950:
 15968              	.LBB8947:
 15969              	.LBB8938:
 15970              	.LBI8938:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15971              		.loc 5 346 7 is_stmt 1 view .LVU3372
 15972              	.LBB8939:
 15973              	.LBI8939:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15974              		.loc 21 387 7 view .LVU3373
 15975              	.LBB8940:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15976              		.loc 21 389 2 view .LVU3374
 15977 0222 002D     		cmp	r5, #0
 15978 0224 33D1     		bne	.L594
 15979 0226 3246     		mov	r2, r6
 15980 0228 0DF11009 		add	r9, sp, #16
 15981              	.LVL741:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15982              		.loc 21 389 2 is_stmt 0 view .LVU3375
 15983 022c 2FE7     		b	.L517
 15984              	.LVL742:
 15985              	.L533:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15986              		.loc 21 389 2 view .LVU3376
 15987              	.LBE8940:
 15988              	.LBE8939:
 15989              	.LBE8938:
 15990              	.LBE8947:
 15991              	.LBE8950:
 15992              	.LBE8970:
 15993              	.LBE8985:
 15994              	.LBE8990:
 15995              	.LBE8995:
 15996              	.LBE9000:
 15997              	.LBE9005:
 15998              	.LBE9016:
 15999              	.LBE9020:
 16000              	.LBE9024:
 16001              	.LBE9028:
 16002              	.LBE9032:
 16003              	.LBE9036:
 16004              	.LBE9375:
 16005              	.LBB9376:
 16006              	.LBB9329:
 16007              	.LBB9325:
 16008              	.LBB9255:
 16009              	.LBB9247:
 16010              	.LBB9240:
 16011              	.LBB9236:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 716


 16012 022e 2F46     		mov	r7, r5
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16013              		.loc 14 346 18 view .LVU3377
 16014 0230 2B46     		mov	r3, r5
 16015 0232 80E7     		b	.L526
 16016              	.LVL743:
 16017              	.L523:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16018              		.loc 14 346 18 view .LVU3378
 16019              	.LBE9236:
 16020              	.LBE9240:
 16021              	.LBE9247:
 16022              	.LBE9255:
 16023              	.LBE9325:
 16024              	.LBE9329:
 16025              	.LBE9376:
 16026              	.LBB9377:
 16027              	.LBB9183:
 16028              	.LBB9179:
 16029              	.LBB9175:
 16030              	.LBB9171:
 16031              	.LBB9167:
 16032              	.LBB9163:
 16033              	.LBB9160:
 16034              	.LBB9157:
 16035              	.LBB9154:
 16036              	.LBB9151:
 16037              	.LBB9148:
 16038              	.LBB9134:
 16039              	.LBB9114:
 16040              	.LBB9111:
 16041              	.LBB9102:
 16042              	.LBI9102:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16043              		.loc 5 346 7 is_stmt 1 view .LVU3379
 16044              	.LBB9103:
 16045              	.LBI9103:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16046              		.loc 21 387 7 view .LVU3380
 16047              	.LBB9104:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16048              		.loc 21 389 2 view .LVU3381
 16049 0234 45BB     		cbnz	r5, .L595
 16050 0236 3A46     		mov	r2, r7
 16051 0238 0BAE     		add	r6, sp, #44
 16052              	.LVL744:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16053              		.loc 21 389 2 is_stmt 0 view .LVU3382
 16054 023a 54E7     		b	.L524
 16055              	.LVL745:
 16056              	.L590:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16057              		.loc 21 389 2 view .LVU3383
 16058              	.LBE9104:
 16059              	.LBE9103:
 16060              	.LBE9102:
 16061              	.LBE9111:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 717


 16062              	.LBE9114:
 16063              	.LBE9134:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16064              		.loc 25 219 13 view .LVU3384
 16065 023c 0BAE     		add	r6, sp, #44
 16066              	.LVL746:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16067              		.loc 25 219 13 view .LVU3385
 16068 023e 4946     		mov	r1, r9
 16069 0240 0022     		movs	r2, #0
 16070 0242 3046     		mov	r0, r6
 16071 0244 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 16072              	.LVL747:
 16073              	.LBB9135:
 16074              	.LBI9135:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 16075              		.loc 5 178 7 is_stmt 1 view .LVU3386
 16076              	.LBE9135:
 16077              	.LBB9137:
 16078              	.LBB9138:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16079              		.loc 5 211 31 is_stmt 0 view .LVU3387
 16080 0248 049B     		ldr	r3, [sp, #16]
 16081              	.LBE9138:
 16082              	.LBE9137:
 16083              	.LBB9140:
 16084              	.LBB9136:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16085              		.loc 5 179 26 view .LVU3388
 16086 024a 0B90     		str	r0, [sp, #44]
 16087              	.LVL748:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16088              		.loc 5 179 26 view .LVU3389
 16089              	.LBE9136:
 16090              	.LBE9140:
 16091              	.LBB9141:
 16092              	.LBI9137:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16093              		.loc 5 210 7 is_stmt 1 view .LVU3390
 16094              	.LBB9139:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16095              		.loc 5 211 31 is_stmt 0 view .LVU3391
 16096 024c 0D93     		str	r3, [sp, #52]
 16097              	.LVL749:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16098              		.loc 5 211 31 view .LVU3392
 16099              	.LBE9139:
 16100              	.LBE9141:
 16101              	.LBB9142:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16102              		.loc 5 186 7 is_stmt 1 view .LVU3393
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16103              		.loc 5 186 7 is_stmt 0 view .LVU3394
 16104              	.LBE9142:
 16105              	.LBB9143:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 16106              		.loc 5 392 7 is_stmt 1 view .LVU3395
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 718


 16107              	.LBB9115:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16108              		.loc 5 346 7 view .LVU3396
 16109              	.LBB9112:
 16110              	.LBB9109:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16111              		.loc 5 346 7 view .LVU3397
 16112              	.LBB9107:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16113              		.loc 21 387 7 view .LVU3398
 16114              	.LBB9105:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16115              		.loc 21 389 2 view .LVU3399
 16116              	.L522:
 16117              		.loc 21 395 2 view .LVU3400
 16118              		.loc 21 395 49 is_stmt 0 view .LVU3401
 16119 024e 2A46     		mov	r2, r5
 16120 0250 4146     		mov	r1, r8
 16121 0252 FFF7FEFF 		bl	memcpy
 16122              	.LVL750:
 16123              		.loc 21 395 49 view .LVU3402
 16124              	.LBE9105:
 16125              	.LBE9107:
 16126              	.LBE9109:
 16127              	.LBE9112:
 16128              	.LBE9115:
 16129              	.LBE9143:
 16130              		.loc 25 232 15 view .LVU3403
 16131 0256 049D     		ldr	r5, [sp, #16]
 16132              	.LVL751:
 16133              	.LBB9144:
 16134              	.LBB9132:
 16135              	.LBB9130:
 16136              	.LBB9127:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16137              		.loc 5 187 28 view .LVU3404
 16138 0258 0B9A     		ldr	r2, [sp, #44]
 16139              	.LBE9127:
 16140              	.LBE9130:
 16141              	.LBE9132:
 16142              	.LBE9144:
 16143              	.LBB9145:
 16144              	.LBB9116:
 16145              	.LBB9113:
 16146              	.LBB9110:
 16147              	.LBB9108:
 16148              	.LBB9106:
 16149              		.loc 21 395 66 view .LVU3405
 16150 025a 44E7     		b	.L524
 16151              	.LVL752:
 16152              	.L589:
 16153              		.loc 21 395 66 view .LVU3406
 16154              	.LBE9106:
 16155              	.LBE9108:
 16156              	.LBE9110:
 16157              	.LBE9113:
 16158              	.LBE9116:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 719


 16159              	.LBE9145:
 16160              	.LBE9148:
 16161              	.LBE9151:
 16162              	.LBE9154:
 16163              	.LBE9157:
 16164              	.LBE9160:
 16165              	.LBE9163:
 16166              	.LBE9167:
 16167              	.LBE9171:
 16168              	.LBE9175:
 16169              	.LBE9179:
 16170              	.LBE9183:
 16171              	.LBE9377:
 16172              	.LBB9378:
 16173              	.LBB9037:
 16174              	.LBB9033:
 16175              	.LBB9029:
 16176              	.LBB9025:
 16177              	.LBB9021:
 16178              	.LBB9017:
 16179              	.LBB9006:
 16180              	.LBB9001:
 16181              	.LBB8996:
 16182              	.LBB8991:
 16183              	.LBB8986:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16184              		.loc 25 219 13 view .LVU3407
 16185 025c 0DF11009 		add	r9, sp, #16
 16186              	.LVL753:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16187              		.loc 25 219 13 view .LVU3408
 16188 0260 0022     		movs	r2, #0
 16189 0262 0BA9     		add	r1, sp, #44
 16190 0264 4846     		mov	r0, r9
 16191              	.LVL754:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16192              		.loc 25 219 13 view .LVU3409
 16193 0266 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 16194              	.LVL755:
 16195              	.LBB8971:
 16196              	.LBI8971:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 16197              		.loc 5 178 7 is_stmt 1 view .LVU3410
 16198              	.LBE8971:
 16199              	.LBB8973:
 16200              	.LBB8974:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16201              		.loc 5 211 31 is_stmt 0 view .LVU3411
 16202 026a 0B9B     		ldr	r3, [sp, #44]
 16203              	.LBE8974:
 16204              	.LBE8973:
 16205              	.LBB8976:
 16206              	.LBB8972:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16207              		.loc 5 179 26 view .LVU3412
 16208 026c 0490     		str	r0, [sp, #16]
 16209              	.LVL756:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 720


 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16210              		.loc 5 179 26 view .LVU3413
 16211              	.LBE8972:
 16212              	.LBE8976:
 16213              	.LBB8977:
 16214              	.LBI8973:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16215              		.loc 5 210 7 is_stmt 1 view .LVU3414
 16216              	.LBB8975:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16217              		.loc 5 211 31 is_stmt 0 view .LVU3415
 16218 026e 0693     		str	r3, [sp, #24]
 16219              	.LVL757:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16220              		.loc 5 211 31 view .LVU3416
 16221              	.LBE8975:
 16222              	.LBE8977:
 16223              	.LBB8978:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16224              		.loc 5 186 7 is_stmt 1 view .LVU3417
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16225              		.loc 5 186 7 is_stmt 0 view .LVU3418
 16226              	.LBE8978:
 16227              	.LBB8979:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 16228              		.loc 5 392 7 is_stmt 1 view .LVU3419
 16229              	.LBB8951:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16230              		.loc 5 346 7 view .LVU3420
 16231              	.LBB8948:
 16232              	.LBB8945:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16233              		.loc 5 346 7 view .LVU3421
 16234              	.LBB8943:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16235              		.loc 21 387 7 view .LVU3422
 16236              	.LBB8941:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16237              		.loc 21 389 2 view .LVU3423
 16238              	.L515:
 16239              		.loc 21 395 2 view .LVU3424
 16240              		.loc 21 395 49 is_stmt 0 view .LVU3425
 16241 0270 2A46     		mov	r2, r5
 16242 0272 3946     		mov	r1, r7
 16243 0274 FFF7FEFF 		bl	memcpy
 16244              	.LVL758:
 16245              		.loc 21 395 49 view .LVU3426
 16246              	.LBE8941:
 16247              	.LBE8943:
 16248              	.LBE8945:
 16249              	.LBE8948:
 16250              	.LBE8951:
 16251              	.LBE8979:
 16252              		.loc 25 232 15 view .LVU3427
 16253 0278 0B9D     		ldr	r5, [sp, #44]
 16254              	.LVL759:
 16255              	.LBB8980:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 721


 16256              	.LBB8968:
 16257              	.LBB8966:
 16258              	.LBB8963:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16259              		.loc 5 187 28 view .LVU3428
 16260 027a 049A     		ldr	r2, [sp, #16]
 16261              	.LBE8963:
 16262              	.LBE8966:
 16263              	.LBE8968:
 16264              	.LBE8980:
 16265              	.LBB8981:
 16266              	.LBB8952:
 16267              	.LBB8949:
 16268              	.LBB8946:
 16269              	.LBB8944:
 16270              	.LBB8942:
 16271              		.loc 21 395 66 view .LVU3429
 16272 027c 07E7     		b	.L517
 16273              	.LVL760:
 16274              	.L519:
 16275              		.loc 21 395 66 view .LVU3430
 16276              	.LBE8942:
 16277              	.LBE8944:
 16278              	.LBE8946:
 16279              	.LBE8949:
 16280              	.LBE8952:
 16281              	.LBE8981:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 16282              		.loc 25 212 28 view .LVU3431
 16283 027e 0748     		ldr	r0, .L596+4
 16284 0280 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 16285              	.LVL761:
 16286              	.L591:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 16287              		.loc 25 212 28 view .LVU3432
 16288              	.LBE8986:
 16289              	.LBE8991:
 16290              	.LBE8996:
 16291              	.LBE9001:
 16292              	.LBE9006:
 16293              	.LBE9017:
 16294              	.LBE9021:
 16295              	.LBE9025:
 16296              	.LBE9029:
 16297              	.LBE9033:
 16298              	.LBE9037:
 16299              	.LBE9378:
 16300              	.LBB9379:
 16301              	.LBB9330:
 16302              	.LBB9326:
 16303              	.LBB9256:
 16304              	.LBB9248:
 16305              	.LBB9241:
 16306              	.LBB9237:
 16307              	.LBB9233:
 16308              	.LBB9231:
 16309              	.LBB9229:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 722


 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16310              		.loc 7 106 26 view .LVU3433
 16311 0284 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 16312              	.LVL762:
 16313              	.L595:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16314              		.loc 7 106 26 view .LVU3434
 16315              	.LBE9229:
 16316              	.LBE9231:
 16317              	.LBE9233:
 16318              	.LBE9237:
 16319              	.LBE9241:
 16320              	.LBE9248:
 16321              	.LBE9256:
 16322              	.LBE9326:
 16323              	.LBE9330:
 16324              	.LBE9379:
 16325              	.LBB9380:
 16326              	.LBB9184:
 16327              	.LBB9180:
 16328              	.LBB9176:
 16329              	.LBB9172:
 16330              	.LBB9168:
 16331              	.LBB9164:
 16332              	.LBB9161:
 16333              	.LBB9158:
 16334              	.LBB9155:
 16335              	.LBB9152:
 16336              	.LBB9149:
 16337              	.LBB9146:
 16338              	.LBB9096:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16339              		.loc 5 187 28 view .LVU3435
 16340 0288 3846     		mov	r0, r7
 16341 028a 0BAE     		add	r6, sp, #44
 16342              	.LVL763:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16343              		.loc 5 187 28 view .LVU3436
 16344 028c DFE7     		b	.L522
 16345              	.LVL764:
 16346              	.L594:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16347              		.loc 5 187 28 view .LVU3437
 16348              	.LBE9096:
 16349              	.LBE9146:
 16350              	.LBE9149:
 16351              	.LBE9152:
 16352              	.LBE9155:
 16353              	.LBE9158:
 16354              	.LBE9161:
 16355              	.LBE9164:
 16356              	.LBE9168:
 16357              	.LBE9172:
 16358              	.LBE9176:
 16359              	.LBE9180:
 16360              	.LBE9184:
 16361              	.LBE9380:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 723


 16362              	.LBB9381:
 16363              	.LBB9038:
 16364              	.LBB9034:
 16365              	.LBB9030:
 16366              	.LBB9026:
 16367              	.LBB9022:
 16368              	.LBB9018:
 16369              	.LBB9007:
 16370              	.LBB9002:
 16371              	.LBB8997:
 16372              	.LBB8992:
 16373              	.LBB8987:
 16374              	.LBB8982:
 16375              	.LBB8932:
 16376 028e 3046     		mov	r0, r6
 16377              	.LVL765:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16378              		.loc 5 187 28 view .LVU3438
 16379 0290 0DF11009 		add	r9, sp, #16
 16380              	.LVL766:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16381              		.loc 5 187 28 view .LVU3439
 16382 0294 ECE7     		b	.L515
 16383              	.L597:
 16384 0296 00BF     		.align	2
 16385              	.L596:
 16386 0298 FCFFFF7F 		.word	2147483644
 16387 029c 00000000 		.word	.LC1
 16388              	.LBE8932:
 16389              	.LBE8982:
 16390              	.LBE8987:
 16391              	.LBE8992:
 16392              	.LBE8997:
 16393              	.LBE9002:
 16394              	.LBE9007:
 16395              	.LBE9018:
 16396              	.LBE9022:
 16397              	.LBE9026:
 16398              	.LBE9030:
 16399              	.LBE9034:
 16400              	.LBE9038:
 16401              	.LBE9381:
 16402              	.LBE9382:
 16403              	.LBE9397:
 16404              		.cfi_endproc
 16405              	.LFE5614:
 16407              		.section	.text._ZN10Brizachord9main_loopEv,"ax",%progbits
 16408              		.align	1
 16409              		.p2align 2,,3
 16410              		.global	_ZN10Brizachord9main_loopEv
 16411              		.syntax unified
 16412              		.thumb
 16413              		.thumb_func
 16414              		.fpu fpv5-d16
 16416              	_ZN10Brizachord9main_loopEv:
 16417              	.LVL767:
 16418              	.LFB5610:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 724


  76:Brizachord.cpp **** void Brizachord::main_loop() {
 16419              		.loc 1 76 30 is_stmt 1 view -0
 16420              		.cfi_startproc
 16421              		@ Volatile: function does not return.
 16422              		@ args = 0, pretend = 0, frame = 8
 16423              		@ frame_needed = 0, uses_anonymous_args = 0
  76:Brizachord.cpp **** void Brizachord::main_loop() {
 16424              		.loc 1 76 30 is_stmt 0 view .LVU3441
 16425 0000 2DE98048 		push	{r7, fp, lr}
 16426              		.cfi_def_cfa_offset 12
 16427              		.cfi_offset 7, -12
 16428              		.cfi_offset 11, -8
 16429              		.cfi_offset 14, -4
 16430              	.LBB9402:
 16431              	.LBB9403:
  70:GPIOState.h   **** 
  71:GPIOState.h   ****     void debounce_all() {
  72:GPIOState.h   ****         button_Db.Debounce();
 16432              		.loc 10 72 27 view .LVU3442
 16433 0004 00F1C003 		add	r3, r0, #192
 16434              	.LBE9403:
 16435              	.LBE9402:
  76:Brizachord.cpp **** void Brizachord::main_loop() {
 16436              		.loc 1 76 30 view .LVU3443
 16437 0008 83B0     		sub	sp, sp, #12
 16438              		.cfi_def_cfa_offset 24
  76:Brizachord.cpp **** void Brizachord::main_loop() {
 16439              		.loc 1 76 30 view .LVU3444
 16440 000a 0446     		mov	r4, r0
 16441              	.LBB9406:
 16442              	.LBB9404:
  73:GPIOState.h   ****         button_Eb.Debounce();
  74:GPIOState.h   ****         button_Gb.Debounce();
  75:GPIOState.h   ****         button_Ab.Debounce();
  76:GPIOState.h   ****         button_Bb.Debounce();
  77:GPIOState.h   ****         
  78:GPIOState.h   ****         button_C.Debounce();
  79:GPIOState.h   ****         button_D.Debounce();
  80:GPIOState.h   ****         button_E.Debounce();
  81:GPIOState.h   ****         button_F.Debounce();
  82:GPIOState.h   ****         button_G.Debounce();
  83:GPIOState.h   ****         button_A.Debounce();
  84:GPIOState.h   ****         button_B.Debounce();
  85:GPIOState.h   **** 
  86:GPIOState.h   ****         button_triad.Debounce();
  87:GPIOState.h   ****         button_6th.Debounce();
  88:GPIOState.h   ****         button_7th.Debounce();
  89:GPIOState.h   ****         button_9th.Debounce();
  90:GPIOState.h   ****         button_11th.Debounce();
 16443              		.loc 10 90 29 view .LVU3445
 16444 000c 00F5A87B 		add	fp, r0, #336
  72:GPIOState.h   ****         button_Eb.Debounce();
 16445              		.loc 10 72 27 view .LVU3446
 16446 0010 0193     		str	r3, [sp, #4]
 16447 0012 00F50A73 		add	r3, r0, #552
  91:GPIOState.h   **** 
  92:GPIOState.h   ****         button_maj.Debounce();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 725


 16448              		.loc 10 92 28 view .LVU3447
 16449 0016 00F5BA7A 		add	r10, r0, #372
  93:GPIOState.h   ****         button_min.Debounce();
 16450              		.loc 10 93 28 view .LVU3448
 16451 001a 00F5CC79 		add	r9, r0, #408
  72:GPIOState.h   ****         button_Eb.Debounce();
 16452              		.loc 10 72 27 view .LVU3449
 16453 001e 08EE103A 		vmov	s16, r3	@ int
  73:GPIOState.h   ****         button_Gb.Debounce();
 16454              		.loc 10 73 27 view .LVU3450
 16455 0022 00F51C73 		add	r3, r0, #624
  94:GPIOState.h   ****         button_aug.Debounce();
 16456              		.loc 10 94 28 view .LVU3451
 16457 0026 00F5DE78 		add	r8, r0, #444
  95:GPIOState.h   ****         button_dim.Debounce();
 16458              		.loc 10 95 28 view .LVU3452
 16459 002a 00F5F077 		add	r7, r0, #480
  73:GPIOState.h   ****         button_Gb.Debounce();
 16460              		.loc 10 73 27 view .LVU3453
 16461 002e 08EE903A 		vmov	s17, r3	@ int
  74:GPIOState.h   ****         button_Ab.Debounce();
 16462              		.loc 10 74 27 view .LVU3454
 16463 0032 00F53773 		add	r3, r0, #732
  96:GPIOState.h   **** 
  97:GPIOState.h   ****         groove.Debounce();
 16464              		.loc 10 97 24 view .LVU3455
 16465 0036 00F56D76 		add	r6, r0, #948
  98:GPIOState.h   ****         drum_left.Debounce();
 16466              		.loc 10 98 27 view .LVU3456
 16467 003a 00F57675 		add	r5, r0, #984
  74:GPIOState.h   ****         button_Ab.Debounce();
 16468              		.loc 10 74 27 view .LVU3457
 16469 003e 09EE103A 		vmov	s18, r3	@ int
  75:GPIOState.h   ****         button_Bb.Debounce();
 16470              		.loc 10 75 27 view .LVU3458
 16471 0042 00F54973 		add	r3, r0, #804
 16472 0046 09EE903A 		vmov	s19, r3	@ int
  76:GPIOState.h   ****         
 16473              		.loc 10 76 27 view .LVU3459
 16474 004a 00F55B73 		add	r3, r0, #876
 16475 004e 0AEE103A 		vmov	s20, r3	@ int
  78:GPIOState.h   ****         button_D.Debounce();
 16476              		.loc 10 78 26 view .LVU3460
 16477 0052 00F50173 		add	r3, r0, #516
 16478 0056 0AEE903A 		vmov	s21, r3	@ int
  79:GPIOState.h   ****         button_E.Debounce();
 16479              		.loc 10 79 26 view .LVU3461
 16480 005a 00F51373 		add	r3, r0, #588
 16481 005e 0BEE103A 		vmov	s22, r3	@ int
  80:GPIOState.h   ****         button_F.Debounce();
 16482              		.loc 10 80 26 view .LVU3462
 16483 0062 00F52573 		add	r3, r0, #660
 16484 0066 0BEE903A 		vmov	s23, r3	@ int
  81:GPIOState.h   ****         button_G.Debounce();
 16485              		.loc 10 81 26 view .LVU3463
 16486 006a 00F52E73 		add	r3, r0, #696
 16487 006e 0CEE103A 		vmov	s24, r3	@ int
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 726


  82:GPIOState.h   ****         button_A.Debounce();
 16488              		.loc 10 82 26 view .LVU3464
 16489 0072 00F54073 		add	r3, r0, #768
 16490 0076 0CEE903A 		vmov	s25, r3	@ int
  83:GPIOState.h   ****         button_B.Debounce();
 16491              		.loc 10 83 26 view .LVU3465
 16492 007a 00F55273 		add	r3, r0, #840
 16493 007e 0DEE103A 		vmov	s26, r3	@ int
  84:GPIOState.h   **** 
 16494              		.loc 10 84 26 view .LVU3466
 16495 0082 00F56473 		add	r3, r0, #912
 16496 0086 0DEE903A 		vmov	s27, r3	@ int
  87:GPIOState.h   ****         button_7th.Debounce();
 16497              		.loc 10 87 28 view .LVU3467
 16498 008a 00F1E403 		add	r3, r0, #228
 16499 008e 0EEE103A 		vmov	s28, r3	@ int
  88:GPIOState.h   ****         button_9th.Debounce();
 16500              		.loc 10 88 28 view .LVU3468
 16501 0092 00F58473 		add	r3, r0, #264
 16502 0096 0EEE903A 		vmov	s29, r3	@ int
  89:GPIOState.h   ****         button_11th.Debounce();
 16503              		.loc 10 89 28 view .LVU3469
 16504 009a 00F59673 		add	r3, r0, #300
 16505 009e 0FEE103A 		vmov	s30, r3	@ int
  99:GPIOState.h   ****         drum_right.Debounce();
 16506              		.loc 10 99 28 view .LVU3470
 16507 00a2 00F57F73 		add	r3, r0, #1020
 16508 00a6 0FEE903A 		vmov	s31, r3	@ int
 16509              	.LVL768:
 16510              	.L599:
 16511              		.loc 10 99 28 view .LVU3471
 16512              	.LBE9404:
 16513              	.LBE9406:
  77:Brizachord.cpp **** 	while(1) {
 16514              		.loc 1 77 2 is_stmt 1 discriminator 1 view .LVU3472
  78:Brizachord.cpp **** 		poll_trill_bar();
 16515              		.loc 1 78 3 discriminator 1 view .LVU3473
  78:Brizachord.cpp **** 		poll_trill_bar();
 16516              		.loc 1 78 17 is_stmt 0 discriminator 1 view .LVU3474
 16517 00aa 2046     		mov	r0, r4
 16518 00ac FFF7FEFF 		bl	_ZN10Brizachord14poll_trill_barEv
 16519              	.LVL769:
  79:Brizachord.cpp **** 		gpio_state.debounce_all();
 16520              		.loc 1 79 3 is_stmt 1 discriminator 1 view .LVU3475
 16521              	.LBB9407:
 16522              	.LBI9402:
  71:GPIOState.h   ****         button_Db.Debounce();
 16523              		.loc 10 71 10 discriminator 1 view .LVU3476
 16524              	.LBB9405:
  72:GPIOState.h   ****         button_Eb.Debounce();
 16525              		.loc 10 72 9 discriminator 1 view .LVU3477
  72:GPIOState.h   ****         button_Eb.Debounce();
 16526              		.loc 10 72 27 is_stmt 0 discriminator 1 view .LVU3478
 16527 00b0 18EE100A 		vmov	r0, s16	@ int
 16528 00b4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16529              	.LVL770:
  73:GPIOState.h   ****         button_Gb.Debounce();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 727


 16530              		.loc 10 73 9 is_stmt 1 discriminator 1 view .LVU3479
  73:GPIOState.h   ****         button_Gb.Debounce();
 16531              		.loc 10 73 27 is_stmt 0 discriminator 1 view .LVU3480
 16532 00b8 18EE900A 		vmov	r0, s17	@ int
 16533 00bc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16534              	.LVL771:
  74:GPIOState.h   ****         button_Ab.Debounce();
 16535              		.loc 10 74 9 is_stmt 1 discriminator 1 view .LVU3481
  74:GPIOState.h   ****         button_Ab.Debounce();
 16536              		.loc 10 74 27 is_stmt 0 discriminator 1 view .LVU3482
 16537 00c0 19EE100A 		vmov	r0, s18	@ int
 16538 00c4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16539              	.LVL772:
  75:GPIOState.h   ****         button_Bb.Debounce();
 16540              		.loc 10 75 9 is_stmt 1 discriminator 1 view .LVU3483
  75:GPIOState.h   ****         button_Bb.Debounce();
 16541              		.loc 10 75 27 is_stmt 0 discriminator 1 view .LVU3484
 16542 00c8 19EE900A 		vmov	r0, s19	@ int
 16543 00cc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16544              	.LVL773:
  76:GPIOState.h   ****         
 16545              		.loc 10 76 9 is_stmt 1 discriminator 1 view .LVU3485
  76:GPIOState.h   ****         
 16546              		.loc 10 76 27 is_stmt 0 discriminator 1 view .LVU3486
 16547 00d0 1AEE100A 		vmov	r0, s20	@ int
 16548 00d4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16549              	.LVL774:
  78:GPIOState.h   ****         button_D.Debounce();
 16550              		.loc 10 78 9 is_stmt 1 discriminator 1 view .LVU3487
  78:GPIOState.h   ****         button_D.Debounce();
 16551              		.loc 10 78 26 is_stmt 0 discriminator 1 view .LVU3488
 16552 00d8 1AEE900A 		vmov	r0, s21	@ int
 16553 00dc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16554              	.LVL775:
  79:GPIOState.h   ****         button_E.Debounce();
 16555              		.loc 10 79 9 is_stmt 1 discriminator 1 view .LVU3489
  79:GPIOState.h   ****         button_E.Debounce();
 16556              		.loc 10 79 26 is_stmt 0 discriminator 1 view .LVU3490
 16557 00e0 1BEE100A 		vmov	r0, s22	@ int
 16558 00e4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16559              	.LVL776:
  80:GPIOState.h   ****         button_F.Debounce();
 16560              		.loc 10 80 9 is_stmt 1 discriminator 1 view .LVU3491
  80:GPIOState.h   ****         button_F.Debounce();
 16561              		.loc 10 80 26 is_stmt 0 discriminator 1 view .LVU3492
 16562 00e8 1BEE900A 		vmov	r0, s23	@ int
 16563 00ec FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16564              	.LVL777:
  81:GPIOState.h   ****         button_G.Debounce();
 16565              		.loc 10 81 9 is_stmt 1 discriminator 1 view .LVU3493
  81:GPIOState.h   ****         button_G.Debounce();
 16566              		.loc 10 81 26 is_stmt 0 discriminator 1 view .LVU3494
 16567 00f0 1CEE100A 		vmov	r0, s24	@ int
 16568 00f4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16569              	.LVL778:
  82:GPIOState.h   ****         button_A.Debounce();
 16570              		.loc 10 82 9 is_stmt 1 discriminator 1 view .LVU3495
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 728


  82:GPIOState.h   ****         button_A.Debounce();
 16571              		.loc 10 82 26 is_stmt 0 discriminator 1 view .LVU3496
 16572 00f8 1CEE900A 		vmov	r0, s25	@ int
 16573 00fc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16574              	.LVL779:
  83:GPIOState.h   ****         button_B.Debounce();
 16575              		.loc 10 83 9 is_stmt 1 discriminator 1 view .LVU3497
  83:GPIOState.h   ****         button_B.Debounce();
 16576              		.loc 10 83 26 is_stmt 0 discriminator 1 view .LVU3498
 16577 0100 1DEE100A 		vmov	r0, s26	@ int
 16578 0104 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16579              	.LVL780:
  84:GPIOState.h   **** 
 16580              		.loc 10 84 9 is_stmt 1 discriminator 1 view .LVU3499
  84:GPIOState.h   **** 
 16581              		.loc 10 84 26 is_stmt 0 discriminator 1 view .LVU3500
 16582 0108 1DEE900A 		vmov	r0, s27	@ int
 16583 010c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16584              	.LVL781:
  86:GPIOState.h   ****         button_6th.Debounce();
 16585              		.loc 10 86 9 is_stmt 1 discriminator 1 view .LVU3501
  86:GPIOState.h   ****         button_6th.Debounce();
 16586              		.loc 10 86 30 is_stmt 0 discriminator 1 view .LVU3502
 16587 0110 0198     		ldr	r0, [sp, #4]
 16588 0112 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16589              	.LVL782:
  87:GPIOState.h   ****         button_7th.Debounce();
 16590              		.loc 10 87 9 is_stmt 1 discriminator 1 view .LVU3503
  87:GPIOState.h   ****         button_7th.Debounce();
 16591              		.loc 10 87 28 is_stmt 0 discriminator 1 view .LVU3504
 16592 0116 1EEE100A 		vmov	r0, s28	@ int
 16593 011a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16594              	.LVL783:
  88:GPIOState.h   ****         button_9th.Debounce();
 16595              		.loc 10 88 9 is_stmt 1 discriminator 1 view .LVU3505
  88:GPIOState.h   ****         button_9th.Debounce();
 16596              		.loc 10 88 28 is_stmt 0 discriminator 1 view .LVU3506
 16597 011e 1EEE900A 		vmov	r0, s29	@ int
 16598 0122 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16599              	.LVL784:
  89:GPIOState.h   ****         button_11th.Debounce();
 16600              		.loc 10 89 9 is_stmt 1 discriminator 1 view .LVU3507
  89:GPIOState.h   ****         button_11th.Debounce();
 16601              		.loc 10 89 28 is_stmt 0 discriminator 1 view .LVU3508
 16602 0126 1FEE100A 		vmov	r0, s30	@ int
 16603 012a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16604              	.LVL785:
  90:GPIOState.h   **** 
 16605              		.loc 10 90 9 is_stmt 1 discriminator 1 view .LVU3509
  90:GPIOState.h   **** 
 16606              		.loc 10 90 29 is_stmt 0 discriminator 1 view .LVU3510
 16607 012e 5846     		mov	r0, fp
 16608 0130 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16609              	.LVL786:
  92:GPIOState.h   ****         button_min.Debounce();
 16610              		.loc 10 92 9 is_stmt 1 discriminator 1 view .LVU3511
  92:GPIOState.h   ****         button_min.Debounce();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 729


 16611              		.loc 10 92 28 is_stmt 0 discriminator 1 view .LVU3512
 16612 0134 5046     		mov	r0, r10
 16613 0136 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16614              	.LVL787:
  93:GPIOState.h   ****         button_aug.Debounce();
 16615              		.loc 10 93 9 is_stmt 1 discriminator 1 view .LVU3513
  93:GPIOState.h   ****         button_aug.Debounce();
 16616              		.loc 10 93 28 is_stmt 0 discriminator 1 view .LVU3514
 16617 013a 4846     		mov	r0, r9
 16618 013c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16619              	.LVL788:
  94:GPIOState.h   ****         button_dim.Debounce();
 16620              		.loc 10 94 9 is_stmt 1 discriminator 1 view .LVU3515
  94:GPIOState.h   ****         button_dim.Debounce();
 16621              		.loc 10 94 28 is_stmt 0 discriminator 1 view .LVU3516
 16622 0140 4046     		mov	r0, r8
 16623 0142 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16624              	.LVL789:
  95:GPIOState.h   **** 
 16625              		.loc 10 95 9 is_stmt 1 discriminator 1 view .LVU3517
  95:GPIOState.h   **** 
 16626              		.loc 10 95 28 is_stmt 0 discriminator 1 view .LVU3518
 16627 0146 3846     		mov	r0, r7
 16628 0148 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16629              	.LVL790:
  97:GPIOState.h   ****         drum_left.Debounce();
 16630              		.loc 10 97 9 is_stmt 1 discriminator 1 view .LVU3519
  97:GPIOState.h   ****         drum_left.Debounce();
 16631              		.loc 10 97 24 is_stmt 0 discriminator 1 view .LVU3520
 16632 014c 3046     		mov	r0, r6
 16633 014e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16634              	.LVL791:
  98:GPIOState.h   ****         drum_right.Debounce();
 16635              		.loc 10 98 9 is_stmt 1 discriminator 1 view .LVU3521
  98:GPIOState.h   ****         drum_right.Debounce();
 16636              		.loc 10 98 27 is_stmt 0 discriminator 1 view .LVU3522
 16637 0152 2846     		mov	r0, r5
 16638 0154 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16639              	.LVL792:
 16640              		.loc 10 99 9 is_stmt 1 discriminator 1 view .LVU3523
 16641              		.loc 10 99 28 is_stmt 0 discriminator 1 view .LVU3524
 16642 0158 1FEE900A 		vmov	r0, s31	@ int
 16643 015c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 16644              	.LVL793:
 16645              		.loc 10 99 28 discriminator 1 view .LVU3525
 16646              	.LBE9405:
 16647              	.LBE9407:
  80:Brizachord.cpp **** 		poll_chord_qual();
 16648              		.loc 1 80 3 is_stmt 1 discriminator 1 view .LVU3526
  80:Brizachord.cpp **** 		poll_chord_qual();
 16649              		.loc 1 80 18 is_stmt 0 discriminator 1 view .LVU3527
 16650 0160 2046     		mov	r0, r4
 16651 0162 FFF7FEFF 		bl	_ZN10Brizachord15poll_chord_qualEv
 16652              	.LVL794:
  81:Brizachord.cpp **** 		poll_chord_ext();
 16653              		.loc 1 81 3 is_stmt 1 discriminator 1 view .LVU3528
  81:Brizachord.cpp **** 		poll_chord_ext();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 730


 16654              		.loc 1 81 17 is_stmt 0 discriminator 1 view .LVU3529
 16655 0166 2046     		mov	r0, r4
 16656 0168 FFF7FEFF 		bl	_ZN10Brizachord14poll_chord_extEv
 16657              	.LVL795:
  82:Brizachord.cpp **** 		poll_chord_root();
 16658              		.loc 1 82 3 is_stmt 1 discriminator 1 view .LVU3530
  82:Brizachord.cpp **** 		poll_chord_root();
 16659              		.loc 1 82 18 is_stmt 0 discriminator 1 view .LVU3531
 16660 016c 2046     		mov	r0, r4
 16661 016e FFF7FEFF 		bl	_ZN10Brizachord15poll_chord_rootEv
 16662              	.LVL796:
  83:Brizachord.cpp **** 		poll_pots();
 16663              		.loc 1 83 3 is_stmt 1 discriminator 1 view .LVU3532
  83:Brizachord.cpp **** 		poll_pots();
 16664              		.loc 1 83 12 is_stmt 0 discriminator 1 view .LVU3533
 16665 0172 2046     		mov	r0, r4
 16666 0174 FFF7FEFF 		bl	_ZN10Brizachord9poll_potsEv
 16667              	.LVL797:
  84:Brizachord.cpp **** 		poll_pattern_controls();
 16668              		.loc 1 84 3 is_stmt 1 discriminator 1 view .LVU3534
  84:Brizachord.cpp **** 		poll_pattern_controls();
 16669              		.loc 1 84 24 is_stmt 0 discriminator 1 view .LVU3535
 16670 0178 2046     		mov	r0, r4
 16671 017a FFF7FEFF 		bl	_ZN10Brizachord21poll_pattern_controlsEv
 16672              	.LVL798:
  86:Brizachord.cpp **** 		sequencer.set_bpm(instrument_state.bpm);
 16673              		.loc 1 86 3 is_stmt 1 discriminator 1 view .LVU3536
 16674              	.LBB9408:
 16675              	.LBI9408:
  17:Sequencer.h   **** 
 16676              		.loc 12 17 10 discriminator 1 view .LVU3537
 16677              	.LBB9409:
  17:Sequencer.h   **** 
 16678              		.loc 12 17 37 discriminator 1 view .LVU3538
  17:Sequencer.h   **** 
 16679              		.loc 12 17 41 is_stmt 0 discriminator 1 view .LVU3539
 16680 017e 94F8BD20 		ldrb	r2, [r4, #189]	@ zero_extendqisi2
 16681 0182 84F8C928 		strb	r2, [r4, #2249]
 16682 0186 90E7     		b	.L599
 16683              	.LBE9409:
 16684              	.LBE9408:
 16685              		.cfi_endproc
 16686              	.LFE5610:
 16688              		.section	.text._ZN10BrizachordC2Ev,"ax",%progbits
 16689              		.align	1
 16690              		.p2align 2,,3
 16691              		.global	_ZN10BrizachordC2Ev
 16692              		.syntax unified
 16693              		.thumb
 16694              		.thumb_func
 16695              		.fpu fpv5-d16
 16697              	_ZN10BrizachordC2Ev:
 16698              	.LVL799:
 16699              	.LFB5605:
  19:Brizachord.cpp **** Brizachord::Brizachord() 
 16700              		.loc 1 19 1 is_stmt 1 view -0
 16701              		.cfi_startproc
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 731


 16702              		@ args = 0, pretend = 0, frame = 432
 16703              		@ frame_needed = 0, uses_anonymous_args = 0
  19:Brizachord.cpp **** Brizachord::Brizachord() 
 16704              		.loc 1 19 1 is_stmt 0 view .LVU3541
 16705 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16706              		.cfi_def_cfa_offset 36
 16707              		.cfi_offset 4, -36
 16708              		.cfi_offset 5, -32
 16709              		.cfi_offset 6, -28
 16710              		.cfi_offset 7, -24
 16711              		.cfi_offset 8, -20
 16712              		.cfi_offset 9, -16
 16713              		.cfi_offset 10, -12
 16714              		.cfi_offset 11, -8
 16715              		.cfi_offset 14, -4
 16716              	.LBB9981:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 16717              		.loc 1 20 86 view .LVU3542
 16718 0004 0021     		movs	r1, #0
 16719 0006 0646     		mov	r6, r0
 16720              	.LVL800:
 16721              	.LBB9982:
 16722              	.LBI9982:
 16723              		.file 32 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
 16724              		.loc 32 21 5 is_stmt 1 view .LVU3543
 16725              	.LBB9983:
 16726              	.LBI9983:
 16727              		.file 33 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h"
   8:../../libDaisy//src/per/qspi.h **** #include "util/hal_map.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 732


   9:../../libDaisy//src/per/qspi.h **** 
  10:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  11:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  12:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  13:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  14:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  15:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  16:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  17:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  18:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  19:../../libDaisy//src/per/qspi.h **** 
  20:../../libDaisy//src/per/qspi.h **** namespace daisy
  21:../../libDaisy//src/per/qspi.h **** {
  22:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  23:../../libDaisy//src/per/qspi.h **** @{
  24:../../libDaisy//src/per/qspi.h **** */
  25:../../libDaisy//src/per/qspi.h **** 
  26:../../libDaisy//src/per/qspi.h **** /** 
  27:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  28:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  29:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  30:../../libDaisy//src/per/qspi.h **** */
  31:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  32:../../libDaisy//src/per/qspi.h **** {
  33:../../libDaisy//src/per/qspi.h ****   public:
  34:../../libDaisy//src/per/qspi.h ****     enum Result
  35:../../libDaisy//src/per/qspi.h ****     {
  36:../../libDaisy//src/per/qspi.h ****         OK = 0,
  37:../../libDaisy//src/per/qspi.h ****         ERR
  38:../../libDaisy//src/per/qspi.h ****     };
  39:../../libDaisy//src/per/qspi.h **** 
  40:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  41:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  42:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  43:../../libDaisy//src/per/qspi.h ****          * 
  44:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  47:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  48:../../libDaisy//src/per/qspi.h ****          */
  49:../../libDaisy//src/per/qspi.h ****     enum Status
  50:../../libDaisy//src/per/qspi.h ****     {
  51:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  52:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  53:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  54:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  55:../../libDaisy//src/per/qspi.h ****     };
  56:../../libDaisy//src/per/qspi.h **** 
  57:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  58:../../libDaisy//src/per/qspi.h ****     struct Config
  59:../../libDaisy//src/per/qspi.h ****     {
  60:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  61:../../libDaisy//src/per/qspi.h ****         enum Device
  62:../../libDaisy//src/per/qspi.h ****         {
  63:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  65:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 733


  66:../../libDaisy//src/per/qspi.h ****         };
  67:../../libDaisy//src/per/qspi.h **** 
  68:../../libDaisy//src/per/qspi.h ****         /** 
  69:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  70:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  71:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  72:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  73:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  74:../../libDaisy//src/per/qspi.h ****         */
  75:../../libDaisy//src/per/qspi.h ****         enum Mode
  76:../../libDaisy//src/per/qspi.h ****         {
  77:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  78:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  79:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  80:../../libDaisy//src/per/qspi.h ****         };
  81:../../libDaisy//src/per/qspi.h **** 
  82:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  83:../../libDaisy//src/per/qspi.h ****         struct
  84:../../libDaisy//src/per/qspi.h ****         {
  85:../../libDaisy//src/per/qspi.h ****             Pin io0; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             Pin io1; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             Pin io2; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             Pin io3; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             Pin clk; /**< & */
  90:../../libDaisy//src/per/qspi.h ****             Pin ncs; /**< & */
  91:../../libDaisy//src/per/qspi.h ****         } pin_config;
  92:../../libDaisy//src/per/qspi.h **** 
  93:../../libDaisy//src/per/qspi.h ****         Device device;
  94:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  95:../../libDaisy//src/per/qspi.h ****     };
  96:../../libDaisy//src/per/qspi.h **** 
  97:../../libDaisy//src/per/qspi.h ****     /** 
  98:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  99:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
 100:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 101:../../libDaisy//src/per/qspi.h ****         */
 102:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 103:../../libDaisy//src/per/qspi.h **** 
 104:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 105:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 106:../../libDaisy//src/per/qspi.h **** 
 107:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 108:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 109:../../libDaisy//src/per/qspi.h ****     /** 
 110:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 111:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 112:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 113:../../libDaisy//src/per/qspi.h ****         */
 114:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 115:../../libDaisy//src/per/qspi.h **** 
 116:../../libDaisy//src/per/qspi.h ****     /** 
 117:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 118:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 119:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 120:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 121:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 122:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 734


 123:../../libDaisy//src/per/qspi.h ****         */
 124:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 125:../../libDaisy//src/per/qspi.h **** 
 126:../../libDaisy//src/per/qspi.h ****     /** 
 127:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 128:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 129:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 130:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 131:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 132:../../libDaisy//src/per/qspi.h ****         */
 133:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 134:../../libDaisy//src/per/qspi.h **** 
 135:../../libDaisy//src/per/qspi.h ****     /** 
 136:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 137:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 138:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 139:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 140:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 141:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 142:../../libDaisy//src/per/qspi.h ****         */
 143:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 144:../../libDaisy//src/per/qspi.h **** 
 145:../../libDaisy//src/per/qspi.h ****     /**  
 146:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 147:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 148:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 149:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 150:../../libDaisy//src/per/qspi.h ****         */
 151:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 152:../../libDaisy//src/per/qspi.h **** 
 153:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 154:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 155:../../libDaisy//src/per/qspi.h ****      */
 156:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 157:../../libDaisy//src/per/qspi.h **** 
 158:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 159:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 160:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 161:../../libDaisy//src/per/qspi.h ****      * 
 162:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 163:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 164:../../libDaisy//src/per/qspi.h ****     */
 165:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 166:../../libDaisy//src/per/qspi.h **** 
 167:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 16728              		.loc 33 167 5 view .LVU3544
 16729              		.loc 33 167 5 is_stmt 0 view .LVU3545
 16730              	.LBE9983:
 16731              	.LBB9986:
 16732              	.LBI9986:
  58:../../libDaisy//src/per/qspi.h ****     {
 16733              		.loc 33 58 12 is_stmt 1 view .LVU3546
 16734              	.LBB9987:
 16735              	.LBI9987:
  84:../../libDaisy//src/per/qspi.h ****             Pin io0; /**< & */
 16736              		.loc 33 84 9 view .LVU3547
 16737              	.LBB9988:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 735


 16738              	.LBI9988:
 16739              		.file 34 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 736


  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 737


 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 738


 170:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 171:../../libDaisy//src/daisy_core.h **** 
 172:../../libDaisy//src/daisy_core.h **** namespace daisy
 173:../../libDaisy//src/daisy_core.h **** {
 174:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 175:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 176:../../libDaisy//src/daisy_core.h **** {
 177:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 178:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 179:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 180:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 181:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 182:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 183:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 184:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 185:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 186:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 187:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 188:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 189:../../libDaisy//src/daisy_core.h **** };
 190:../../libDaisy//src/daisy_core.h **** 
 191:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 192:../../libDaisy//src/daisy_core.h **** struct Pin
 193:../../libDaisy//src/daisy_core.h **** {
 194:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 195:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 198:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 199:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 200:../../libDaisy//src/daisy_core.h ****     */
 201:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 202:../../libDaisy//src/daisy_core.h **** 
 203:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 204:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 16740              		.loc 34 204 15 view .LVU3548
 16741              		.loc 34 204 15 is_stmt 0 view .LVU3549
 16742              	.LBE9988:
 16743              	.LBB9990:
 16744              	.LBI9990:
 16745              		.loc 34 204 15 is_stmt 1 view .LVU3550
 16746              		.loc 34 204 15 is_stmt 0 view .LVU3551
 16747              	.LBE9990:
 16748              	.LBB9991:
 16749              	.LBI9991:
 16750              		.loc 34 204 15 is_stmt 1 view .LVU3552
 16751              		.loc 34 204 15 is_stmt 0 view .LVU3553
 16752              	.LBE9991:
 16753              	.LBB9993:
 16754              	.LBI9993:
 16755              		.loc 34 204 15 is_stmt 1 view .LVU3554
 16756              		.loc 34 204 15 is_stmt 0 view .LVU3555
 16757              	.LBE9993:
 16758              	.LBB9994:
 16759              	.LBI9994:
 16760              		.loc 34 204 15 is_stmt 1 view .LVU3556
 16761              		.loc 34 204 15 is_stmt 0 view .LVU3557
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 739


 16762              	.LBE9994:
 16763              	.LBB9996:
 16764              	.LBI9996:
 16765              		.loc 34 204 15 is_stmt 1 view .LVU3558
 16766              	.LBE9996:
 16767              	.LBE9987:
 16768              	.LBE9986:
 16769              	.LBB10003:
 16770              	.LBB9984:
 16771              		.loc 33 167 34 is_stmt 0 view .LVU3559
 16772 0008 0025     		movs	r5, #0
 16773              	.LBE9984:
 16774              	.LBE10003:
 16775              	.LBB10004:
 16776              	.LBB10005:
 16777              	.LBB10006:
 16778              	.LBB10007:
 16779              	.LBB10008:
 16780              		.loc 34 204 43 view .LVU3560
 16781 000a FF23     		movs	r3, #255
 16782              	.LBE10008:
 16783              	.LBE10007:
 16784              	.LBE10006:
 16785              	.LBE10005:
 16786              	.LBE10004:
 16787              	.LBE9982:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 16788              		.loc 1 20 86 view .LVU3561
 16789 000c 46F80C1B 		str	r1, [r6], #12	@ float
 16790              	.LVL801:
 16791              	.LBB10095:
 16792              	.LBB10028:
 16793              	.LBB10022:
 16794              	.LBB10016:
 16795              	.LBB10012:
 16796              	.LBB10009:
 16797              		.loc 34 204 43 view .LVU3562
 16798 0010 0B22     		movs	r2, #11
 16799              	.LBE10009:
 16800              	.LBE10012:
 16801              	.LBE10016:
 16802              	.LBE10022:
 16803              	.LBE10028:
 16804              	.LBE10095:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 16805              		.loc 1 20 86 view .LVU3563
 16806 0012 4160     		str	r1, [r0, #4]	@ float
 16807 0014 00F58467 		add	r7, r0, #1056
 16808 0018 8160     		str	r1, [r0, #8]	@ float
 16809              	.LBB10096:
 16810              	.LBB10029:
 16811              	.LBB10000:
 16812              	.LBB9997:
 16813              	.LBB9989:
 16814              		.loc 34 204 43 view .LVU3564
 16815 001a 6FF0F411 		mvn	r1, #15991028
 16816              	.LBE9989:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 740


 16817              	.LBE9997:
 16818              	.LBE10000:
 16819              	.LBE10029:
 16820              	.LBE10096:
 16821              	.LBE9981:
  19:Brizachord.cpp **** Brizachord::Brizachord() 
 16822              		.loc 1 19 1 view .LVU3565
 16823 001e EFB0     		sub	sp, sp, #444
 16824              		.cfi_def_cfa_offset 480
 16825              	.LBB11146:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 16826              		.loc 1 20 86 view .LVU3566
 16827 0020 00F28C49 		addw	r9, r0, #1164
 16828              	.LBB10097:
 16829              	.LBB10030:
 16830              	.LBB10001:
 16831              	.LBB9998:
 16832              	.LBB9995:
 16833              		.loc 34 204 43 view .LVU3567
 16834 0024 8161     		str	r1, [r0, #24]
 16835              	.LVL802:
 16836              		.loc 34 204 43 view .LVU3568
 16837              	.LBE9995:
 16838              	.LBE9998:
 16839              	.LBE10001:
 16840              	.LBE10030:
 16841              	.LBB10031:
 16842              	.LBI10031:
 16843              		.file 35 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 741


  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize = 48;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate
  34:../../libDaisy//src/hid/audio.h ****             = SaiHandle::Config::SampleRate::SAI_48KHZ;
  35:../../libDaisy//src/hid/audio.h **** 
  36:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  37:../../libDaisy//src/hid/audio.h ****         float postgain = 1.f;
  38:../../libDaisy//src/hid/audio.h **** 
  39:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  40:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  41:../../libDaisy//src/hid/audio.h ****          */
  42:../../libDaisy//src/hid/audio.h ****         float output_compensation = 1.f;
  43:../../libDaisy//src/hid/audio.h ****     };
  44:../../libDaisy//src/hid/audio.h **** 
  45:../../libDaisy//src/hid/audio.h ****     enum class Result
  46:../../libDaisy//src/hid/audio.h ****     {
  47:../../libDaisy//src/hid/audio.h ****         OK,
  48:../../libDaisy//src/hid/audio.h ****         ERR,
  49:../../libDaisy//src/hid/audio.h ****     };
  50:../../libDaisy//src/hid/audio.h **** 
  51:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  52:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  53:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  54:../../libDaisy//src/hid/audio.h ****      */
  55:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  56:../../libDaisy//src/hid/audio.h **** 
  57:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  58:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  59:../../libDaisy//src/hid/audio.h ****      */
  60:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  61:../../libDaisy//src/hid/audio.h **** 
  62:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  63:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  64:../../libDaisy//src/hid/audio.h ****      */
  65:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  66:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  67:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  68:../../libDaisy//src/hid/audio.h **** 
  69:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  70:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  71:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  72:../../libDaisy//src/hid/audio.h ****     */
  73:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  74:../../libDaisy//src/hid/audio.h **** 
  75:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  76:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  77:../../libDaisy//src/hid/audio.h ****     */
  78:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  79:../../libDaisy//src/hid/audio.h **** 
  80:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  81:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  82:../../libDaisy//src/hid/audio.h ****      */
  83:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  84:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  85:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 742


  86:../../libDaisy//src/hid/audio.h **** 
  87:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
 16844              		.loc 35 87 5 is_stmt 1 view .LVU3569
 16845              		.loc 35 87 5 is_stmt 0 view .LVU3570
 16846              	.LBE10031:
 16847              	.LBB10033:
 16848              	.LBI10033:
 16849              		.file 36 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 743


  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(Pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(Pin             adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  Pin             mux_0,
  77:../../libDaisy//src/per/adc.h ****                  Pin             mux_1 = Pin(PORTX, 0),
  78:../../libDaisy//src/per/adc.h ****                  Pin             mux_2 = Pin(PORTX, 0),
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     GPIO            pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     GPIO            mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 744


 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 16850              		.loc 36 109 5 is_stmt 1 view .LVU3571
 16851              		.loc 36 109 5 is_stmt 0 view .LVU3572
 16852              	.LBE10033:
 16853              	.LBB10034:
 16854              	.LBI10034:
 16855              		.file 37 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** #include "stm32h7xx_hal.h"
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 745


  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 16856              		.loc 37 84 5 is_stmt 1 view .LVU3573
 16857              		.loc 37 84 5 is_stmt 0 view .LVU3574
 16858              	.LBE10034:
 16859              	.LBB10036:
 16860              	.LBI10036:
 16861              		.file 38 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 746


  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
 16862              		.loc 38 40 5 is_stmt 1 view .LVU3575
 16863              		.loc 38 40 5 is_stmt 0 view .LVU3576
 16864              	.LBE10036:
 16865              	.LBB10037:
 16866              	.LBI10004:
 16867              		.file 39 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 747


  27:../../libDaisy//src/per/gpio.h ****         INPUT,      /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,     /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OPEN_DRAIN, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,     /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 16868              		.loc 39 74 5 is_stmt 1 view .LVU3577
 16869              	.LBB10023:
 16870              	.LBI10005:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 16871              		.loc 39 68 9 view .LVU3578
 16872              	.LBB10017:
 16873              	.LBB10013:
 16874              	.LBI10007:
 16875              		.loc 34 204 15 view .LVU3579
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 748


 16876              		.loc 34 204 15 is_stmt 0 view .LVU3580
 16877              	.LBE10013:
 16878              	.LBE10017:
 16879              	.LBE10023:
 16880              	.LBE10037:
 16881              	.LBB10038:
 16882              	.LBI10038:
 16883              		.loc 39 74 5 is_stmt 1 view .LVU3581
 16884              	.LBB10039:
 16885              	.LBI10039:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 16886              		.loc 39 68 9 view .LVU3582
 16887              	.LBB10040:
 16888              	.LBB10041:
 16889              	.LBI10041:
 16890              		.loc 34 204 15 view .LVU3583
 16891              		.loc 34 204 15 is_stmt 0 view .LVU3584
 16892              	.LBE10041:
 16893              	.LBE10040:
 16894              	.LBE10039:
 16895              	.LBE10038:
 16896              	.LBB10054:
 16897              	.LBI10054:
 16898              		.file 40 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 749


  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 750


  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
 16899              		.loc 40 96 5 is_stmt 1 view .LVU3585
 16900              		.loc 40 96 5 is_stmt 0 view .LVU3586
 16901              	.LBE10054:
 16902              	.LBB10055:
 16903              	.LBI10055:
 16904              		.file 41 "../../libDaisy//src/dev/codec_ak4556.h"
   1:../../libDaisy//src/dev/codec_ak4556.h **** #pragma once
   2:../../libDaisy//src/dev/codec_ak4556.h **** #ifndef DSY_CODEC_AK4556_H
   3:../../libDaisy//src/dev/codec_ak4556.h **** #define DSY_CODEC_AK4556_H
   4:../../libDaisy//src/dev/codec_ak4556.h **** 
   5:../../libDaisy//src/dev/codec_ak4556.h **** #include "daisy_core.h"
   6:../../libDaisy//src/dev/codec_ak4556.h **** #include "per/gpio.h"
   7:../../libDaisy//src/dev/codec_ak4556.h **** 
   8:../../libDaisy//src/dev/codec_ak4556.h **** namespace daisy
   9:../../libDaisy//src/dev/codec_ak4556.h **** {
  10:../../libDaisy//src/dev/codec_ak4556.h **** /** @brief Ak4556 Codec support 
  11:../../libDaisy//src/dev/codec_ak4556.h ****  ** @author shensley
  12:../../libDaisy//src/dev/codec_ak4556.h ****  ** @addtogroup codec
  13:../../libDaisy//src/dev/codec_ak4556.h ****  ** 
  14:../../libDaisy//src/dev/codec_ak4556.h ****  ** I don't see any real reason to have this be more than a function, but in case we want
  15:../../libDaisy//src/dev/codec_ak4556.h ****  ** to add other functions down the road I wrapped the function in a class.
  16:../../libDaisy//src/dev/codec_ak4556.h ****  ***/
  17:../../libDaisy//src/dev/codec_ak4556.h **** class Ak4556
  18:../../libDaisy//src/dev/codec_ak4556.h **** {
  19:../../libDaisy//src/dev/codec_ak4556.h ****   public:
  20:../../libDaisy//src/dev/codec_ak4556.h ****     Ak4556() {}
 16905              		.loc 41 20 5 is_stmt 1 view .LVU3587
 16906              	.LBB10056:
 16907              	.LBI10056:
 16908              		.loc 39 74 5 view .LVU3588
 16909              	.LBB10057:
 16910              	.LBI10057:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 16911              		.loc 39 68 9 view .LVU3589
 16912              	.LBB10058:
 16913              	.LBB10059:
 16914              	.LBI10059:
 16915              		.loc 34 204 15 view .LVU3590
 16916              		.loc 34 204 15 is_stmt 0 view .LVU3591
 16917              	.LBE10059:
 16918              	.LBE10058:
 16919              	.LBE10057:
 16920              	.LBE10056:
 16921              	.LBE10055:
 16922              	.LBB10076:
 16923              	.LBI10076:
 16924              		.file 42 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 751


   5:../../libDaisy//src/per/sai.h **** #include "util/hal_map.h"
   6:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/sai.h **** 
   8:../../libDaisy//src/per/sai.h **** namespace daisy
   9:../../libDaisy//src/per/sai.h **** {
  10:../../libDaisy//src/per/sai.h **** /** 
  11:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  12:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  13:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  14:../../libDaisy//src/per/sai.h ****  * 
  15:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  16:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  17:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  18:../../libDaisy//src/per/sai.h ****  *
  19:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  20:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  21:../../libDaisy//src/per/sai.h ****  * 
  22:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  23:../../libDaisy//src/per/sai.h ****  * 
  24:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  36:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  37:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  38:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  39:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  40:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  41:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  42:../../libDaisy//src/per/sai.h ****  */
  43:../../libDaisy//src/per/sai.h **** class SaiHandle
  44:../../libDaisy//src/per/sai.h **** {
  45:../../libDaisy//src/per/sai.h ****   public:
  46:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  47:../../libDaisy//src/per/sai.h ****     struct Config
  48:../../libDaisy//src/per/sai.h ****     {
  49:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  50:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  51:../../libDaisy//src/per/sai.h ****         {
  52:../../libDaisy//src/per/sai.h ****             SAI_1,
  53:../../libDaisy//src/per/sai.h ****             SAI_2,
  54:../../libDaisy//src/per/sai.h ****         };
  55:../../libDaisy//src/per/sai.h **** 
  56:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  57:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  58:../../libDaisy//src/per/sai.h ****         {
  59:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 752


  62:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  63:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  64:../../libDaisy//src/per/sai.h ****         };
  65:../../libDaisy//src/per/sai.h **** 
  66:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  67:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  68:../../libDaisy//src/per/sai.h ****         {
  69:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  71:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  72:../../libDaisy//src/per/sai.h ****         };
  73:../../libDaisy//src/per/sai.h **** 
  74:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  75:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  76:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  77:../../libDaisy//src/per/sai.h ****          */
  78:../../libDaisy//src/per/sai.h ****         enum class Sync
  79:../../libDaisy//src/per/sai.h ****         {
  80:../../libDaisy//src/per/sai.h ****             MASTER,
  81:../../libDaisy//src/per/sai.h ****             SLAVE,
  82:../../libDaisy//src/per/sai.h ****         };
  83:../../libDaisy//src/per/sai.h **** 
  84:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  85:../../libDaisy//src/per/sai.h ****         enum class Direction
  86:../../libDaisy//src/per/sai.h ****         {
  87:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  88:../../libDaisy//src/per/sai.h ****             RECEIVE,
  89:../../libDaisy//src/per/sai.h ****         };
  90:../../libDaisy//src/per/sai.h **** 
  91:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  92:../../libDaisy//src/per/sai.h ****         struct
  93:../../libDaisy//src/per/sai.h ****         {
  94:../../libDaisy//src/per/sai.h ****             Pin mclk, fs, sck, sa, sb;
  95:../../libDaisy//src/per/sai.h ****         } pin_config;
  96:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  97:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  98:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  99:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
 100:../../libDaisy//src/per/sai.h ****     };
 101:../../libDaisy//src/per/sai.h **** 
 102:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 103:../../libDaisy//src/per/sai.h ****     enum class Result
 104:../../libDaisy//src/per/sai.h ****     {
 105:../../libDaisy//src/per/sai.h ****         OK,
 106:../../libDaisy//src/per/sai.h ****         ERR,
 107:../../libDaisy//src/per/sai.h ****     };
 108:../../libDaisy//src/per/sai.h **** 
 109:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 16925              		.loc 42 109 5 is_stmt 1 view .LVU3592
 16926              		.loc 42 109 5 is_stmt 0 view .LVU3593
 16927              	.LBE10076:
 16928              	.LBE10097:
 16929              	.LBB10098:
 16930              	.LBI10098:
  26:InstrumentState.h ****     std::string root;
  27:InstrumentState.h ****     ChordQuality quality;
  28:InstrumentState.h ****     ChordExtension extension;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 753


  29:InstrumentState.h **** };
  30:InstrumentState.h **** 
  31:InstrumentState.h **** struct InstrumentState {
 16931              		.loc 31 31 8 is_stmt 1 view .LVU3594
 16932              	.LBB10099:
 16933              	.LBB10100:
 16934              	.LBI10100:
  25:InstrumentState.h ****     std::string root;
 16935              		.loc 31 25 8 view .LVU3595
 16936              	.LBB10101:
 16937              	.LBI10101:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 16938              		.loc 5 431 7 view .LVU3596
 16939              	.LBB10102:
 16940              	.LBI10102:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16941              		.loc 5 190 7 view .LVU3597
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16942              		.loc 5 190 7 is_stmt 0 view .LVU3598
 16943              	.LBE10102:
 16944              	.LBB10104:
 16945              	.LBI10104:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16946              		.loc 9 144 7 is_stmt 1 view .LVU3599
 16947              	.LBB10105:
 16948              	.LBI10105:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16949              		.loc 7 79 7 view .LVU3600
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16950              		.loc 7 79 7 is_stmt 0 view .LVU3601
 16951              	.LBE10105:
 16952              	.LBE10104:
 16953              	.LBB10106:
 16954              	.LBI10106:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16955              		.loc 5 159 2 is_stmt 1 view .LVU3602
 16956              	.LBB10107:
 16957              	.LBB10108:
 16958              	.LBI10108:
 16959              		.loc 27 101 5 view .LVU3603
 16960              		.loc 27 101 5 is_stmt 0 view .LVU3604
 16961              	.LBE10108:
 16962              	.LBB10109:
 16963              	.LBI10109:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16964              		.loc 9 147 7 is_stmt 1 view .LVU3605
 16965              	.LBB10110:
 16966              	.LBI10110:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16967              		.loc 7 82 7 view .LVU3606
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16968              		.loc 7 82 7 is_stmt 0 view .LVU3607
 16969              	.LBE10110:
 16970              	.LBE10109:
 16971              	.LBE10107:
 16972              	.LBE10106:
 16973              	.LBE10101:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 754


 16974              	.LBE10100:
 16975              	.LBE10099:
 16976              	.LBE10098:
 16977              	.LBE11146:
  19:Brizachord.cpp **** Brizachord::Brizachord() 
 16978              		.loc 1 19 1 view .LVU3608
 16979 0026 0446     		mov	r4, r0
 16980              	.LBB11147:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 16981              		.loc 1 20 86 view .LVU3609
 16982 0028 9FEDE50A 		vldr.32	s0, .L640
 16983 002c 00F5D768 		add	r8, r0, #1720
 16984              	.LBB10158:
 16985              	.LBB10078:
 16986              	.LBB10024:
 16987              	.LBB10018:
 16988              	.LBB10014:
 16989              	.LBB10010:
 16990              		.loc 34 204 43 view .LVU3610
 16991 0030 80F83530 		strb	r3, [r0, #53]
 16992              	.LBE10010:
 16993              	.LBE10014:
 16994              	.LBE10018:
 16995              	.LBE10024:
 16996              	.LBE10078:
 16997              	.LBB10079:
 16998              	.LBB10050:
 16999              	.LBB10046:
 17000              	.LBB10044:
 17001              	.LBB10042:
 17002 0034 80F84930 		strb	r3, [r0, #73]
 17003              	.LBE10042:
 17004              	.LBE10044:
 17005              	.LBE10046:
 17006              	.LBE10050:
 17007              	.LBE10079:
 17008              	.LBB10080:
 17009              	.LBB10072:
 17010              	.LBB10068:
 17011              	.LBB10064:
 17012              	.LBB10062:
 17013              	.LBB10060:
 17014 0038 80F86530 		strb	r3, [r0, #101]
 17015              	.LBE10060:
 17016              	.LBE10062:
 17017              	.LBE10064:
 17018              	.LBE10068:
 17019              	.LBE10072:
 17020              	.LBE10080:
 17021              	.LBB10081:
 17022              	.LBB10025:
 17023              	.LBB10019:
 17024              	.LBB10015:
 17025              	.LBB10011:
 17026 003c 80F83420 		strb	r2, [r0, #52]
 17027              	.LBE10011:
 17028              	.LBE10015:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 755


 17029              	.LBE10019:
 17030              	.LBE10025:
 17031              	.LBE10081:
 17032              	.LBB10082:
 17033              	.LBB10051:
 17034              	.LBB10047:
 17035              	.LBB10045:
 17036              	.LBB10043:
 17037 0040 80F84820 		strb	r2, [r0, #72]
 17038              	.LBE10043:
 17039              	.LBE10045:
 17040              	.LBE10047:
 17041              	.LBE10051:
 17042              	.LBE10082:
 17043              	.LBB10083:
 17044              	.LBB10073:
 17045              	.LBB10069:
 17046              	.LBB10065:
 17047              	.LBB10063:
 17048              	.LBB10061:
 17049 0044 80F86420 		strb	r2, [r0, #100]
 17050              	.LBE10061:
 17051              	.LBE10063:
 17052              	.LBE10065:
 17053              	.LBE10069:
 17054              	.LBE10073:
 17055              	.LBE10083:
 17056              	.LBB10084:
 17057              	.LBB9985:
 17058              		.loc 33 167 34 view .LVU3611
 17059 0048 C560     		str	r5, [r0, #12]
 17060              	.LBE9985:
 17061              	.LBE10084:
 17062              	.LBB10085:
 17063              	.LBB10032:
 17064              		.loc 35 87 35 view .LVU3612
 17065 004a 0562     		str	r5, [r0, #32]
 17066              	.LBE10032:
 17067              	.LBE10085:
 17068              	.LBB10086:
 17069              	.LBB10035:
 17070              		.loc 37 84 33 view .LVU3613
 17071 004c C562     		str	r5, [r0, #44]
 17072              	.LBE10035:
 17073              	.LBE10086:
 17074              	.LBB10087:
 17075              	.LBB10026:
 17076              	.LBB10020:
  69:../../libDaisy//src/per/gpio.h ****         {
 17077              		.loc 39 69 73 view .LVU3614
 17078 004e 0564     		str	r5, [r0, #64]
 17079              	.LBE10020:
 17080              	.LBE10026:
 17081              	.LBE10087:
 17082              	.LBB10088:
 17083              	.LBB10052:
 17084              	.LBB10048:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 756


 17085 0050 4565     		str	r5, [r0, #84]
 17086              	.LBE10048:
 17087              	.LBE10052:
 17088              	.LBE10088:
 17089              	.LBB10089:
 17090              	.LBB10074:
 17091              	.LBB10070:
 17092              	.LBB10066:
 17093 0052 0567     		str	r5, [r0, #112]
 17094              	.LBE10066:
 17095              	.LBE10070:
 17096              	.LBE10074:
 17097              	.LBE10089:
 17098              	.LBB10090:
 17099              	.LBB10077:
 17100              		.loc 42 109 33 view .LVU3615
 17101 0054 C567     		str	r5, [r0, #124]
 17102              	.LBE10077:
 17103              	.LBE10090:
 17104              	.LBE10158:
 17105              	.LBB10159:
 17106              	.LBB10155:
 17107              	.LBB10127:
 17108              	.LBB10125:
 17109              	.LBB10112:
 17110              	.LBB10113:
 17111              	.LBB10114:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17112              		.loc 5 183 26 view .LVU3616
 17113 0056 C0F88850 		str	r5, [r0, #136]
 17114              	.LBE10114:
 17115              	.LBE10113:
 17116              	.LBB10115:
 17117              	.LBB10116:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17118              		.loc 21 322 14 view .LVU3617
 17119 005a 80F88C50 		strb	r5, [r0, #140]
 17120              	.LBE10116:
 17121              	.LBE10115:
 17122              	.LBE10112:
 17123              	.LBE10125:
 17124              	.LBE10127:
 17125              	.LBB10128:
 17126              	.LBB10129:
 17127              	.LBB10130:
 17128              	.LBB10131:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17129              		.loc 5 183 26 view .LVU3618
 17130 005e C0F8A850 		str	r5, [r0, #168]
 17131              	.LBE10131:
 17132              	.LBE10130:
 17133              	.LBB10132:
 17134              	.LBB10133:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17135              		.loc 21 322 14 view .LVU3619
 17136 0062 80F8AC50 		strb	r5, [r0, #172]
 17137              	.LBE10133:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 757


 17138              	.LBE10132:
 17139              	.LBE10129:
 17140              	.LBE10128:
 17141              		.loc 31 31 8 view .LVU3620
 17142 0066 80F8BE50 		strb	r5, [r0, #190]
 17143              	.LBE10155:
 17144              	.LBE10159:
 17145              	.LBB10160:
 17146              	.LBB10091:
 17147              	.LBB10002:
 17148              	.LBB9999:
 17149              	.LBB9992:
 17150              		.loc 34 204 43 view .LVU3621
 17151 006a C0E90411 		strd	r1, r1, [r0, #16]
 17152              	.LBE9992:
 17153              	.LBE9999:
 17154              	.LBE10002:
 17155              	.LBE10091:
 17156              	.LBE10160:
 17157              	.LBB10161:
 17158              	.LBB10156:
 17159              	.LBB10152:
 17160              	.LBB10126:
 17161              	.LBB10120:
 17162              	.LBB10103:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 17163              		.loc 5 193 51 view .LVU3622
 17164 006e 00F18C01 		add	r1, r0, #140
 17165              	.LVL803:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 17166              		.loc 5 193 51 view .LVU3623
 17167              	.LBE10103:
 17168              	.LBE10120:
 17169              	.LBB10121:
 17170              	.LBB10111:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 17171              		.loc 5 160 46 view .LVU3624
 17172 0072 C0F88410 		str	r1, [r0, #132]
 17173              	.LVL804:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 17174              		.loc 5 160 46 view .LVU3625
 17175              	.LBE10111:
 17176              	.LBE10121:
 17177              	.LBB10122:
 17178              	.LBI10122:
 17179              		.loc 9 162 7 is_stmt 1 view .LVU3626
 17180              	.LBB10123:
 17181              	.LBI10123:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17182              		.loc 7 89 7 view .LVU3627
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17183              		.loc 7 89 7 is_stmt 0 view .LVU3628
 17184              	.LBE10123:
 17185              	.LBE10122:
 17186              	.LBB10124:
 17187              	.LBI10112:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 758


 17188              		.loc 5 214 7 is_stmt 1 view .LVU3629
 17189              	.LBB10118:
 17190              	.LBI10113:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 17191              		.loc 5 182 7 view .LVU3630
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 17192              		.loc 5 182 7 is_stmt 0 view .LVU3631
 17193              	.LBE10118:
 17194              	.LBB10119:
 17195              	.LBI10115:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 17196              		.loc 21 321 7 is_stmt 1 view .LVU3632
 17197              	.LBB10117:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17198              		.loc 21 322 9 view .LVU3633
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17199              		.loc 21 322 9 is_stmt 0 view .LVU3634
 17200              	.LBE10117:
 17201              	.LBE10119:
 17202              	.LBE10124:
 17203              	.LBE10126:
 17204              	.LBE10152:
 17205              	.LBB10153:
 17206              	.LBI10128:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 17207              		.loc 5 431 7 is_stmt 1 view .LVU3635
 17208              	.LBB10137:
 17209              	.LBI10137:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17210              		.loc 5 190 7 view .LVU3636
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17211              		.loc 5 190 7 is_stmt 0 view .LVU3637
 17212              	.LBE10137:
 17213              	.LBB10139:
 17214              	.LBI10139:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17215              		.loc 9 144 7 is_stmt 1 view .LVU3638
 17216              	.LBB10140:
 17217              	.LBI10140:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17218              		.loc 7 79 7 view .LVU3639
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17219              		.loc 7 79 7 is_stmt 0 view .LVU3640
 17220              	.LBE10140:
 17221              	.LBE10139:
 17222              	.LBB10141:
 17223              	.LBI10141:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 17224              		.loc 5 159 2 is_stmt 1 view .LVU3641
 17225              	.LBB10142:
 17226              	.LBB10143:
 17227              	.LBI10143:
 17228              		.loc 27 101 5 view .LVU3642
 17229              		.loc 27 101 5 is_stmt 0 view .LVU3643
 17230              	.LBE10143:
 17231              	.LBB10144:
 17232              	.LBI10144:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 759


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17233              		.loc 9 147 7 is_stmt 1 view .LVU3644
 17234              	.LBB10145:
 17235              	.LBI10145:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17236              		.loc 7 82 7 view .LVU3645
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17237              		.loc 7 82 7 is_stmt 0 view .LVU3646
 17238              	.LBE10145:
 17239              	.LBE10144:
 17240              	.LBE10142:
 17241              	.LBE10141:
 17242              	.LBB10147:
 17243              	.LBB10138:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 17244              		.loc 5 193 51 view .LVU3647
 17245 0076 00F1AC01 		add	r1, r0, #172
 17246              	.LVL805:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 17247              		.loc 5 193 51 view .LVU3648
 17248              	.LBE10138:
 17249              	.LBE10147:
 17250              	.LBE10153:
 17251              	.LBE10156:
 17252              	.LBE10161:
 17253              	.LBB10162:
 17254              	.LBB10092:
 17255              	.LBB10027:
 17256              	.LBB10021:
  69:../../libDaisy//src/per/gpio.h ****         {
 17257              		.loc 39 69 73 view .LVU3649
 17258 007a C0E90E55 		strd	r5, r5, [r0, #56]
 17259              	.LBE10021:
 17260              	.LBE10027:
 17261              	.LBE10092:
 17262              	.LBB10093:
 17263              	.LBB10053:
 17264              	.LBB10049:
 17265 007e C0E91355 		strd	r5, r5, [r0, #76]
 17266              	.LBE10049:
 17267              	.LBE10053:
 17268              	.LBE10093:
 17269              	.LBB10094:
 17270              	.LBB10075:
 17271              	.LBB10071:
 17272              	.LBB10067:
 17273 0082 C0E91A55 		strd	r5, r5, [r0, #104]
 17274              	.LBE10067:
 17275              	.LBE10071:
 17276              	.LBE10075:
 17277              	.LBE10094:
 17278              	.LBE10162:
 17279              	.LBB10163:
 17280              	.LBB10157:
 17281              	.LBB10154:
 17282              	.LBB10148:
 17283              	.LBB10146:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 760


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 17284              		.loc 5 160 46 view .LVU3650
 17285 0086 C0F8A410 		str	r1, [r0, #164]
 17286              	.LVL806:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 17287              		.loc 5 160 46 view .LVU3651
 17288              	.LBE10146:
 17289              	.LBE10148:
 17290              	.LBB10149:
 17291              	.LBI10149:
 17292              		.loc 9 162 7 is_stmt 1 view .LVU3652
 17293              	.LBB10150:
 17294              	.LBI10150:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17295              		.loc 7 89 7 view .LVU3653
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17296              		.loc 7 89 7 is_stmt 0 view .LVU3654
 17297              	.LBE10150:
 17298              	.LBE10149:
 17299              	.LBB10151:
 17300              	.LBI10129:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17301              		.loc 5 214 7 is_stmt 1 view .LVU3655
 17302              	.LBB10135:
 17303              	.LBI10130:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 17304              		.loc 5 182 7 view .LVU3656
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 17305              		.loc 5 182 7 is_stmt 0 view .LVU3657
 17306              	.LBE10135:
 17307              	.LBB10136:
 17308              	.LBI10132:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 17309              		.loc 21 321 7 is_stmt 1 view .LVU3658
 17310              	.LBB10134:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17311              		.loc 21 322 9 view .LVU3659
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 17312              		.loc 21 322 9 is_stmt 0 view .LVU3660
 17313              	.LBE10134:
 17314              	.LBE10136:
 17315              	.LBE10151:
 17316              	.LBE10154:
 17317              	.LBE10157:
 17318              	.LBE10163:
 17319              	.LBB10164:
 17320              	.LBB10165:
 17321              	.LBB10166:
 17322              	.LBB10167:
 17323              	.LBB10168:
 17324              	.LBB10169:
 17325              	.LBB10170:
 17326              		.loc 34 204 43 view .LVU3661
 17327 008a 80F8C930 		strb	r3, [r0, #201]
 17328              	.LBE10170:
 17329              	.LBE10169:
 17330              	.LBE10168:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 761


 17331              	.LBE10167:
 17332              	.LBE10166:
 17333              	.LBE10165:
 17334              	.LBB10186:
 17335              	.LBB10187:
 17336              	.LBB10188:
 17337              	.LBB10189:
 17338              	.LBB10190:
 17339              	.LBB10191:
 17340 008e 80F8ED30 		strb	r3, [r0, #237]
 17341              	.LBE10191:
 17342              	.LBE10190:
 17343              	.LBE10189:
 17344              	.LBE10188:
 17345              	.LBE10187:
 17346              	.LBE10186:
 17347              	.LBB10207:
 17348              	.LBB10208:
 17349              	.LBB10209:
 17350              	.LBB10210:
 17351              	.LBB10211:
 17352              	.LBB10212:
 17353 0092 80F81131 		strb	r3, [r0, #273]
 17354              	.LBE10212:
 17355              	.LBE10211:
 17356              	.LBE10210:
 17357              	.LBE10209:
 17358              	.LBE10208:
 17359              	.LBE10207:
 17360              	.LBB10228:
 17361              	.LBB10229:
 17362              	.LBB10230:
 17363              	.LBB10231:
 17364              	.LBB10232:
 17365              	.LBB10233:
 17366 0096 80F83531 		strb	r3, [r0, #309]
 17367              	.LBE10233:
 17368              	.LBE10232:
 17369              	.LBE10231:
 17370              	.LBE10230:
 17371              	.LBE10229:
 17372              	.LBE10228:
 17373              	.LBB10249:
 17374              	.LBB10250:
 17375              	.LBB10251:
 17376              	.LBB10252:
 17377              	.LBB10253:
 17378              	.LBB10254:
 17379 009a 80F85931 		strb	r3, [r0, #345]
 17380              	.LBE10254:
 17381              	.LBE10253:
 17382              	.LBE10252:
 17383              	.LBE10251:
 17384              	.LBE10250:
 17385              	.LBE10249:
 17386              	.LBB10270:
 17387              	.LBB10271:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 762


 17388              	.LBB10272:
 17389              	.LBB10273:
 17390              	.LBB10274:
 17391              	.LBB10275:
 17392 009e 80F87D31 		strb	r3, [r0, #381]
 17393              	.LBE10275:
 17394              	.LBE10274:
 17395              	.LBE10273:
 17396              	.LBE10272:
 17397              	.LBE10271:
 17398              	.LBE10270:
 17399              	.LBB10291:
 17400              	.LBB10292:
 17401              	.LBB10293:
 17402              	.LBB10294:
 17403              	.LBB10295:
 17404              	.LBB10296:
 17405 00a2 80F8A131 		strb	r3, [r0, #417]
 17406              	.LBE10296:
 17407              	.LBE10295:
 17408              	.LBE10294:
 17409              	.LBE10293:
 17410              	.LBE10292:
 17411              	.LBE10291:
 17412              	.LBB10312:
 17413              	.LBB10182:
 17414              	.LBB10178:
 17415              	.LBB10174:
 17416              	.LBB10172:
 17417              	.LBB10171:
 17418 00a6 80F8C820 		strb	r2, [r0, #200]
 17419              	.LBE10171:
 17420              	.LBE10172:
 17421              	.LBE10174:
 17422              	.LBE10178:
 17423              	.LBE10182:
 17424              	.LBE10312:
 17425              	.LBB10313:
 17426              	.LBB10203:
 17427              	.LBB10199:
 17428              	.LBB10195:
 17429              	.LBB10193:
 17430              	.LBB10192:
 17431 00aa 80F8EC20 		strb	r2, [r0, #236]
 17432              	.LBE10192:
 17433              	.LBE10193:
 17434              	.LBE10195:
 17435              	.LBE10199:
 17436              	.LBE10203:
 17437              	.LBE10313:
 17438              	.LBB10314:
 17439              	.LBB10224:
 17440              	.LBB10220:
 17441              	.LBB10216:
 17442              	.LBB10214:
 17443              	.LBB10213:
 17444 00ae 80F81021 		strb	r2, [r0, #272]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 763


 17445              	.LBE10213:
 17446              	.LBE10214:
 17447              	.LBE10216:
 17448              	.LBE10220:
 17449              	.LBE10224:
 17450              	.LBE10314:
 17451              	.LBB10315:
 17452              	.LBB10245:
 17453              	.LBB10241:
 17454              	.LBB10237:
 17455              	.LBB10235:
 17456              	.LBB10234:
 17457 00b2 80F83421 		strb	r2, [r0, #308]
 17458              	.LBE10234:
 17459              	.LBE10235:
 17460              	.LBE10237:
 17461              	.LBE10241:
 17462              	.LBE10245:
 17463              	.LBE10315:
 17464              	.LBB10316:
 17465              	.LBB10266:
 17466              	.LBB10262:
 17467              	.LBB10258:
 17468              	.LBB10256:
 17469              	.LBB10255:
 17470 00b6 80F85821 		strb	r2, [r0, #344]
 17471              	.LBE10255:
 17472              	.LBE10256:
 17473              	.LBE10258:
 17474              	.LBE10262:
 17475              	.LBE10266:
 17476              	.LBE10316:
 17477              	.LBB10317:
 17478              	.LBB10287:
 17479              	.LBB10283:
 17480              	.LBB10279:
 17481              	.LBB10277:
 17482              	.LBB10276:
 17483 00ba 80F87C21 		strb	r2, [r0, #380]
 17484              	.LBE10276:
 17485              	.LBE10277:
 17486              	.LBE10279:
 17487              	.LBE10283:
 17488              	.LBE10287:
 17489              	.LBE10317:
 17490              	.LBB10318:
 17491              	.LBB10308:
 17492              	.LBB10304:
 17493              	.LBB10300:
 17494              	.LBB10298:
 17495              	.LBB10297:
 17496 00be 80F8A021 		strb	r2, [r0, #416]
 17497              	.LBE10297:
 17498              	.LBE10298:
 17499              	.LBE10300:
 17500              	.LBE10304:
 17501              	.LBE10308:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 764


 17502              	.LBE10318:
 17503              	.LBB10319:
 17504              	.LBB10183:
 17505              	.LBB10179:
 17506              	.LBB10175:
  69:../../libDaisy//src/per/gpio.h ****         {
 17507              		.loc 39 69 73 view .LVU3662
 17508 00c2 C0F8D450 		str	r5, [r0, #212]
 17509              	.LBE10175:
 17510              	.LBE10179:
 17511              	.LBE10183:
 17512              	.LBE10319:
 17513              	.LBB10320:
 17514              	.LBB10204:
 17515              	.LBB10200:
 17516              	.LBB10196:
 17517 00c6 C0F8F850 		str	r5, [r0, #248]
 17518              	.LBE10196:
 17519              	.LBE10200:
 17520              	.LBE10204:
 17521              	.LBE10320:
 17522              	.LBB10321:
 17523              	.LBB10225:
 17524              	.LBB10221:
 17525              	.LBB10217:
 17526 00ca C0F81C51 		str	r5, [r0, #284]
 17527              	.LBE10217:
 17528              	.LBE10221:
 17529              	.LBE10225:
 17530              	.LBE10321:
 17531              	.LBB10322:
 17532              	.LBB10246:
 17533              	.LBB10242:
 17534              	.LBB10238:
 17535 00ce C0F84051 		str	r5, [r0, #320]
 17536              	.LBE10238:
 17537              	.LBE10242:
 17538              	.LBE10246:
 17539              	.LBE10322:
 17540              	.LBB10323:
 17541              	.LBB10267:
 17542              	.LBB10263:
 17543              	.LBB10259:
 17544 00d2 C0F86451 		str	r5, [r0, #356]
 17545              	.LBE10259:
 17546              	.LBE10263:
 17547              	.LBE10267:
 17548              	.LBE10323:
 17549              	.LBB10324:
 17550              	.LBB10288:
 17551              	.LBB10284:
 17552              	.LBB10280:
 17553 00d6 C0F88851 		str	r5, [r0, #392]
 17554              	.LBE10280:
 17555              	.LBE10284:
 17556              	.LBE10288:
 17557              	.LBE10324:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 765


 17558              	.LBB10325:
 17559              	.LBB10184:
 17560              	.LBB10180:
 17561              	.LBB10176:
 17562 00da C0E93355 		strd	r5, r5, [r0, #204]
 17563              	.LBE10176:
 17564              	.LBE10180:
 17565              	.LBE10184:
 17566              	.LBE10325:
 17567              	.LBB10326:
 17568              	.LBB10205:
 17569              	.LBB10201:
 17570              	.LBB10197:
 17571 00de C0E93C55 		strd	r5, r5, [r0, #240]
 17572              	.LBE10197:
 17573              	.LBE10201:
 17574              	.LBE10205:
 17575              	.LBE10326:
 17576              	.LBB10327:
 17577              	.LBB10226:
 17578              	.LBB10222:
 17579              	.LBB10218:
 17580 00e2 C0E94555 		strd	r5, r5, [r0, #276]
 17581              	.LBE10218:
 17582              	.LBE10222:
 17583              	.LBE10226:
 17584              	.LBE10327:
 17585              	.LBB10328:
 17586              	.LBB10247:
 17587              	.LBB10243:
 17588              	.LBB10239:
 17589 00e6 C0E94E55 		strd	r5, r5, [r0, #312]
 17590              	.LBE10239:
 17591              	.LBE10243:
 17592              	.LBE10247:
 17593              	.LBE10328:
 17594              	.LBB10329:
 17595              	.LBB10268:
 17596              	.LBB10264:
 17597              	.LBB10260:
 17598 00ea C0E95755 		strd	r5, r5, [r0, #348]
 17599              	.LBE10260:
 17600              	.LBE10264:
 17601              	.LBE10268:
 17602              	.LBE10329:
 17603              	.LBB10330:
 17604              	.LBB10289:
 17605              	.LBB10285:
 17606              	.LBB10281:
 17607 00ee C0E96055 		strd	r5, r5, [r0, #384]
 17608              	.LBE10281:
 17609              	.LBE10285:
 17610              	.LBE10289:
 17611              	.LBE10330:
 17612              	.LBB10331:
 17613              	.LBB10309:
 17614              	.LBB10305:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 766


 17615              	.LBB10301:
 17616 00f2 C0E96955 		strd	r5, r5, [r0, #420]
 17617              	.LBE10301:
 17618              	.LBE10305:
 17619              	.LBE10309:
 17620              	.LBE10331:
 17621              	.LBB10332:
 17622              	.LBB10333:
 17623              	.LBB10334:
 17624              	.LBB10335:
 17625              	.LBB10336:
 17626              	.LBB10337:
 17627              		.loc 34 204 43 view .LVU3663
 17628 00f6 80F8C531 		strb	r3, [r0, #453]
 17629              	.LBE10337:
 17630              	.LBE10336:
 17631              	.LBE10335:
 17632              	.LBE10334:
 17633              	.LBE10333:
 17634              	.LBE10332:
 17635              	.LBB10353:
 17636              	.LBB10354:
 17637              	.LBB10355:
 17638              	.LBB10356:
 17639              	.LBB10357:
 17640              	.LBB10358:
 17641 00fa 80F8E931 		strb	r3, [r0, #489]
 17642              	.LBE10358:
 17643              	.LBE10357:
 17644              	.LBE10356:
 17645              	.LBE10355:
 17646              	.LBE10354:
 17647              	.LBE10353:
 17648              	.LBB10374:
 17649              	.LBB10375:
 17650              	.LBB10376:
 17651              	.LBB10377:
 17652              	.LBB10378:
 17653              	.LBB10379:
 17654 00fe 80F80D32 		strb	r3, [r0, #525]
 17655              	.LBE10379:
 17656              	.LBE10378:
 17657              	.LBE10377:
 17658              	.LBE10376:
 17659              	.LBE10375:
 17660              	.LBE10374:
 17661              	.LBB10395:
 17662              	.LBB10396:
 17663              	.LBB10397:
 17664              	.LBB10398:
 17665              	.LBB10399:
 17666              	.LBB10400:
 17667 0102 80F83132 		strb	r3, [r0, #561]
 17668              	.LBE10400:
 17669              	.LBE10399:
 17670              	.LBE10398:
 17671              	.LBE10397:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 767


 17672              	.LBE10396:
 17673              	.LBE10395:
 17674              	.LBB10416:
 17675              	.LBB10417:
 17676              	.LBB10418:
 17677              	.LBB10419:
 17678              	.LBB10420:
 17679              	.LBB10421:
 17680 0106 80F85532 		strb	r3, [r0, #597]
 17681              	.LBE10421:
 17682              	.LBE10420:
 17683              	.LBE10419:
 17684              	.LBE10418:
 17685              	.LBE10417:
 17686              	.LBE10416:
 17687              	.LBB10437:
 17688              	.LBB10438:
 17689              	.LBB10439:
 17690              	.LBB10440:
 17691              	.LBB10441:
 17692              	.LBB10442:
 17693 010a 80F87932 		strb	r3, [r0, #633]
 17694              	.LBE10442:
 17695              	.LBE10441:
 17696              	.LBE10440:
 17697              	.LBE10439:
 17698              	.LBE10438:
 17699              	.LBE10437:
 17700              	.LBB10455:
 17701              	.LBB10349:
 17702              	.LBB10345:
 17703              	.LBB10341:
 17704              	.LBB10339:
 17705              	.LBB10338:
 17706 010e 80F8C421 		strb	r2, [r0, #452]
 17707              	.LBE10338:
 17708              	.LBE10339:
 17709              	.LBE10341:
 17710              	.LBE10345:
 17711              	.LBE10349:
 17712              	.LBE10455:
 17713              	.LBB10456:
 17714              	.LBB10370:
 17715              	.LBB10366:
 17716              	.LBB10362:
 17717              	.LBB10360:
 17718              	.LBB10359:
 17719 0112 80F8E821 		strb	r2, [r0, #488]
 17720              	.LBE10359:
 17721              	.LBE10360:
 17722              	.LBE10362:
 17723              	.LBE10366:
 17724              	.LBE10370:
 17725              	.LBE10456:
 17726              	.LBB10457:
 17727              	.LBB10391:
 17728              	.LBB10387:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 768


 17729              	.LBB10383:
 17730              	.LBB10381:
 17731              	.LBB10380:
 17732 0116 80F80C22 		strb	r2, [r0, #524]
 17733              	.LBE10380:
 17734              	.LBE10381:
 17735              	.LBE10383:
 17736              	.LBE10387:
 17737              	.LBE10391:
 17738              	.LBE10457:
 17739              	.LBB10458:
 17740              	.LBB10412:
 17741              	.LBB10408:
 17742              	.LBB10404:
 17743              	.LBB10402:
 17744              	.LBB10401:
 17745 011a 80F83022 		strb	r2, [r0, #560]
 17746              	.LBE10401:
 17747              	.LBE10402:
 17748              	.LBE10404:
 17749              	.LBE10408:
 17750              	.LBE10412:
 17751              	.LBE10458:
 17752              	.LBB10459:
 17753              	.LBB10433:
 17754              	.LBB10429:
 17755              	.LBB10425:
 17756              	.LBB10423:
 17757              	.LBB10422:
 17758 011e 80F85422 		strb	r2, [r0, #596]
 17759              	.LBE10422:
 17760              	.LBE10423:
 17761              	.LBE10425:
 17762              	.LBE10429:
 17763              	.LBE10433:
 17764              	.LBE10459:
 17765              	.LBB10460:
 17766              	.LBB10452:
 17767              	.LBB10449:
 17768              	.LBB10446:
 17769              	.LBB10444:
 17770              	.LBB10443:
 17771 0122 80F87822 		strb	r2, [r0, #632]
 17772              	.LBE10443:
 17773              	.LBE10444:
 17774              	.LBE10446:
 17775              	.LBE10449:
 17776              	.LBE10452:
 17777              	.LBE10460:
 17778              	.LBB10461:
 17779              	.LBB10462:
 17780              	.LBB10463:
 17781              	.LBB10464:
 17782              	.LBB10465:
 17783              	.LBB10466:
 17784 0126 80F89C22 		strb	r2, [r0, #668]
 17785              	.LBE10466:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 769


 17786              	.LBE10465:
 17787              	.LBE10464:
 17788              	.LBE10463:
 17789              	.LBE10462:
 17790              	.LBE10461:
 17791              	.LBB10482:
 17792              	.LBB10310:
 17793              	.LBB10306:
 17794              	.LBB10302:
  69:../../libDaisy//src/per/gpio.h ****         {
 17795              		.loc 39 69 73 view .LVU3664
 17796 012a C0F8AC51 		str	r5, [r0, #428]
 17797              	.LBE10302:
 17798              	.LBE10306:
 17799              	.LBE10310:
 17800              	.LBE10482:
 17801              	.LBB10483:
 17802              	.LBB10350:
 17803              	.LBB10346:
 17804              	.LBB10342:
 17805 012e C0F8D051 		str	r5, [r0, #464]
 17806              	.LBE10342:
 17807              	.LBE10346:
 17808              	.LBE10350:
 17809              	.LBE10483:
 17810              	.LBB10484:
 17811              	.LBB10371:
 17812              	.LBB10367:
 17813              	.LBB10363:
 17814 0132 C0F8F451 		str	r5, [r0, #500]
 17815              	.LBE10363:
 17816              	.LBE10367:
 17817              	.LBE10371:
 17818              	.LBE10484:
 17819              	.LBB10485:
 17820              	.LBB10392:
 17821              	.LBB10388:
 17822              	.LBB10384:
 17823 0136 C0F81852 		str	r5, [r0, #536]
 17824              	.LBE10384:
 17825              	.LBE10388:
 17826              	.LBE10392:
 17827              	.LBE10485:
 17828              	.LBB10486:
 17829              	.LBB10413:
 17830              	.LBB10409:
 17831              	.LBB10405:
 17832 013a C0F83C52 		str	r5, [r0, #572]
 17833              	.LBE10405:
 17834              	.LBE10409:
 17835              	.LBE10413:
 17836              	.LBE10486:
 17837              	.LBB10487:
 17838              	.LBB10434:
 17839              	.LBB10430:
 17840              	.LBB10426:
 17841 013e C0F86052 		str	r5, [r0, #608]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 770


 17842              	.LBE10426:
 17843              	.LBE10430:
 17844              	.LBE10434:
 17845              	.LBE10487:
 17846              	.LBB10488:
 17847              	.LBB10351:
 17848              	.LBB10347:
 17849              	.LBB10343:
 17850 0142 C0E97255 		strd	r5, r5, [r0, #456]
 17851              	.LBE10343:
 17852              	.LBE10347:
 17853              	.LBE10351:
 17854              	.LBE10488:
 17855              	.LBB10489:
 17856              	.LBB10372:
 17857              	.LBB10368:
 17858              	.LBB10364:
 17859 0146 C0E97B55 		strd	r5, r5, [r0, #492]
 17860              	.LBE10364:
 17861              	.LBE10368:
 17862              	.LBE10372:
 17863              	.LBE10489:
 17864              	.LBB10490:
 17865              	.LBB10393:
 17866              	.LBB10389:
 17867              	.LBB10385:
 17868 014a C0E98455 		strd	r5, r5, [r0, #528]
 17869              	.LBE10385:
 17870              	.LBE10389:
 17871              	.LBE10393:
 17872              	.LBE10490:
 17873              	.LBB10491:
 17874              	.LBB10414:
 17875              	.LBB10410:
 17876              	.LBB10406:
 17877 014e C0E98D55 		strd	r5, r5, [r0, #564]
 17878              	.LBE10406:
 17879              	.LBE10410:
 17880              	.LBE10414:
 17881              	.LBE10491:
 17882              	.LBB10492:
 17883              	.LBB10435:
 17884              	.LBB10431:
 17885              	.LBB10427:
 17886 0152 C0E99655 		strd	r5, r5, [r0, #600]
 17887              	.LBE10427:
 17888              	.LBE10431:
 17889              	.LBE10435:
 17890              	.LBE10492:
 17891              	.LBB10493:
 17892              	.LBB10453:
 17893              	.LBB10450:
 17894              	.LBB10447:
 17895 0156 C0E99F55 		strd	r5, r5, [r0, #636]
 17896 015a C0F88452 		str	r5, [r0, #644]
 17897              	.LBE10447:
 17898              	.LBE10450:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 771


 17899              	.LBE10453:
 17900              	.LBE10493:
 17901              	.LBB10494:
 17902              	.LBB10478:
 17903              	.LBB10474:
 17904              	.LBB10470:
 17905              	.LBB10468:
 17906              	.LBB10467:
 17907              		.loc 34 204 43 view .LVU3665
 17908 015e 80F89D32 		strb	r3, [r0, #669]
 17909              	.LBE10467:
 17910              	.LBE10468:
 17911              	.LBE10470:
 17912              	.LBE10474:
 17913              	.LBE10478:
 17914              	.LBE10494:
 17915              	.LBB10495:
 17916              	.LBB10496:
 17917              	.LBB10497:
 17918              	.LBB10498:
 17919              	.LBB10499:
 17920              	.LBB10500:
 17921 0162 80F8C132 		strb	r3, [r0, #705]
 17922              	.LBE10500:
 17923              	.LBE10499:
 17924              	.LBE10498:
 17925              	.LBE10497:
 17926              	.LBE10496:
 17927              	.LBE10495:
 17928              	.LBB10516:
 17929              	.LBB10517:
 17930              	.LBB10518:
 17931              	.LBB10519:
 17932              	.LBB10520:
 17933              	.LBB10521:
 17934 0166 80F8E532 		strb	r3, [r0, #741]
 17935              	.LBE10521:
 17936              	.LBE10520:
 17937              	.LBE10519:
 17938              	.LBE10518:
 17939              	.LBE10517:
 17940              	.LBE10516:
 17941              	.LBB10537:
 17942              	.LBB10538:
 17943              	.LBB10539:
 17944              	.LBB10540:
 17945              	.LBB10541:
 17946              	.LBB10542:
 17947 016a 80F80933 		strb	r3, [r0, #777]
 17948              	.LBE10542:
 17949              	.LBE10541:
 17950              	.LBE10540:
 17951              	.LBE10539:
 17952              	.LBE10538:
 17953              	.LBE10537:
 17954              	.LBB10558:
 17955              	.LBB10559:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 772


 17956              	.LBB10560:
 17957              	.LBB10561:
 17958              	.LBB10562:
 17959              	.LBB10563:
 17960 016e 80F82D33 		strb	r3, [r0, #813]
 17961              	.LBE10563:
 17962              	.LBE10562:
 17963              	.LBE10561:
 17964              	.LBE10560:
 17965              	.LBE10559:
 17966              	.LBE10558:
 17967              	.LBB10579:
 17968              	.LBB10580:
 17969              	.LBB10581:
 17970              	.LBB10582:
 17971              	.LBB10583:
 17972              	.LBB10584:
 17973 0172 80F85133 		strb	r3, [r0, #849]
 17974              	.LBE10584:
 17975              	.LBE10583:
 17976              	.LBE10582:
 17977              	.LBE10581:
 17978              	.LBE10580:
 17979              	.LBE10579:
 17980              	.LBB10600:
 17981              	.LBB10601:
 17982              	.LBB10602:
 17983              	.LBB10603:
 17984              	.LBB10604:
 17985              	.LBB10605:
 17986 0176 80F87533 		strb	r3, [r0, #885]
 17987              	.LBE10605:
 17988              	.LBE10604:
 17989              	.LBE10603:
 17990              	.LBE10602:
 17991              	.LBE10601:
 17992              	.LBE10600:
 17993              	.LBB10621:
 17994              	.LBB10512:
 17995              	.LBB10508:
 17996              	.LBB10504:
 17997              	.LBB10502:
 17998              	.LBB10501:
 17999 017a 80F8C022 		strb	r2, [r0, #704]
 18000              	.LBE10501:
 18001              	.LBE10502:
 18002              	.LBE10504:
 18003              	.LBE10508:
 18004              	.LBE10512:
 18005              	.LBE10621:
 18006              	.LBB10622:
 18007              	.LBB10533:
 18008              	.LBB10529:
 18009              	.LBB10525:
 18010              	.LBB10523:
 18011              	.LBB10522:
 18012 017e 80F8E422 		strb	r2, [r0, #740]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 773


 18013              	.LBE10522:
 18014              	.LBE10523:
 18015              	.LBE10525:
 18016              	.LBE10529:
 18017              	.LBE10533:
 18018              	.LBE10622:
 18019              	.LBB10623:
 18020              	.LBB10554:
 18021              	.LBB10550:
 18022              	.LBB10546:
 18023              	.LBB10544:
 18024              	.LBB10543:
 18025 0182 80F80823 		strb	r2, [r0, #776]
 18026              	.LBE10543:
 18027              	.LBE10544:
 18028              	.LBE10546:
 18029              	.LBE10550:
 18030              	.LBE10554:
 18031              	.LBE10623:
 18032              	.LBB10624:
 18033              	.LBB10575:
 18034              	.LBB10571:
 18035              	.LBB10567:
 18036              	.LBB10565:
 18037              	.LBB10564:
 18038 0186 80F82C23 		strb	r2, [r0, #812]
 18039              	.LBE10564:
 18040              	.LBE10565:
 18041              	.LBE10567:
 18042              	.LBE10571:
 18043              	.LBE10575:
 18044              	.LBE10624:
 18045              	.LBB10625:
 18046              	.LBB10596:
 18047              	.LBB10592:
 18048              	.LBB10588:
 18049              	.LBB10586:
 18050              	.LBB10585:
 18051 018a 80F85023 		strb	r2, [r0, #848]
 18052              	.LBE10585:
 18053              	.LBE10586:
 18054              	.LBE10588:
 18055              	.LBE10592:
 18056              	.LBE10596:
 18057              	.LBE10625:
 18058              	.LBB10626:
 18059              	.LBB10617:
 18060              	.LBB10613:
 18061              	.LBB10609:
 18062              	.LBB10607:
 18063              	.LBB10606:
 18064 018e 80F87423 		strb	r2, [r0, #884]
 18065              	.LBE10606:
 18066              	.LBE10607:
 18067              	.LBE10609:
 18068              	.LBE10613:
 18069              	.LBE10617:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 774


 18070              	.LBE10626:
 18071              	.LBB10627:
 18072              	.LBB10479:
 18073              	.LBB10475:
 18074              	.LBB10471:
  69:../../libDaisy//src/per/gpio.h ****         {
 18075              		.loc 39 69 73 view .LVU3666
 18076 0192 C0F8A852 		str	r5, [r0, #680]
 18077              	.LBE10471:
 18078              	.LBE10475:
 18079              	.LBE10479:
 18080              	.LBE10627:
 18081              	.LBB10628:
 18082              	.LBB10513:
 18083              	.LBB10509:
 18084              	.LBB10505:
 18085 0196 C0F8CC52 		str	r5, [r0, #716]
 18086              	.LBE10505:
 18087              	.LBE10509:
 18088              	.LBE10513:
 18089              	.LBE10628:
 18090              	.LBB10629:
 18091              	.LBB10534:
 18092              	.LBB10530:
 18093              	.LBB10526:
 18094 019a C0F8F052 		str	r5, [r0, #752]
 18095              	.LBE10526:
 18096              	.LBE10530:
 18097              	.LBE10534:
 18098              	.LBE10629:
 18099              	.LBB10630:
 18100              	.LBB10555:
 18101              	.LBB10551:
 18102              	.LBB10547:
 18103 019e C0F81453 		str	r5, [r0, #788]
 18104              	.LBE10547:
 18105              	.LBE10551:
 18106              	.LBE10555:
 18107              	.LBE10630:
 18108              	.LBB10631:
 18109              	.LBB10576:
 18110              	.LBB10572:
 18111              	.LBB10568:
 18112 01a2 C0F83853 		str	r5, [r0, #824]
 18113              	.LBE10568:
 18114              	.LBE10572:
 18115              	.LBE10576:
 18116              	.LBE10631:
 18117              	.LBB10632:
 18118              	.LBB10597:
 18119              	.LBB10593:
 18120              	.LBB10589:
 18121 01a6 C0F85C53 		str	r5, [r0, #860]
 18122              	.LBE10589:
 18123              	.LBE10593:
 18124              	.LBE10597:
 18125              	.LBE10632:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 775


 18126              	.LBB10633:
 18127              	.LBB10480:
 18128              	.LBB10476:
 18129              	.LBB10472:
 18130 01aa C0E9A855 		strd	r5, r5, [r0, #672]
 18131              	.LBE10472:
 18132              	.LBE10476:
 18133              	.LBE10480:
 18134              	.LBE10633:
 18135              	.LBB10634:
 18136              	.LBB10514:
 18137              	.LBB10510:
 18138              	.LBB10506:
 18139 01ae C0E9B155 		strd	r5, r5, [r0, #708]
 18140              	.LBE10506:
 18141              	.LBE10510:
 18142              	.LBE10514:
 18143              	.LBE10634:
 18144              	.LBB10635:
 18145              	.LBB10535:
 18146              	.LBB10531:
 18147              	.LBB10527:
 18148 01b2 C0E9BA55 		strd	r5, r5, [r0, #744]
 18149              	.LBE10527:
 18150              	.LBE10531:
 18151              	.LBE10535:
 18152              	.LBE10635:
 18153              	.LBB10636:
 18154              	.LBB10556:
 18155              	.LBB10552:
 18156              	.LBB10548:
 18157 01b6 C0E9C355 		strd	r5, r5, [r0, #780]
 18158              	.LBE10548:
 18159              	.LBE10552:
 18160              	.LBE10556:
 18161              	.LBE10636:
 18162              	.LBB10637:
 18163              	.LBB10577:
 18164              	.LBB10573:
 18165              	.LBB10569:
 18166 01ba C0E9CC55 		strd	r5, r5, [r0, #816]
 18167              	.LBE10569:
 18168              	.LBE10573:
 18169              	.LBE10577:
 18170              	.LBE10637:
 18171              	.LBB10638:
 18172              	.LBB10598:
 18173              	.LBB10594:
 18174              	.LBB10590:
 18175 01be C0E9D555 		strd	r5, r5, [r0, #852]
 18176              	.LBE10590:
 18177              	.LBE10594:
 18178              	.LBE10598:
 18179              	.LBE10638:
 18180              	.LBB10639:
 18181              	.LBB10618:
 18182              	.LBB10614:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 776


 18183              	.LBB10610:
 18184 01c2 C0E9DE55 		strd	r5, r5, [r0, #888]
 18185              	.LBE10610:
 18186              	.LBE10614:
 18187              	.LBE10618:
 18188              	.LBE10639:
 18189              	.LBB10640:
 18190              	.LBB10641:
 18191              	.LBB10642:
 18192              	.LBB10643:
 18193              	.LBB10644:
 18194              	.LBB10645:
 18195              		.loc 34 204 43 view .LVU3667
 18196 01c6 80F89933 		strb	r3, [r0, #921]
 18197              	.LBE10645:
 18198              	.LBE10644:
 18199              	.LBE10643:
 18200              	.LBE10642:
 18201              	.LBE10641:
 18202              	.LBE10640:
 18203              	.LBB10661:
 18204              	.LBB10662:
 18205              	.LBB10663:
 18206              	.LBB10664:
 18207              	.LBB10665:
 18208              	.LBB10666:
 18209 01ca 80F8BD33 		strb	r3, [r0, #957]
 18210              	.LBE10666:
 18211              	.LBE10665:
 18212              	.LBE10664:
 18213              	.LBE10663:
 18214              	.LBE10662:
 18215              	.LBE10661:
 18216              	.LBB10682:
 18217              	.LBB10683:
 18218              	.LBB10684:
 18219              	.LBB10685:
 18220              	.LBB10686:
 18221              	.LBB10687:
 18222 01ce 80F8E133 		strb	r3, [r0, #993]
 18223              	.LBE10687:
 18224              	.LBE10686:
 18225              	.LBE10685:
 18226              	.LBE10684:
 18227              	.LBE10683:
 18228              	.LBE10682:
 18229              	.LBB10703:
 18230              	.LBB10704:
 18231              	.LBB10705:
 18232              	.LBB10706:
 18233              	.LBB10707:
 18234              	.LBB10708:
 18235 01d2 80F80534 		strb	r3, [r0, #1029]
 18236              	.LBE10708:
 18237              	.LBE10707:
 18238              	.LBE10706:
 18239              	.LBE10705:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 777


 18240              	.LBE10704:
 18241              	.LBE10703:
 18242              	.LBB10721:
 18243              	.LBB10657:
 18244              	.LBB10653:
 18245              	.LBB10649:
 18246              	.LBB10647:
 18247              	.LBB10646:
 18248 01d6 80F89823 		strb	r2, [r0, #920]
 18249              	.LBE10646:
 18250              	.LBE10647:
 18251              	.LBE10649:
 18252              	.LBE10653:
 18253              	.LBE10657:
 18254              	.LBE10721:
 18255              	.LBB10722:
 18256              	.LBB10678:
 18257              	.LBB10674:
 18258              	.LBB10670:
 18259              	.LBB10668:
 18260              	.LBB10667:
 18261 01da 80F8BC23 		strb	r2, [r0, #956]
 18262              	.LBE10667:
 18263              	.LBE10668:
 18264              	.LBE10670:
 18265              	.LBE10674:
 18266              	.LBE10678:
 18267              	.LBE10722:
 18268              	.LBB10723:
 18269              	.LBB10699:
 18270              	.LBB10695:
 18271              	.LBB10691:
 18272              	.LBB10689:
 18273              	.LBB10688:
 18274 01de 80F8E023 		strb	r2, [r0, #992]
 18275              	.LBE10688:
 18276              	.LBE10689:
 18277              	.LBE10691:
 18278              	.LBE10695:
 18279              	.LBE10699:
 18280              	.LBE10723:
 18281              	.LBB10724:
 18282              	.LBB10718:
 18283              	.LBB10715:
 18284              	.LBB10712:
 18285              	.LBB10710:
 18286              	.LBB10709:
 18287 01e2 80F80424 		strb	r2, [r0, #1028]
 18288              	.LBE10709:
 18289              	.LBE10710:
 18290              	.LBE10712:
 18291              	.LBE10715:
 18292              	.LBE10718:
 18293              	.LBE10724:
 18294              	.LBB10725:
 18295              	.LBB10619:
 18296              	.LBB10615:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 778


 18297              	.LBB10611:
  69:../../libDaisy//src/per/gpio.h ****         {
 18298              		.loc 39 69 73 view .LVU3668
 18299 01e6 C0F88053 		str	r5, [r0, #896]
 18300              	.LBE10611:
 18301              	.LBE10615:
 18302              	.LBE10619:
 18303              	.LBE10725:
 18304              	.LBB10726:
 18305              	.LBB10658:
 18306              	.LBB10654:
 18307              	.LBB10650:
 18308 01ea C0F8A453 		str	r5, [r0, #932]
 18309              	.LBE10650:
 18310              	.LBE10654:
 18311              	.LBE10658:
 18312              	.LBE10726:
 18313              	.LBB10727:
 18314              	.LBB10679:
 18315              	.LBB10675:
 18316              	.LBB10671:
 18317 01ee C0F8C853 		str	r5, [r0, #968]
 18318              	.LBE10671:
 18319              	.LBE10675:
 18320              	.LBE10679:
 18321              	.LBE10727:
 18322              	.LBB10728:
 18323              	.LBB10700:
 18324              	.LBB10696:
 18325              	.LBB10692:
 18326 01f2 C0F8EC53 		str	r5, [r0, #1004]
 18327              	.LBE10692:
 18328              	.LBE10696:
 18329              	.LBE10700:
 18330              	.LBE10728:
 18331              	.LBB10729:
 18332              	.LBB10719:
 18333              	.LBB10716:
 18334              	.LBB10713:
 18335 01f6 C0F80854 		str	r5, [r0, #1032]
 18336 01fa C0F80C54 		str	r5, [r0, #1036]
 18337 01fe C0F81054 		str	r5, [r0, #1040]
 18338              	.LBE10713:
 18339              	.LBE10716:
 18340              	.LBE10719:
 18341              	.LBE10729:
 18342              	.LBE10164:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 18343              		.loc 1 20 86 view .LVU3669
 18344 0202 8DED030A 		vstr.32	s0, [sp, #12]	@ int
 18345              	.LBB10757:
 18346              	.LBB10730:
 18347              	.LBB10659:
 18348              	.LBB10655:
 18349              	.LBB10651:
  69:../../libDaisy//src/per/gpio.h ****         {
 18350              		.loc 39 69 73 view .LVU3670
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 779


 18351 0206 C0E9E755 		strd	r5, r5, [r0, #924]
 18352              	.LBE10651:
 18353              	.LBE10655:
 18354              	.LBE10659:
 18355              	.LBE10730:
 18356              	.LBB10731:
 18357              	.LBB10680:
 18358              	.LBB10676:
 18359              	.LBB10672:
 18360 020a C0E9F055 		strd	r5, r5, [r0, #960]
 18361              	.LBE10672:
 18362              	.LBE10676:
 18363              	.LBE10680:
 18364              	.LBE10731:
 18365              	.LBB10732:
 18366              	.LBB10701:
 18367              	.LBB10697:
 18368              	.LBB10693:
 18369 020e C0E9F955 		strd	r5, r5, [r0, #996]
 18370              	.LBE10693:
 18371              	.LBE10697:
 18372              	.LBE10701:
 18373              	.LBE10732:
 18374              	.LBE10757:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 18375              		.loc 1 20 86 view .LVU3671
 18376 0212 3846     		mov	r0, r7
 18377              	.LVL807:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 18378              		.loc 1 20 86 view .LVU3672
 18379 0214 FFF7FEFF 		bl	_ZN5TrillC1Ev
 18380              	.LVL808:
 18381 0218 9DED030A 		vldr.32	s0, [sp, #12]	@ int
 18382 021c 4846     		mov	r0, r9
 18383 021e FFF7FEFF 		bl	_ZN9DrumSynthC1Ef
 18384              	.LVL809:
 18385              	.LBB10758:
 18386              	.LBB10759:
 18387              		.file 43 "ChordSynth.h"
   1:ChordSynth.h  **** #pragma once
   2:ChordSynth.h  **** #include "daisysp.h"
   3:ChordSynth.h  **** #include "InstrumentState.h"
   4:ChordSynth.h  **** #include "utils.h"
   5:ChordSynth.h  **** #include <vector>
   6:ChordSynth.h  **** 
   7:ChordSynth.h  **** using namespace daisysp;
   8:ChordSynth.h  **** 
   9:ChordSynth.h  **** class ChordSynth
  10:ChordSynth.h  **** {
  11:ChordSynth.h  **** public:
  12:ChordSynth.h  ****     ChordSynth(float sample_rate) : sample_rate(sample_rate) {};
 18388              		.loc 43 12 60 view .LVU3673
 18389 0222 9DED030A 		vldr.32	s0, [sp, #12]	@ int
 18390              	.LBE10759:
 18391              	.LBE10758:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 18392              		.loc 1 20 86 view .LVU3674
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 780


 18393 0226 04F18001 		add	r1, r4, #128
 18394 022a 04F5FE60 		add	r0, r4, #2032
 18395              	.LBB10776:
 18396              	.LBB10774:
 18397              		.loc 43 12 60 view .LVU3675
 18398 022e 88ED000A 		vstr.32	s0, [r8]
 18399              	.LBB10760:
 18400              	.LBB10761:
 18401              	.LBB10762:
 18402              	.LBB10763:
 18403              	.LBB10764:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 18404              		.loc 14 98 47 view .LVU3676
 18405 0232 C4F84C57 		str	r5, [r4, #1868]
 18406 0236 C4F85057 		str	r5, [r4, #1872]
 18407 023a C4F85457 		str	r5, [r4, #1876]
 18408              	.LBE10764:
 18409              	.LBE10763:
 18410              	.LBE10762:
 18411              	.LBE10761:
 18412              	.LBE10760:
 18413              	.LBE10774:
 18414              	.LBE10776:
  20:Brizachord.cpp **** 	: strum_synth(48000.f, instrument_state), sequencer(48000.f, drum_synth, chord_synth)
 18415              		.loc 1 20 86 view .LVU3677
 18416 023e FFF7FEFF 		bl	_ZN10StrumSynthC1EfRK15InstrumentState
 18417              	.LVL810:
 18418 0242 4246     		mov	r2, r8
 18419 0244 9DED030A 		vldr.32	s0, [sp, #12]	@ int
 18420 0248 4946     		mov	r1, r9
 18421 024a 04F6C800 		addw	r0, r4, #2248
 18422 024e 04F1C009 		add	r9, r4, #192
 18423 0252 FFF7FEFF 		bl	_ZN9SequencerC1EfR9DrumSynthR10ChordSynth
 18424              	.LVL811:
 18425              	.LBB10777:
  22:Brizachord.cpp ****     Brizachord::instance = this;
 18426              		.loc 1 22 26 view .LVU3678
 18427 0256 5B4B     		ldr	r3, .L640+4
  25:Brizachord.cpp **** 	hw.Configure();
 18428              		.loc 1 25 14 view .LVU3679
 18429 0258 3046     		mov	r0, r6
  22:Brizachord.cpp ****     Brizachord::instance = this;
 18430              		.loc 1 22 26 view .LVU3680
 18431 025a 1C60     		str	r4, [r3]
  25:Brizachord.cpp **** 	hw.Configure();
 18432              		.loc 1 25 14 view .LVU3681
 18433 025c FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 18434              	.LVL812:
  26:Brizachord.cpp **** 	hw.Init();
 18435              		.loc 1 26 9 view .LVU3682
 18436 0260 2946     		mov	r1, r5
 18437 0262 3046     		mov	r0, r6
 18438 0264 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 18439              	.LVL813:
  27:Brizachord.cpp **** 	hw.SetAudioBlockSize(4);
 18440              		.loc 1 27 22 view .LVU3683
 18441 0268 0421     		movs	r1, #4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 781


 18442 026a 3046     		mov	r0, r6
 18443 026c FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 18444              	.LVL814:
  28:Brizachord.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 18445              		.loc 1 28 23 view .LVU3684
 18446 0270 0321     		movs	r1, #3
 18447 0272 3046     		mov	r0, r6
 18448 0274 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 18449              	.LVL815:
  28:Brizachord.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 18450              		.loc 1 28 23 view .LVU3685
 18451              	.LBE10777:
 18452              	.LBB11141:
 18453              	.LBI10164:
   5:GPIOState.h   ****     // Chord extension
 18454              		.loc 10 5 8 is_stmt 1 view .LVU3686
 18455              	.LBB10733:
 18456              	.LBI10165:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18457              		.loc 11 33 5 view .LVU3687
 18458              	.LBB10185:
 18459              	.LBI10166:
 18460              		.loc 39 74 5 view .LVU3688
 18461              	.LBB10181:
 18462              	.LBI10167:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18463              		.loc 39 68 9 view .LVU3689
 18464              	.LBB10177:
 18465              	.LBB10173:
 18466              	.LBI10169:
 18467              		.loc 34 204 15 view .LVU3690
 18468              		.loc 34 204 15 is_stmt 0 view .LVU3691
 18469              	.LBE10173:
 18470              	.LBE10177:
 18471              	.LBE10181:
 18472              	.LBE10185:
 18473              	.LBE10733:
 18474              	.LBB10734:
 18475              	.LBI10186:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18476              		.loc 11 33 5 is_stmt 1 view .LVU3692
 18477              	.LBB10206:
 18478              	.LBI10187:
 18479              		.loc 39 74 5 view .LVU3693
 18480              	.LBB10202:
 18481              	.LBI10188:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18482              		.loc 39 68 9 view .LVU3694
 18483              	.LBB10198:
 18484              	.LBB10194:
 18485              	.LBI10190:
 18486              		.loc 34 204 15 view .LVU3695
 18487              		.loc 34 204 15 is_stmt 0 view .LVU3696
 18488              	.LBE10194:
 18489              	.LBE10198:
 18490              	.LBE10202:
 18491              	.LBE10206:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 782


 18492              	.LBE10734:
 18493              	.LBB10735:
 18494              	.LBI10207:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18495              		.loc 11 33 5 is_stmt 1 view .LVU3697
 18496              	.LBB10227:
 18497              	.LBI10208:
 18498              		.loc 39 74 5 view .LVU3698
 18499              	.LBB10223:
 18500              	.LBI10209:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18501              		.loc 39 68 9 view .LVU3699
 18502              	.LBB10219:
 18503              	.LBB10215:
 18504              	.LBI10211:
 18505              		.loc 34 204 15 view .LVU3700
 18506              		.loc 34 204 15 is_stmt 0 view .LVU3701
 18507              	.LBE10215:
 18508              	.LBE10219:
 18509              	.LBE10223:
 18510              	.LBE10227:
 18511              	.LBE10735:
 18512              	.LBB10736:
 18513              	.LBI10228:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18514              		.loc 11 33 5 is_stmt 1 view .LVU3702
 18515              	.LBB10248:
 18516              	.LBI10229:
 18517              		.loc 39 74 5 view .LVU3703
 18518              	.LBB10244:
 18519              	.LBI10230:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18520              		.loc 39 68 9 view .LVU3704
 18521              	.LBB10240:
 18522              	.LBB10236:
 18523              	.LBI10232:
 18524              		.loc 34 204 15 view .LVU3705
 18525              		.loc 34 204 15 is_stmt 0 view .LVU3706
 18526              	.LBE10236:
 18527              	.LBE10240:
 18528              	.LBE10244:
 18529              	.LBE10248:
 18530              	.LBE10736:
 18531              	.LBB10737:
 18532              	.LBI10249:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18533              		.loc 11 33 5 is_stmt 1 view .LVU3707
 18534              	.LBB10269:
 18535              	.LBI10250:
 18536              		.loc 39 74 5 view .LVU3708
 18537              	.LBB10265:
 18538              	.LBI10251:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18539              		.loc 39 68 9 view .LVU3709
 18540              	.LBB10261:
 18541              	.LBB10257:
 18542              	.LBI10253:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 783


 18543              		.loc 34 204 15 view .LVU3710
 18544              		.loc 34 204 15 is_stmt 0 view .LVU3711
 18545              	.LBE10257:
 18546              	.LBE10261:
 18547              	.LBE10265:
 18548              	.LBE10269:
 18549              	.LBE10737:
 18550              	.LBB10738:
 18551              	.LBI10270:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18552              		.loc 11 33 5 is_stmt 1 view .LVU3712
 18553              	.LBB10290:
 18554              	.LBI10271:
 18555              		.loc 39 74 5 view .LVU3713
 18556              	.LBB10286:
 18557              	.LBI10272:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18558              		.loc 39 68 9 view .LVU3714
 18559              	.LBB10282:
 18560              	.LBB10278:
 18561              	.LBI10274:
 18562              		.loc 34 204 15 view .LVU3715
 18563              		.loc 34 204 15 is_stmt 0 view .LVU3716
 18564              	.LBE10278:
 18565              	.LBE10282:
 18566              	.LBE10286:
 18567              	.LBE10290:
 18568              	.LBE10738:
 18569              	.LBB10739:
 18570              	.LBI10291:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18571              		.loc 11 33 5 is_stmt 1 view .LVU3717
 18572              	.LBB10311:
 18573              	.LBI10292:
 18574              		.loc 39 74 5 view .LVU3718
 18575              	.LBB10307:
 18576              	.LBI10293:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18577              		.loc 39 68 9 view .LVU3719
 18578              	.LBB10303:
 18579              	.LBB10299:
 18580              	.LBI10295:
 18581              		.loc 34 204 15 view .LVU3720
 18582              		.loc 34 204 15 is_stmt 0 view .LVU3721
 18583              	.LBE10299:
 18584              	.LBE10303:
 18585              	.LBE10307:
 18586              	.LBE10311:
 18587              	.LBE10739:
 18588              	.LBB10740:
 18589              	.LBI10332:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18590              		.loc 11 33 5 is_stmt 1 view .LVU3722
 18591              	.LBB10352:
 18592              	.LBI10333:
 18593              		.loc 39 74 5 view .LVU3723
 18594              	.LBB10348:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 784


 18595              	.LBI10334:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18596              		.loc 39 68 9 view .LVU3724
 18597              	.LBB10344:
 18598              	.LBB10340:
 18599              	.LBI10336:
 18600              		.loc 34 204 15 view .LVU3725
 18601              		.loc 34 204 15 is_stmt 0 view .LVU3726
 18602              	.LBE10340:
 18603              	.LBE10344:
 18604              	.LBE10348:
 18605              	.LBE10352:
 18606              	.LBE10740:
 18607              	.LBB10741:
 18608              	.LBI10353:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18609              		.loc 11 33 5 is_stmt 1 view .LVU3727
 18610              	.LBB10373:
 18611              	.LBI10354:
 18612              		.loc 39 74 5 view .LVU3728
 18613              	.LBB10369:
 18614              	.LBI10355:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18615              		.loc 39 68 9 view .LVU3729
 18616              	.LBB10365:
 18617              	.LBB10361:
 18618              	.LBI10357:
 18619              		.loc 34 204 15 view .LVU3730
 18620              		.loc 34 204 15 is_stmt 0 view .LVU3731
 18621              	.LBE10361:
 18622              	.LBE10365:
 18623              	.LBE10369:
 18624              	.LBE10373:
 18625              	.LBE10741:
 18626              	.LBB10742:
 18627              	.LBI10374:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18628              		.loc 11 33 5 is_stmt 1 view .LVU3732
 18629              	.LBB10394:
 18630              	.LBI10375:
 18631              		.loc 39 74 5 view .LVU3733
 18632              	.LBB10390:
 18633              	.LBI10376:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18634              		.loc 39 68 9 view .LVU3734
 18635              	.LBB10386:
 18636              	.LBB10382:
 18637              	.LBI10378:
 18638              		.loc 34 204 15 view .LVU3735
 18639              		.loc 34 204 15 is_stmt 0 view .LVU3736
 18640              	.LBE10382:
 18641              	.LBE10386:
 18642              	.LBE10390:
 18643              	.LBE10394:
 18644              	.LBE10742:
 18645              	.LBB10743:
 18646              	.LBI10395:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 785


  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18647              		.loc 11 33 5 is_stmt 1 view .LVU3737
 18648              	.LBB10415:
 18649              	.LBI10396:
 18650              		.loc 39 74 5 view .LVU3738
 18651              	.LBB10411:
 18652              	.LBI10397:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18653              		.loc 39 68 9 view .LVU3739
 18654              	.LBB10407:
 18655              	.LBB10403:
 18656              	.LBI10399:
 18657              		.loc 34 204 15 view .LVU3740
 18658              		.loc 34 204 15 is_stmt 0 view .LVU3741
 18659              	.LBE10403:
 18660              	.LBE10407:
 18661              	.LBE10411:
 18662              	.LBE10415:
 18663              	.LBE10743:
 18664              	.LBB10744:
 18665              	.LBI10416:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18666              		.loc 11 33 5 is_stmt 1 view .LVU3742
 18667              	.LBB10436:
 18668              	.LBI10417:
 18669              		.loc 39 74 5 view .LVU3743
 18670              	.LBB10432:
 18671              	.LBI10418:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18672              		.loc 39 68 9 view .LVU3744
 18673              	.LBB10428:
 18674              	.LBB10424:
 18675              	.LBI10420:
 18676              		.loc 34 204 15 view .LVU3745
 18677              		.loc 34 204 15 is_stmt 0 view .LVU3746
 18678              	.LBE10424:
 18679              	.LBE10428:
 18680              	.LBE10432:
 18681              	.LBE10436:
 18682              	.LBE10744:
 18683              	.LBB10745:
 18684              	.LBI10437:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18685              		.loc 11 33 5 is_stmt 1 view .LVU3747
 18686              	.LBB10454:
 18687              	.LBI10438:
 18688              		.loc 39 74 5 view .LVU3748
 18689              	.LBB10451:
 18690              	.LBI10439:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18691              		.loc 39 68 9 view .LVU3749
 18692              	.LBB10448:
 18693              	.LBB10445:
 18694              	.LBI10441:
 18695              		.loc 34 204 15 view .LVU3750
 18696              		.loc 34 204 15 is_stmt 0 view .LVU3751
 18697              	.LBE10445:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 786


 18698              	.LBE10448:
 18699              	.LBE10451:
 18700              	.LBE10454:
 18701              	.LBE10745:
 18702              	.LBB10746:
 18703              	.LBI10461:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18704              		.loc 11 33 5 is_stmt 1 view .LVU3752
 18705              	.LBB10481:
 18706              	.LBI10462:
 18707              		.loc 39 74 5 view .LVU3753
 18708              	.LBB10477:
 18709              	.LBI10463:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18710              		.loc 39 68 9 view .LVU3754
 18711              	.LBB10473:
 18712              	.LBB10469:
 18713              	.LBI10465:
 18714              		.loc 34 204 15 view .LVU3755
 18715              		.loc 34 204 15 is_stmt 0 view .LVU3756
 18716              	.LBE10469:
 18717              	.LBE10473:
 18718              	.LBE10477:
 18719              	.LBE10481:
 18720              	.LBE10746:
 18721              	.LBB10747:
 18722              	.LBI10495:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18723              		.loc 11 33 5 is_stmt 1 view .LVU3757
 18724              	.LBB10515:
 18725              	.LBI10496:
 18726              		.loc 39 74 5 view .LVU3758
 18727              	.LBB10511:
 18728              	.LBI10497:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18729              		.loc 39 68 9 view .LVU3759
 18730              	.LBB10507:
 18731              	.LBB10503:
 18732              	.LBI10499:
 18733              		.loc 34 204 15 view .LVU3760
 18734              		.loc 34 204 15 is_stmt 0 view .LVU3761
 18735              	.LBE10503:
 18736              	.LBE10507:
 18737              	.LBE10511:
 18738              	.LBE10515:
 18739              	.LBE10747:
 18740              	.LBB10748:
 18741              	.LBI10516:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18742              		.loc 11 33 5 is_stmt 1 view .LVU3762
 18743              	.LBB10536:
 18744              	.LBI10517:
 18745              		.loc 39 74 5 view .LVU3763
 18746              	.LBB10532:
 18747              	.LBI10518:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18748              		.loc 39 68 9 view .LVU3764
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 787


 18749              	.LBB10528:
 18750              	.LBB10524:
 18751              	.LBI10520:
 18752              		.loc 34 204 15 view .LVU3765
 18753              		.loc 34 204 15 is_stmt 0 view .LVU3766
 18754              	.LBE10524:
 18755              	.LBE10528:
 18756              	.LBE10532:
 18757              	.LBE10536:
 18758              	.LBE10748:
 18759              	.LBB10749:
 18760              	.LBI10537:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18761              		.loc 11 33 5 is_stmt 1 view .LVU3767
 18762              	.LBB10557:
 18763              	.LBI10538:
 18764              		.loc 39 74 5 view .LVU3768
 18765              	.LBB10553:
 18766              	.LBI10539:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18767              		.loc 39 68 9 view .LVU3769
 18768              	.LBB10549:
 18769              	.LBB10545:
 18770              	.LBI10541:
 18771              		.loc 34 204 15 view .LVU3770
 18772              		.loc 34 204 15 is_stmt 0 view .LVU3771
 18773              	.LBE10545:
 18774              	.LBE10549:
 18775              	.LBE10553:
 18776              	.LBE10557:
 18777              	.LBE10749:
 18778              	.LBB10750:
 18779              	.LBI10558:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18780              		.loc 11 33 5 is_stmt 1 view .LVU3772
 18781              	.LBB10578:
 18782              	.LBI10559:
 18783              		.loc 39 74 5 view .LVU3773
 18784              	.LBB10574:
 18785              	.LBI10560:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18786              		.loc 39 68 9 view .LVU3774
 18787              	.LBB10570:
 18788              	.LBB10566:
 18789              	.LBI10562:
 18790              		.loc 34 204 15 view .LVU3775
 18791              		.loc 34 204 15 is_stmt 0 view .LVU3776
 18792              	.LBE10566:
 18793              	.LBE10570:
 18794              	.LBE10574:
 18795              	.LBE10578:
 18796              	.LBE10750:
 18797              	.LBB10751:
 18798              	.LBI10579:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18799              		.loc 11 33 5 is_stmt 1 view .LVU3777
 18800              	.LBB10599:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 788


 18801              	.LBI10580:
 18802              		.loc 39 74 5 view .LVU3778
 18803              	.LBB10595:
 18804              	.LBI10581:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18805              		.loc 39 68 9 view .LVU3779
 18806              	.LBB10591:
 18807              	.LBB10587:
 18808              	.LBI10583:
 18809              		.loc 34 204 15 view .LVU3780
 18810              		.loc 34 204 15 is_stmt 0 view .LVU3781
 18811              	.LBE10587:
 18812              	.LBE10591:
 18813              	.LBE10595:
 18814              	.LBE10599:
 18815              	.LBE10751:
 18816              	.LBB10752:
 18817              	.LBI10600:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18818              		.loc 11 33 5 is_stmt 1 view .LVU3782
 18819              	.LBB10620:
 18820              	.LBI10601:
 18821              		.loc 39 74 5 view .LVU3783
 18822              	.LBB10616:
 18823              	.LBI10602:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18824              		.loc 39 68 9 view .LVU3784
 18825              	.LBB10612:
 18826              	.LBB10608:
 18827              	.LBI10604:
 18828              		.loc 34 204 15 view .LVU3785
 18829              		.loc 34 204 15 is_stmt 0 view .LVU3786
 18830              	.LBE10608:
 18831              	.LBE10612:
 18832              	.LBE10616:
 18833              	.LBE10620:
 18834              	.LBE10752:
 18835              	.LBB10753:
 18836              	.LBI10640:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18837              		.loc 11 33 5 is_stmt 1 view .LVU3787
 18838              	.LBB10660:
 18839              	.LBI10641:
 18840              		.loc 39 74 5 view .LVU3788
 18841              	.LBB10656:
 18842              	.LBI10642:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18843              		.loc 39 68 9 view .LVU3789
 18844              	.LBB10652:
 18845              	.LBB10648:
 18846              	.LBI10644:
 18847              		.loc 34 204 15 view .LVU3790
 18848              		.loc 34 204 15 is_stmt 0 view .LVU3791
 18849              	.LBE10648:
 18850              	.LBE10652:
 18851              	.LBE10656:
 18852              	.LBE10660:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 789


 18853              	.LBE10753:
 18854              	.LBB10754:
 18855              	.LBI10661:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18856              		.loc 11 33 5 is_stmt 1 view .LVU3792
 18857              	.LBB10681:
 18858              	.LBI10662:
 18859              		.loc 39 74 5 view .LVU3793
 18860              	.LBB10677:
 18861              	.LBI10663:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18862              		.loc 39 68 9 view .LVU3794
 18863              	.LBB10673:
 18864              	.LBB10669:
 18865              	.LBI10665:
 18866              		.loc 34 204 15 view .LVU3795
 18867              		.loc 34 204 15 is_stmt 0 view .LVU3796
 18868              	.LBE10669:
 18869              	.LBE10673:
 18870              	.LBE10677:
 18871              	.LBE10681:
 18872              	.LBE10754:
 18873              	.LBB10755:
 18874              	.LBI10682:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18875              		.loc 11 33 5 is_stmt 1 view .LVU3797
 18876              	.LBB10702:
 18877              	.LBI10683:
 18878              		.loc 39 74 5 view .LVU3798
 18879              	.LBB10698:
 18880              	.LBI10684:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18881              		.loc 39 68 9 view .LVU3799
 18882              	.LBB10694:
 18883              	.LBB10690:
 18884              	.LBI10686:
 18885              		.loc 34 204 15 view .LVU3800
 18886              		.loc 34 204 15 is_stmt 0 view .LVU3801
 18887              	.LBE10690:
 18888              	.LBE10694:
 18889              	.LBE10698:
 18890              	.LBE10702:
 18891              	.LBE10755:
 18892              	.LBB10756:
 18893              	.LBI10703:
  33:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 18894              		.loc 11 33 5 is_stmt 1 view .LVU3802
 18895              	.LBB10720:
 18896              	.LBI10704:
 18897              		.loc 39 74 5 view .LVU3803
 18898              	.LBB10717:
 18899              	.LBI10705:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18900              		.loc 39 68 9 view .LVU3804
 18901              	.LBB10714:
 18902              	.LBB10711:
 18903              	.LBI10707:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 790


 18904              		.loc 34 204 15 view .LVU3805
 18905              		.loc 34 204 15 is_stmt 0 view .LVU3806
 18906              	.LBE10711:
 18907              	.LBE10714:
 18908              	.LBE10717:
 18909              	.LBE10720:
 18910              	.LBE10756:
 18911              	.LBE11141:
 18912              	.LBB11142:
 18913              	.LBI10758:
 18914              		.loc 43 12 5 is_stmt 1 view .LVU3807
 18915              	.LBB10775:
 18916              	.LBB10770:
 18917              	.LBI10770:
 18918              		.file 44 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
 18919              		.loc 44 23 5 view .LVU3808
 18920              		.loc 44 23 5 is_stmt 0 view .LVU3809
 18921              	.LBE10770:
 18922              	.LBB10771:
 18923              	.LBI10760:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 18924              		.loc 14 487 7 is_stmt 1 view .LVU3810
 18925              	.LBB10769:
 18926              	.LBI10761:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 18927              		.loc 14 288 7 view .LVU3811
 18928              	.LBB10768:
 18929              	.LBI10762:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 18930              		.loc 14 131 2 view .LVU3812
 18931              	.LBB10765:
 18932              	.LBI10765:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18933              		.loc 9 144 7 view .LVU3813
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 791


 18934              	.LBB10766:
 18935              	.LBI10766:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18936              		.loc 7 79 7 view .LVU3814
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18937              		.loc 7 79 7 is_stmt 0 view .LVU3815
 18938              	.LBE10766:
 18939              	.LBE10765:
 18940              	.LBB10767:
 18941              	.LBI10763:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 18942              		.loc 14 97 2 is_stmt 1 view .LVU3816
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 18943              		.loc 14 97 2 is_stmt 0 view .LVU3817
 18944              	.LBE10767:
 18945              	.LBE10768:
 18946              	.LBE10769:
 18947              	.LBE10771:
 18948              	.LBB10772:
 18949              	.LBI10772:
 18950              		.file 45 "../../DaisySP//Source/Filters/svf.h"
   1:../../DaisySP//Source/Filters/svf.h **** /*
   2:../../DaisySP//Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Filters/svf.h **** 
   4:../../DaisySP//Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/svf.h **** */
   8:../../DaisySP//Source/Filters/svf.h **** 
   9:../../DaisySP//Source/Filters/svf.h **** #pragma once
  10:../../DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../DaisySP//Source/Filters/svf.h **** 
  13:../../DaisySP//Source/Filters/svf.h **** namespace daisysp
  14:../../DaisySP//Source/Filters/svf.h **** {
  15:../../DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../DaisySP//Source/Filters/svf.h **** 
  17:../../DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../DaisySP//Source/Filters/svf.h **** 
  19:../../DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../DaisySP//Source/Filters/svf.h **** 
  21:../../DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../DaisySP//Source/Filters/svf.h **** 
  24:../../DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../DaisySP//Source/Filters/svf.h **** */
  26:../../DaisySP//Source/Filters/svf.h **** class Svf
  27:../../DaisySP//Source/Filters/svf.h **** {
  28:../../DaisySP//Source/Filters/svf.h ****   public:
  29:../../DaisySP//Source/Filters/svf.h ****     Svf() {}
 18951              		.loc 45 29 5 is_stmt 1 view .LVU3818
 18952              		.loc 45 29 5 is_stmt 0 view .LVU3819
 18953              	.LBE10772:
 18954              	.LBB10773:
 18955              	.LBI10773:
 18956              		.loc 45 29 5 is_stmt 1 view .LVU3820
 18957              		.loc 45 29 5 is_stmt 0 view .LVU3821
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 792


 18958              	.LBE10773:
 18959              	.LBE10775:
 18960              	.LBE11142:
 18961              	.LBB11143:
  22:Brizachord.cpp ****     Brizachord::instance = this;
 18962              		.loc 1 22 5 is_stmt 1 view .LVU3822
  25:Brizachord.cpp **** 	hw.Configure();
 18963              		.loc 1 25 2 view .LVU3823
  26:Brizachord.cpp **** 	hw.Init();
 18964              		.loc 1 26 2 view .LVU3824
  27:Brizachord.cpp **** 	hw.SetAudioBlockSize(4);
 18965              		.loc 1 27 2 view .LVU3825
  28:Brizachord.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 18966              		.loc 1 28 2 view .LVU3826
  31:Brizachord.cpp **** 	AdcChannelConfig adc_config[4];
 18967              		.loc 1 31 2 view .LVU3827
  31:Brizachord.cpp **** 	AdcChannelConfig adc_config[4];
 18968              		.loc 1 31 31 view .LVU3828
 18969 0278 2EAA     		add	r2, sp, #184
 18970 027a 0DF5027C 		add	ip, sp, #520
 18971              	.L603:
 18972              	.LVL816:
 18973              	.LBB10778:
 18974              	.LBI10778:
  31:../../libDaisy//src/per/adc.h **** {
 18975              		.loc 36 31 8 view .LVU3829
 18976              	.LBB10779:
 18977              	.LBB10780:
 18978              	.LBI10780:
 18979              		.loc 39 74 5 view .LVU3830
 18980              	.LBB10781:
 18981              	.LBI10781:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 18982              		.loc 39 68 9 view .LVU3831
 18983              	.LBB10782:
 18984              	.LBB10783:
 18985              	.LBI10783:
 18986              		.loc 34 204 15 view .LVU3832
 18987              	.LBE10783:
  69:../../libDaisy//src/per/gpio.h ****         {
 18988              		.loc 39 69 73 is_stmt 0 view .LVU3833
 18989 027e 0021     		movs	r1, #0
 18990              	.LBB10786:
 18991              	.LBB10784:
 18992              		.loc 34 204 43 view .LVU3834
 18993 0280 0B25     		movs	r5, #11
 18994 0282 FF20     		movs	r0, #255
 18995 0284 A2F13C03 		sub	r3, r2, #60
 18996 0288 02F8505C 		strb	r5, [r2, #-80]
 18997              	.LBE10784:
 18998              	.LBE10786:
  69:../../libDaisy//src/per/gpio.h ****         {
 18999              		.loc 39 69 73 view .LVU3835
 19000 028c 42F84C1C 		str	r1, [r2, #-76]
 19001              	.LBB10787:
 19002              	.LBB10785:
 19003              		.loc 34 204 43 view .LVU3836
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 793


 19004 0290 02F84F0C 		strb	r0, [r2, #-79]
 19005              	.LVL817:
 19006              		.loc 34 204 43 view .LVU3837
 19007              	.LBE10785:
 19008              	.LBE10787:
  69:../../libDaisy//src/per/gpio.h ****         {
 19009              		.loc 39 69 73 view .LVU3838
 19010 0294 42E91211 		strd	r1, r1, [r2, #-72]
 19011              	.LVL818:
  69:../../libDaisy//src/per/gpio.h ****         {
 19012              		.loc 39 69 73 view .LVU3839
 19013              	.LBE10782:
 19014              	.LBE10781:
 19015              	.LBE10780:
  31:../../libDaisy//src/per/adc.h **** {
 19016              		.loc 36 31 8 is_stmt 1 view .LVU3840
 19017              	.L602:
 19018              	.LBB10788:
 19019              	.LBI10788:
 19020              		.loc 39 74 5 view .LVU3841
 19021              	.LBB10789:
 19022              	.LBI10789:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 19023              		.loc 39 68 9 view .LVU3842
 19024              	.LBB10790:
 19025              	.LBB10791:
 19026              	.LBI10791:
 19027              		.loc 34 204 15 view .LVU3843
 19028              	.LBE10791:
 19029              	.LBE10790:
 19030              	.LBE10789:
 19031              	.LBE10788:
  31:../../libDaisy//src/per/adc.h **** {
 19032              		.loc 36 31 8 is_stmt 0 view .LVU3844
 19033 0298 1433     		adds	r3, r3, #20
 19034              	.LVL819:
 19035              	.LBB10800:
 19036              	.LBB10798:
 19037              	.LBB10796:
  69:../../libDaisy//src/per/gpio.h ****         {
 19038              		.loc 39 69 73 view .LVU3845
 19039 029a 0025     		movs	r5, #0
 19040              	.LBB10794:
 19041              	.LBB10792:
 19042              		.loc 34 204 43 view .LVU3846
 19043 029c 0B20     		movs	r0, #11
 19044 029e FF21     		movs	r1, #255
 19045              	.LBE10792:
 19046              	.LBE10794:
 19047              	.LBE10796:
 19048              	.LBE10798:
 19049              	.LBE10800:
  31:../../libDaisy//src/per/adc.h **** {
 19050              		.loc 36 31 8 view .LVU3847
 19051 02a0 9A42     		cmp	r2, r3
 19052              	.LBB10801:
 19053              	.LBB10799:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 794


 19054              	.LBB10797:
  69:../../libDaisy//src/per/gpio.h ****         {
 19055              		.loc 39 69 73 view .LVU3848
 19056 02a2 43F8105C 		str	r5, [r3, #-16]
 19057              	.LBB10795:
 19058              	.LBB10793:
 19059              		.loc 34 204 43 view .LVU3849
 19060 02a6 03F8140C 		strb	r0, [r3, #-20]
 19061 02aa 03F8131C 		strb	r1, [r3, #-19]
 19062              	.LVL820:
 19063              		.loc 34 204 43 view .LVU3850
 19064              	.LBE10793:
 19065              	.LBE10795:
  69:../../libDaisy//src/per/gpio.h ****         {
 19066              		.loc 39 69 73 view .LVU3851
 19067 02ae 43E90355 		strd	r5, r5, [r3, #-12]
 19068              	.LVL821:
  69:../../libDaisy//src/per/gpio.h ****         {
 19069              		.loc 39 69 73 view .LVU3852
 19070              	.LBE10797:
 19071              	.LBE10799:
 19072              	.LBE10801:
  31:../../libDaisy//src/per/adc.h **** {
 19073              		.loc 36 31 8 is_stmt 1 view .LVU3853
  31:../../libDaisy//src/per/adc.h **** {
 19074              		.loc 36 31 8 view .LVU3854
 19075 02b2 F1D1     		bne	.L602
 19076              	.LVL822:
  31:../../libDaisy//src/per/adc.h **** {
 19077              		.loc 36 31 8 is_stmt 0 view .LVU3855
 19078              	.LBE10779:
 19079              	.LBE10778:
  31:Brizachord.cpp **** 	AdcChannelConfig adc_config[4];
 19080              		.loc 1 31 31 is_stmt 1 discriminator 3 view .LVU3856
  31:Brizachord.cpp **** 	AdcChannelConfig adc_config[4];
 19081              		.loc 1 31 31 discriminator 3 view .LVU3857
 19082 02b4 5432     		adds	r2, r2, #84
 19083 02b6 9445     		cmp	ip, r2
 19084 02b8 E1D1     		bne	.L603
  32:Brizachord.cpp **** 	adc_config[0].InitSingle(hw.GetPin(15)); // A0 (Strum vol)
 19085              		.loc 1 32 2 discriminator 2 view .LVU3858
  32:Brizachord.cpp **** 	adc_config[0].InitSingle(hw.GetPin(15)); // A0 (Strum vol)
 19086              		.loc 1 32 26 is_stmt 0 discriminator 2 view .LVU3859
 19087 02ba 0F20     		movs	r0, #15
  36:Brizachord.cpp **** 	hw.adc.Init(adc_config, 4);
 19088              		.loc 1 36 13 discriminator 2 view .LVU3860
 19089 02bc 04F1240A 		add	r10, r4, #36
  32:Brizachord.cpp **** 	adc_config[0].InitSingle(hw.GetPin(15)); // A0 (Strum vol)
 19090              		.loc 1 32 26 discriminator 2 view .LVU3861
 19091 02c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 19092              	.LVL823:
 19093 02c4 ADF81400 		strh	r0, [sp, #20]	@ movhi
 19094 02c8 0599     		ldr	r1, [sp, #20]
 19095 02ca 0222     		movs	r2, #2
 19096 02cc 1AA8     		add	r0, sp, #104
 19097 02ce FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleENS_3PinENS0_15ConversionSpeedE
 19098              	.LVL824:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 795


  33:Brizachord.cpp ****     adc_config[1].InitSingle(hw.GetPin(16)); // A1 (Chord vol)
 19099              		.loc 1 33 5 is_stmt 1 discriminator 2 view .LVU3862
  33:Brizachord.cpp ****     adc_config[1].InitSingle(hw.GetPin(16)); // A1 (Chord vol)
 19100              		.loc 1 33 29 is_stmt 0 discriminator 2 view .LVU3863
 19101 02d2 1020     		movs	r0, #16
 19102 02d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 19103              	.LVL825:
 19104 02d8 ADF81800 		strh	r0, [sp, #24]	@ movhi
 19105 02dc 0699     		ldr	r1, [sp, #24]
 19106 02de 0222     		movs	r2, #2
 19107 02e0 2FA8     		add	r0, sp, #188
 19108 02e2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleENS_3PinENS0_15ConversionSpeedE
 19109              	.LVL826:
  34:Brizachord.cpp ****     adc_config[2].InitSingle(hw.GetPin(17)); // A2 (Drums vol)
 19110              		.loc 1 34 5 is_stmt 1 discriminator 2 view .LVU3864
  34:Brizachord.cpp ****     adc_config[2].InitSingle(hw.GetPin(17)); // A2 (Drums vol)
 19111              		.loc 1 34 29 is_stmt 0 discriminator 2 view .LVU3865
 19112 02e6 1120     		movs	r0, #17
 19113 02e8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 19114              	.LVL827:
 19115 02ec ADF81C00 		strh	r0, [sp, #28]	@ movhi
 19116 02f0 0799     		ldr	r1, [sp, #28]
 19117 02f2 0222     		movs	r2, #2
 19118 02f4 44A8     		add	r0, sp, #272
 19119 02f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleENS_3PinENS0_15ConversionSpeedE
 19120              	.LVL828:
  35:Brizachord.cpp ****     adc_config[3].InitSingle(hw.GetPin(18)); // A3 (BPM)
 19121              		.loc 1 35 5 is_stmt 1 discriminator 2 view .LVU3866
  35:Brizachord.cpp ****     adc_config[3].InitSingle(hw.GetPin(18)); // A3 (BPM)
 19122              		.loc 1 35 29 is_stmt 0 discriminator 2 view .LVU3867
 19123 02fa 1220     		movs	r0, #18
 19124 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 19125              	.LVL829:
 19126 0300 ADF82000 		strh	r0, [sp, #32]	@ movhi
 19127 0304 0899     		ldr	r1, [sp, #32]
 19128 0306 0222     		movs	r2, #2
 19129 0308 59A8     		add	r0, sp, #356
 19130 030a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleENS_3PinENS0_15ConversionSpeedE
 19131              	.LVL830:
  36:Brizachord.cpp **** 	hw.adc.Init(adc_config, 4);
 19132              		.loc 1 36 2 is_stmt 1 discriminator 2 view .LVU3868
  36:Brizachord.cpp **** 	hw.adc.Init(adc_config, 4);
 19133              		.loc 1 36 13 is_stmt 0 discriminator 2 view .LVU3869
 19134 030e 0423     		movs	r3, #4
 19135 0310 1AA9     		add	r1, sp, #104
 19136 0312 5046     		mov	r0, r10
 19137 0314 1A46     		mov	r2, r3
 19138 0316 CDF80CA0 		str	r10, [sp, #12]
 19139 031a FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 19140              	.LVL831:
  37:Brizachord.cpp **** 	hw.adc.Start();
 19141              		.loc 1 37 2 is_stmt 1 discriminator 2 view .LVU3870
  37:Brizachord.cpp **** 	hw.adc.Start();
 19142              		.loc 1 37 14 is_stmt 0 discriminator 2 view .LVU3871
 19143 031e 0398     		ldr	r0, [sp, #12]
 19144 0320 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 19145              	.LVL832:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 796


  40:Brizachord.cpp **** 	gpio_state.init();
 19146              		.loc 1 40 2 is_stmt 1 discriminator 2 view .LVU3872
  40:Brizachord.cpp **** 	gpio_state.init();
 19147              		.loc 1 40 17 is_stmt 0 discriminator 2 view .LVU3873
 19148 0324 4846     		mov	r0, r9
 19149 0326 FFF7FEFF 		bl	_ZN9GPIOState4initEv
 19150              	.LVL833:
  43:Brizachord.cpp **** 	instrument_state.chord.root = "Bb";
 19151              		.loc 1 43 2 is_stmt 1 discriminator 2 view .LVU3874
 19152              	.LBB10802:
 19153              	.LBI10802:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 19154              		.loc 5 675 7 discriminator 2 view .LVU3875
 19155              	.LBB10803:
 19156              	.LBI10803:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19157              		.loc 5 1435 7 discriminator 2 view .LVU3876
 19158              	.LBB10804:
 19159              	.LBB10805:
 19160              	.LBI10805:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 19161              		.loc 5 901 7 discriminator 2 view .LVU3877
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 19162              		.loc 5 901 7 is_stmt 0 discriminator 2 view .LVU3878
 19163              	.LBE10805:
 19164              	.LBE10804:
 19165              	.LBE10803:
 19166              	.LBE10802:
 19167              	.LBE11143:
 19168              	.LBE11147:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19169              		.loc 21 357 2 is_stmt 1 discriminator 2 view .LVU3879
 19170              	.LBB11148:
 19171              	.LBB11144:
 19172              	.LBB10810:
 19173              	.LBB10808:
 19174              	.LBB10806:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 19175              		.loc 5 1438 19 is_stmt 0 discriminator 2 view .LVU3880
 19176 032a 0223     		movs	r3, #2
 19177 032c 2946     		mov	r1, r5
 19178 032e 04F18400 		add	r0, r4, #132
 19179              	.LVL834:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 19180              		.loc 5 1438 19 discriminator 2 view .LVU3881
 19181 0332 0093     		str	r3, [sp]
 19182              	.LBE10806:
 19183              	.LBE10808:
 19184              	.LBE10810:
 19185              	.LBB10811:
 19186              	.LBB10812:
 19187              	.LBB10813:
 19188              	.LBB10814:
 19189              	.LBB10815:
 19190              	.LBB10816:
 19191              	.LBB10817:
 19192              	.LBB10818:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 797


 19193              	.LBB10819:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19194              		.loc 5 160 46 discriminator 2 view .LVU3882
 19195 0334 0DF1380A 		add	r10, sp, #56
 19196              	.LBE10819:
 19197              	.LBE10818:
 19198              	.LBE10817:
 19199              	.LBE10816:
 19200              	.LBE10815:
 19201              	.LBE10814:
 19202              	.LBE10813:
 19203              	.LBE10812:
 19204              	.LBE10811:
 19205              	.LBB10952:
 19206              	.LBB10809:
 19207              	.LBB10807:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 19208              		.loc 5 1438 19 discriminator 2 view .LVU3883
 19209 0338 234B     		ldr	r3, .L640+8
 19210 033a D4F88820 		ldr	r2, [r4, #136]
 19211 033e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 19212              	.LVL835:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 19213              		.loc 5 1438 19 discriminator 2 view .LVU3884
 19214              	.LBE10807:
 19215              	.LBE10809:
 19216              	.LBE10952:
  44:Brizachord.cpp **** 	instrument_state.chord.quality = ChordQuality::MAJOR;
 19217              		.loc 1 44 2 is_stmt 1 discriminator 2 view .LVU3885
  45:Brizachord.cpp **** 	instrument_state.chord.extension = ChordExtension::TRIAD;
 19218              		.loc 1 45 2 discriminator 2 view .LVU3886
  44:Brizachord.cpp **** 	instrument_state.chord.quality = ChordQuality::MAJOR;
 19219              		.loc 1 44 33 is_stmt 0 discriminator 2 view .LVU3887
 19220 0342 A4F89C50 		strh	r5, [r4, #156]	@ movhi
  46:Brizachord.cpp **** 	instrument_state.queued_extension = ChordExtension::TRIAD;
 19221              		.loc 1 46 2 is_stmt 1 discriminator 2 view .LVU3888
  47:Brizachord.cpp **** 	instrument_state.queued_quality = ChordQuality::MAJOR;
 19222              		.loc 1 47 2 discriminator 2 view .LVU3889
  47:Brizachord.cpp **** 	instrument_state.queued_quality = ChordQuality::MAJOR;
 19223              		.loc 1 47 34 is_stmt 0 discriminator 2 view .LVU3890
 19224 0346 A4F8A050 		strh	r5, [r4, #160]	@ movhi
  48:Brizachord.cpp **** 	instrument_state.bpm = 80;
 19225              		.loc 1 48 2 is_stmt 1 discriminator 2 view .LVU3891
  48:Brizachord.cpp **** 	instrument_state.bpm = 80;
 19226              		.loc 1 48 23 is_stmt 0 discriminator 2 view .LVU3892
 19227 034a 5023     		movs	r3, #80
 19228              	.LBB10953:
 19229              	.LBB10946:
 19230              	.LBB10940:
 19231              	.LBB10934:
 19232              	.LBB10928:
 19233              	.LBB10922:
 19234              	.LBB10827:
 19235              	.LBB10825:
 19236              	.LBB10823:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19237              		.loc 5 160 46 discriminator 2 view .LVU3893
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 798


 19238 034c CDF830A0 		str	r10, [sp, #48]
 19239              	.LBE10823:
 19240              	.LBE10825:
 19241              	.LBE10827:
 19242              	.LBE10922:
 19243              	.LBE10928:
 19244              	.LBE10934:
 19245              	.LBE10940:
 19246              	.LBE10946:
 19247              	.LBE10953:
  48:Brizachord.cpp **** 	instrument_state.bpm = 80;
 19248              		.loc 1 48 23 discriminator 2 view .LVU3894
 19249 0350 84F8BD30 		strb	r3, [r4, #189]
  50:Brizachord.cpp **** 	auto midi_notes = chord_to_midi(instrument_state.chord);
 19250              		.loc 1 50 2 is_stmt 1 discriminator 2 view .LVU3895
 19251              	.LVL836:
 19252              	.LBB10954:
 19253              	.LBI10811:
  25:InstrumentState.h ****     std::string root;
 19254              		.loc 31 25 8 discriminator 2 view .LVU3896
 19255              	.LBB10947:
 19256              	.LBB10941:
 19257              	.LBB10935:
 19258              	.LBI10814:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 19259              		.loc 5 448 7 discriminator 2 view .LVU3897
 19260              	.LBB10929:
 19261              	.LBB10923:
 19262              	.LBB10828:
 19263              	.LBI10828:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19264              		.loc 5 190 7 discriminator 2 view .LVU3898
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19265              		.loc 5 190 7 is_stmt 0 discriminator 2 view .LVU3899
 19266              	.LBE10828:
 19267              	.LBB10829:
 19268              	.LBI10829:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19269              		.loc 5 290 7 is_stmt 1 discriminator 2 view .LVU3900
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19270              		.loc 5 290 7 is_stmt 0 discriminator 2 view .LVU3901
 19271              	.LBE10829:
 19272              	.LBB10830:
 19273              	.LBI10830:
 19274              		.loc 26 97 29 is_stmt 1 discriminator 2 view .LVU3902
 19275              	.LBB10831:
 19276              	.LBI10831:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 19277              		.loc 6 558 7 discriminator 2 view .LVU3903
 19278              	.LBB10832:
 19279              	.LBI10832:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19280              		.loc 9 147 7 discriminator 2 view .LVU3904
 19281              	.LBB10833:
 19282              	.LBI10833:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19283              		.loc 7 82 7 discriminator 2 view .LVU3905
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 799


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19284              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU3906
 19285              	.LBE10833:
 19286              	.LBE10832:
 19287              	.LBE10831:
 19288              	.LBE10830:
 19289              	.LBB10834:
 19290              	.LBI10817:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 19291              		.loc 5 159 2 is_stmt 1 discriminator 2 view .LVU3907
 19292              	.LBB10826:
 19293              	.LBB10824:
 19294              	.LBB10820:
 19295              	.LBI10820:
 19296              		.loc 27 101 5 discriminator 2 view .LVU3908
 19297              		.loc 27 101 5 is_stmt 0 discriminator 2 view .LVU3909
 19298              	.LBE10820:
 19299              	.LBB10821:
 19300              	.LBI10821:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19301              		.loc 9 147 7 is_stmt 1 discriminator 2 view .LVU3910
 19302              	.LBB10822:
 19303              	.LBI10822:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19304              		.loc 7 82 7 discriminator 2 view .LVU3911
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19305              		.loc 7 82 7 is_stmt 0 discriminator 2 view .LVU3912
 19306              	.LBE10822:
 19307              	.LBE10821:
 19308              	.LBE10824:
 19309              	.LBE10826:
 19310              	.LBE10834:
 19311              	.LBB10835:
 19312              	.LBI10835:
 19313              		.loc 9 162 7 is_stmt 1 discriminator 2 view .LVU3913
 19314              	.LBB10836:
 19315              	.LBI10836:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19316              		.loc 7 89 7 discriminator 2 view .LVU3914
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19317              		.loc 7 89 7 is_stmt 0 discriminator 2 view .LVU3915
 19318              	.LBE10836:
 19319              	.LBE10835:
 19320              	.LBB10837:
 19321              	.LBI10837:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19322              		.loc 5 186 7 is_stmt 1 discriminator 2 view .LVU3916
 19323              	.LBE10837:
 19324              	.LBB10838:
 19325              	.LBB10839:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19326              		.loc 5 908 16 is_stmt 0 discriminator 2 view .LVU3917
 19327 0354 D4E921B5 		ldrd	fp, r5, [r4, #132]
 19328              	.LVL837:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19329              		.loc 5 908 16 discriminator 2 view .LVU3918
 19330              	.LBE10839:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 800


 19331              	.LBE10838:
 19332              	.LBB10840:
 19333              	.LBI10840:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 19334              		.loc 5 263 9 is_stmt 1 discriminator 2 view .LVU3919
 19335              	.LBB10841:
 19336              	.LBB10842:
 19337              	.LBI10842:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 19338              		.loc 5 243 9 discriminator 2 view .LVU3920
 19339              	.LBB10843:
 19340              	.LBB10844:
 19341              	.LBI10844:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 19342              		.loc 25 206 7 discriminator 2 view .LVU3921
 19343              	.LBB10845:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 19344              		.loc 25 211 42 is_stmt 0 discriminator 2 view .LVU3922
 19345 0358 1BEB050F 		cmn	fp, r5
 19346 035c 03D0     		beq	.L604
 19347 035e BBF1000F 		cmp	fp, #0
 19348 0362 00F00281 		beq	.L610
 19349              	.L604:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 19350              		.loc 25 217 2 view .LVU3923
 19351 0366 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 19352              		.loc 25 215 12 view .LVU3924
 19353 0368 1395     		str	r5, [sp, #76]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 19354              		.loc 25 217 2 view .LVU3925
 19355 036a 00F2EB80 		bhi	.L636
 19356              	.LVL838:
 19357              	.LBB10846:
 19358              	.LBI10846:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19359              		.loc 5 186 7 is_stmt 1 view .LVU3926
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19360              		.loc 5 186 7 is_stmt 0 view .LVU3927
 19361              	.LBE10846:
 19362              	.LBB10848:
 19363              	.LBI10848:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 19364              		.loc 5 392 7 is_stmt 1 view .LVU3928
 19365              	.LBB10849:
 19366              	.LBI10849:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19367              		.loc 5 346 7 view .LVU3929
 19368              	.LBB10850:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 19369              		.loc 5 348 2 is_stmt 0 view .LVU3930
 19370 036e 012D     		cmp	r5, #1
 19371 0370 40F0D380 		bne	.L607
 19372              	.LVL839:
 19373              	.LBB10851:
 19374              	.LBI10851:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 801


 19375              		.loc 21 321 7 is_stmt 1 view .LVU3931
 19376              	.LBB10852:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19377              		.loc 21 322 9 view .LVU3932
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19378              		.loc 21 322 16 is_stmt 0 view .LVU3933
 19379 0374 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19380              		.loc 21 322 14 view .LVU3934
 19381 0378 8DF83830 		strb	r3, [sp, #56]
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19382              		.loc 21 322 22 view .LVU3935
 19383 037c 5346     		mov	r3, r10
 19384              	.LVL840:
 19385              	.L608:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19386              		.loc 21 322 22 view .LVU3936
 19387              	.LBE10852:
 19388              	.LBE10851:
 19389              	.LBE10850:
 19390              	.LBE10849:
 19391              	.LBE10848:
 19392              	.LBB10868:
 19393              	.LBI10868:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19394              		.loc 5 214 7 is_stmt 1 view .LVU3937
 19395              	.LBB10869:
 19396              	.LBB10870:
 19397              	.LBI10870:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 19398              		.loc 5 182 7 view .LVU3938
 19399              	.LBE10870:
 19400              	.LBB10872:
 19401              	.LBB10873:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19402              		.loc 21 322 14 is_stmt 0 view .LVU3939
 19403 037e 0022     		movs	r2, #0
 19404              	.LBE10873:
 19405              	.LBE10872:
 19406              	.LBB10876:
 19407              	.LBB10871:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19408              		.loc 5 183 26 view .LVU3940
 19409 0380 0D95     		str	r5, [sp, #52]
 19410              	.LVL841:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19411              		.loc 5 183 26 view .LVU3941
 19412              	.LBE10871:
 19413              	.LBE10876:
 19414              	.LBB10877:
 19415              	.LBI10877:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19416              		.loc 5 186 7 is_stmt 1 view .LVU3942
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19417              		.loc 5 186 7 is_stmt 0 view .LVU3943
 19418              	.LBE10877:
 19419              	.LBB10879:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 802


 19420              	.LBI10872:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 19421              		.loc 21 321 7 is_stmt 1 view .LVU3944
 19422              	.LBB10874:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19423              		.loc 21 322 9 view .LVU3945
 19424              	.LBE10874:
 19425              	.LBE10879:
 19426              	.LBE10869:
 19427              	.LBE10868:
 19428              	.LBE10845:
 19429              	.LBE10844:
 19430              	.LBE10843:
 19431              	.LBE10842:
 19432              	.LBE10841:
 19433              	.LBE10840:
 19434              	.LBE10923:
 19435              	.LBE10929:
 19436              	.LBE10935:
 19437              	.LBE10941:
 19438              	.LBE10947:
 19439              	.LBE10954:
  50:Brizachord.cpp **** 	auto midi_notes = chord_to_midi(instrument_state.chord);
 19440              		.loc 1 50 56 is_stmt 0 view .LVU3946
 19441 0382 09A8     		add	r0, sp, #36
 19442 0384 0CA9     		add	r1, sp, #48
 19443              	.LVL842:
 19444              	.LBB10955:
 19445              	.LBB10948:
 19446              	.LBB10942:
 19447              	.LBB10936:
 19448              	.LBB10930:
 19449              	.LBB10924:
 19450              	.LBB10918:
 19451              	.LBB10914:
 19452              	.LBB10910:
 19453              	.LBB10906:
 19454              	.LBB10902:
 19455              	.LBB10898:
 19456              	.LBB10884:
 19457              	.LBB10882:
 19458              	.LBB10880:
 19459              	.LBB10875:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19460              		.loc 21 322 14 view .LVU3947
 19461 0386 5A55     		strb	r2, [r3, r5]
 19462              	.LVL843:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19463              		.loc 21 322 14 view .LVU3948
 19464              	.LBE10875:
 19465              	.LBE10880:
 19466              	.LBE10882:
 19467              	.LBE10884:
 19468              	.LBE10898:
 19469              	.LBE10902:
 19470              	.LBE10906:
 19471              	.LBE10910:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 803


 19472              	.LBE10914:
 19473              	.LBE10918:
 19474              	.LBE10924:
 19475              	.LBE10930:
 19476              	.LBE10936:
  25:InstrumentState.h ****     std::string root;
 19477              		.loc 31 25 8 view .LVU3949
 19478 0388 B4F89C30 		ldrh	r3, [r4, #156]
 19479 038c ADF84830 		strh	r3, [sp, #72]	@ movhi
 19480              	.LVL844:
  25:InstrumentState.h ****     std::string root;
 19481              		.loc 31 25 8 view .LVU3950
 19482              	.LBE10942:
 19483              	.LBE10948:
 19484              	.LBE10955:
  50:Brizachord.cpp **** 	auto midi_notes = chord_to_midi(instrument_state.chord);
 19485              		.loc 1 50 56 view .LVU3951
 19486 0390 FFF7FEFF 		bl	_Z13chord_to_midi5Chord
 19487              	.LVL845:
 19488              	.LBB10956:
 19489              	.LBI10956:
  25:InstrumentState.h ****     std::string root;
 19490              		.loc 31 25 8 is_stmt 1 view .LVU3952
 19491              	.LBB10957:
 19492              	.LBI10957:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 19493              		.loc 5 657 7 view .LVU3953
 19494              	.LBB10958:
 19495              	.LBI10958:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19496              		.loc 5 229 7 view .LVU3954
 19497              	.LBB10959:
 19498              	.LBB10960:
 19499              	.LBI10960:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 19500              		.loc 5 221 7 view .LVU3955
 19501              	.LBB10961:
 19502              	.LBI10961:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19503              		.loc 5 186 7 view .LVU3956
 19504              	.LBB10962:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19505              		.loc 5 187 28 is_stmt 0 view .LVU3957
 19506 0394 0C98     		ldr	r0, [sp, #48]
 19507              	.LVL846:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19508              		.loc 5 187 28 view .LVU3958
 19509              	.LBE10962:
 19510              	.LBE10961:
 19511              	.LBB10963:
 19512              	.LBI10963:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19513              		.loc 5 200 7 is_stmt 1 view .LVU3959
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19514              		.loc 5 200 7 is_stmt 0 view .LVU3960
 19515              	.LBE10963:
 19516              	.LBE10960:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 804


 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19517              		.loc 5 231 2 view .LVU3961
 19518 0396 5045     		cmp	r0, r10
 19519 0398 03D0     		beq	.L609
 19520              	.LVL847:
 19521              	.LBB10964:
 19522              	.LBI10964:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19523              		.loc 5 236 7 is_stmt 1 view .LVU3962
 19524              	.LBB10965:
 19525              	.LBB10966:
 19526              	.LBI10966:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19527              		.loc 6 491 7 view .LVU3963
 19528              	.LBB10967:
 19529              	.LBI10967:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 19530              		.loc 7 120 7 view .LVU3964
 19531              	.LBE10967:
 19532              	.LBE10966:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19533              		.loc 5 237 34 is_stmt 0 view .LVU3965
 19534 039a 0E99     		ldr	r1, [sp, #56]
 19535              	.LBB10970:
 19536              	.LBB10969:
 19537              	.LBB10968:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19538              		.loc 7 133 19 view .LVU3966
 19539 039c 0131     		adds	r1, r1, #1
 19540              	.LVL848:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19541              		.loc 7 133 19 view .LVU3967
 19542 039e FFF7FEFF 		bl	_ZdlPvj
 19543              	.LVL849:
 19544              	.L609:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19545              		.loc 7 133 19 view .LVU3968
 19546              	.LBE10968:
 19547              	.LBE10969:
 19548              	.LBE10970:
 19549              	.LBE10965:
 19550              	.LBE10964:
 19551              	.LBE10959:
 19552              	.LBE10958:
 19553              	.LBB10971:
 19554              	.LBI10971:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19555              		.loc 5 150 14 is_stmt 1 view .LVU3969
 19556              	.LBB10972:
 19557              	.LBI10972:
 19558              		.loc 9 162 7 view .LVU3970
 19559              	.LBB10973:
 19560              	.LBI10973:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19561              		.loc 7 89 7 view .LVU3971
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19562              		.loc 7 89 7 is_stmt 0 view .LVU3972
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 805


 19563              	.LBE10973:
 19564              	.LBE10972:
 19565              	.LBE10971:
 19566              	.LBE10957:
 19567              	.LBE10956:
  51:Brizachord.cpp **** 	chord_synth.set_chord(instrument_state.chord);
 19568              		.loc 1 51 2 is_stmt 1 view .LVU3973
 19569              	.LBB10974:
 19570              	.LBI10974:
  25:InstrumentState.h ****     std::string root;
 19571              		.loc 31 25 8 view .LVU3974
 19572              	.LBB10975:
 19573              	.LBB10976:
 19574              	.LBB10977:
 19575              	.LBI10977:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 19576              		.loc 5 448 7 view .LVU3975
 19577              	.LBB10978:
 19578              	.LBB10979:
 19579              	.LBB10980:
 19580              	.LBI10980:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19581              		.loc 5 190 7 view .LVU3976
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19582              		.loc 5 190 7 is_stmt 0 view .LVU3977
 19583              	.LBE10980:
 19584              	.LBB10981:
 19585              	.LBI10981:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19586              		.loc 5 290 7 is_stmt 1 view .LVU3978
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19587              		.loc 5 290 7 is_stmt 0 view .LVU3979
 19588              	.LBE10981:
 19589              	.LBB10982:
 19590              	.LBI10982:
 19591              		.loc 26 97 29 is_stmt 1 view .LVU3980
 19592              	.LBB10983:
 19593              	.LBI10983:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 19594              		.loc 6 558 7 view .LVU3981
 19595              	.LBB10984:
 19596              	.LBI10984:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19597              		.loc 9 147 7 view .LVU3982
 19598              	.LBB10985:
 19599              	.LBI10985:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19600              		.loc 7 82 7 view .LVU3983
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19601              		.loc 7 82 7 is_stmt 0 view .LVU3984
 19602              	.LBE10985:
 19603              	.LBE10984:
 19604              	.LBE10983:
 19605              	.LBE10982:
 19606              	.LBB10986:
 19607              	.LBI10986:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 806


 19608              		.loc 5 159 2 is_stmt 1 view .LVU3985
 19609              	.LBB10987:
 19610              	.LBB10988:
 19611              	.LBB10989:
 19612              	.LBI10989:
 19613              		.loc 27 101 5 view .LVU3986
 19614              		.loc 27 101 5 is_stmt 0 view .LVU3987
 19615              	.LBE10989:
 19616              	.LBB10990:
 19617              	.LBI10990:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19618              		.loc 9 147 7 is_stmt 1 view .LVU3988
 19619              	.LBB10991:
 19620              	.LBI10991:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19621              		.loc 7 82 7 view .LVU3989
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19622              		.loc 7 82 7 is_stmt 0 view .LVU3990
 19623              	.LBE10991:
 19624              	.LBE10990:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19625              		.loc 5 160 46 view .LVU3991
 19626 03a2 0DF1540A 		add	r10, sp, #84
 19627              	.LVL850:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19628              		.loc 5 160 46 view .LVU3992
 19629              	.LBE10988:
 19630              	.LBE10987:
 19631              	.LBE10986:
 19632              	.LBB10994:
 19633              	.LBB10995:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19634              		.loc 5 908 16 view .LVU3993
 19635 03a6 D4E921B5 		ldrd	fp, r5, [r4, #132]
 19636              	.LBE10995:
 19637              	.LBE10994:
 19638              	.LBB10996:
 19639              	.LBB10993:
 19640              	.LBB10992:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19641              		.loc 5 160 46 view .LVU3994
 19642 03aa CDF84CA0 		str	r10, [sp, #76]
 19643              	.LVL851:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19644              		.loc 5 160 46 view .LVU3995
 19645              	.LBE10992:
 19646              	.LBE10993:
 19647              	.LBE10996:
 19648              	.LBB10997:
 19649              	.LBI10997:
 19650              		.loc 9 162 7 is_stmt 1 view .LVU3996
 19651              	.LBB10998:
 19652              	.LBI10998:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19653              		.loc 7 89 7 view .LVU3997
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19654              		.loc 7 89 7 is_stmt 0 view .LVU3998
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 807


 19655              	.LBE10998:
 19656              	.LBE10997:
 19657              	.LBB10999:
 19658              	.LBI10999:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19659              		.loc 5 186 7 is_stmt 1 view .LVU3999
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19660              		.loc 5 186 7 is_stmt 0 view .LVU4000
 19661              	.LBE10999:
 19662              	.LBB11000:
 19663              	.LBI11000:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 19664              		.loc 5 263 9 is_stmt 1 view .LVU4001
 19665              	.LBB11001:
 19666              	.LBB11002:
 19667              	.LBI11002:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 19668              		.loc 5 243 9 view .LVU4002
 19669              	.LBB11003:
 19670              	.LBB11004:
 19671              	.LBI11004:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 19672              		.loc 25 206 7 view .LVU4003
 19673              	.LBB11005:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 19674              		.loc 25 211 42 is_stmt 0 view .LVU4004
 19675 03ae 1BEB050F 		cmn	fp, r5
 19676 03b2 0BD0     		beq	.L620
 19677 03b4 BBF1000F 		cmp	fp, #0
 19678 03b8 00F0D780 		beq	.L610
 19679 03bc 06E0     		b	.L641
 19680              	.L642:
 19681 03be 00BF     		.align	2
 19682              	.L640:
 19683 03c0 00803B47 		.word	1195081728
 19684 03c4 00000000 		.word	.LANCHOR0
 19685 03c8 28000000 		.word	.LC13
 19686              	.L641:
 19687              	.L620:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 19688              		.loc 25 217 2 view .LVU4005
 19689 03cc 0F2D     		cmp	r5, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 19690              		.loc 25 215 12 view .LVU4006
 19691 03ce 0C95     		str	r5, [sp, #48]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 19692              		.loc 25 217 2 view .LVU4007
 19693 03d0 00F2A980 		bhi	.L637
 19694              	.LVL852:
 19695              	.LBB11006:
 19696              	.LBI11006:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19697              		.loc 5 186 7 is_stmt 1 view .LVU4008
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19698              		.loc 5 186 7 is_stmt 0 view .LVU4009
 19699              	.LBE11006:
 19700              	.LBB11008:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 808


 19701              	.LBI11008:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 19702              		.loc 5 392 7 is_stmt 1 view .LVU4010
 19703              	.LBB11009:
 19704              	.LBI11009:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19705              		.loc 5 346 7 view .LVU4011
 19706              	.LBB11010:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 19707              		.loc 5 348 2 is_stmt 0 view .LVU4012
 19708 03d4 012D     		cmp	r5, #1
 19709 03d6 40F0A380 		bne	.L614
 19710              	.LVL853:
 19711              	.LBB11011:
 19712              	.LBI11011:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 19713              		.loc 21 321 7 is_stmt 1 view .LVU4013
 19714              	.LBB11012:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19715              		.loc 21 322 9 view .LVU4014
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19716              		.loc 21 322 16 is_stmt 0 view .LVU4015
 19717 03da 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19718              		.loc 21 322 14 view .LVU4016
 19719 03de 8DF85430 		strb	r3, [sp, #84]
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19720              		.loc 21 322 22 view .LVU4017
 19721 03e2 5346     		mov	r3, r10
 19722              	.LVL854:
 19723              	.L615:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19724              		.loc 21 322 22 view .LVU4018
 19725              	.LBE11012:
 19726              	.LBE11011:
 19727              	.LBE11010:
 19728              	.LBE11009:
 19729              	.LBE11008:
 19730              	.LBB11028:
 19731              	.LBI11028:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19732              		.loc 5 214 7 is_stmt 1 view .LVU4019
 19733              	.LBB11029:
 19734              	.LBB11030:
 19735              	.LBI11030:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 19736              		.loc 5 182 7 view .LVU4020
 19737              	.LBE11030:
 19738              	.LBB11032:
 19739              	.LBB11033:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19740              		.loc 21 322 14 is_stmt 0 view .LVU4021
 19741 03e4 0022     		movs	r2, #0
 19742              	.LBE11033:
 19743              	.LBE11032:
 19744              	.LBB11036:
 19745              	.LBB11031:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 809


 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19746              		.loc 5 183 26 view .LVU4022
 19747 03e6 1495     		str	r5, [sp, #80]
 19748              	.LVL855:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19749              		.loc 5 183 26 view .LVU4023
 19750              	.LBE11031:
 19751              	.LBE11036:
 19752              	.LBB11037:
 19753              	.LBI11037:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19754              		.loc 5 186 7 is_stmt 1 view .LVU4024
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19755              		.loc 5 186 7 is_stmt 0 view .LVU4025
 19756              	.LBE11037:
 19757              	.LBB11039:
 19758              	.LBI11032:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 19759              		.loc 21 321 7 is_stmt 1 view .LVU4026
 19760              	.LBB11034:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19761              		.loc 21 322 9 view .LVU4027
 19762              	.LBE11034:
 19763              	.LBE11039:
 19764              	.LBE11029:
 19765              	.LBE11028:
 19766              	.LBE11005:
 19767              	.LBE11004:
 19768              	.LBE11003:
 19769              	.LBE11002:
 19770              	.LBE11001:
 19771              	.LBE11000:
 19772              	.LBE10979:
 19773              	.LBE10978:
 19774              	.LBE10977:
 19775              	.LBE10976:
 19776              	.LBE10975:
 19777              	.LBE10974:
  51:Brizachord.cpp **** 	chord_synth.set_chord(instrument_state.chord);
 19778              		.loc 1 51 23 is_stmt 0 view .LVU4028
 19779 03e8 4046     		mov	r0, r8
 19780 03ea 13A9     		add	r1, sp, #76
 19781              	.LVL856:
 19782              	.LBB11091:
 19783              	.LBB11088:
 19784              	.LBB11085:
 19785              	.LBB11082:
 19786              	.LBB11079:
 19787              	.LBB11076:
 19788              	.LBB11073:
 19789              	.LBB11070:
 19790              	.LBB11067:
 19791              	.LBB11064:
 19792              	.LBB11061:
 19793              	.LBB11058:
 19794              	.LBB11044:
 19795              	.LBB11042:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 810


 19796              	.LBB11040:
 19797              	.LBB11035:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19798              		.loc 21 322 14 view .LVU4029
 19799 03ec 5A55     		strb	r2, [r3, r5]
 19800              	.LVL857:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19801              		.loc 21 322 14 view .LVU4030
 19802              	.LBE11035:
 19803              	.LBE11040:
 19804              	.LBE11042:
 19805              	.LBE11044:
 19806              	.LBE11058:
 19807              	.LBE11061:
 19808              	.LBE11064:
 19809              	.LBE11067:
 19810              	.LBE11070:
 19811              	.LBE11073:
 19812              	.LBE11076:
 19813              	.LBE11079:
 19814              	.LBE11082:
  25:InstrumentState.h ****     std::string root;
 19815              		.loc 31 25 8 view .LVU4031
 19816 03ee B4F89C30 		ldrh	r3, [r4, #156]
 19817 03f2 ADF86430 		strh	r3, [sp, #100]	@ movhi
 19818              	.LVL858:
  25:InstrumentState.h ****     std::string root;
 19819              		.loc 31 25 8 view .LVU4032
 19820              	.LBE11085:
 19821              	.LBE11088:
 19822              	.LBE11091:
  51:Brizachord.cpp **** 	chord_synth.set_chord(instrument_state.chord);
 19823              		.loc 1 51 23 view .LVU4033
 19824 03f6 FFF7FEFF 		bl	_ZN10ChordSynth9set_chordE5Chord
 19825              	.LVL859:
 19826              	.LBB11092:
 19827              	.LBI11092:
  25:InstrumentState.h ****     std::string root;
 19828              		.loc 31 25 8 is_stmt 1 view .LVU4034
 19829              	.LBB11093:
 19830              	.LBI11093:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 19831              		.loc 5 657 7 view .LVU4035
 19832              	.LBB11094:
 19833              	.LBI11094:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19834              		.loc 5 229 7 view .LVU4036
 19835              	.LBB11095:
 19836              	.LBB11096:
 19837              	.LBI11096:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 19838              		.loc 5 221 7 view .LVU4037
 19839              	.LBB11097:
 19840              	.LBI11097:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19841              		.loc 5 186 7 view .LVU4038
 19842              	.LBB11098:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 811


 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19843              		.loc 5 187 28 is_stmt 0 view .LVU4039
 19844 03fa 1398     		ldr	r0, [sp, #76]
 19845              	.LVL860:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19846              		.loc 5 187 28 view .LVU4040
 19847              	.LBE11098:
 19848              	.LBE11097:
 19849              	.LBB11099:
 19850              	.LBI11099:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19851              		.loc 5 200 7 is_stmt 1 view .LVU4041
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19852              		.loc 5 200 7 is_stmt 0 view .LVU4042
 19853              	.LBE11099:
 19854              	.LBE11096:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19855              		.loc 5 231 2 view .LVU4043
 19856 03fc 5045     		cmp	r0, r10
 19857 03fe 03D0     		beq	.L616
 19858              	.LVL861:
 19859              	.LBB11100:
 19860              	.LBI11100:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19861              		.loc 5 236 7 is_stmt 1 view .LVU4044
 19862              	.LBB11101:
 19863              	.LBB11102:
 19864              	.LBI11102:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19865              		.loc 6 491 7 view .LVU4045
 19866              	.LBB11103:
 19867              	.LBI11103:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 19868              		.loc 7 120 7 view .LVU4046
 19869              	.LBE11103:
 19870              	.LBE11102:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19871              		.loc 5 237 34 is_stmt 0 view .LVU4047
 19872 0400 1599     		ldr	r1, [sp, #84]
 19873              	.LBB11106:
 19874              	.LBB11105:
 19875              	.LBB11104:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19876              		.loc 7 133 19 view .LVU4048
 19877 0402 0131     		adds	r1, r1, #1
 19878              	.LVL862:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19879              		.loc 7 133 19 view .LVU4049
 19880 0404 FFF7FEFF 		bl	_ZdlPvj
 19881              	.LVL863:
 19882              	.L616:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 19883              		.loc 7 133 19 view .LVU4050
 19884              	.LBE11104:
 19885              	.LBE11105:
 19886              	.LBE11106:
 19887              	.LBE11101:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 812


 19888              	.LBE11100:
 19889              	.LBE11095:
 19890              	.LBE11094:
 19891              	.LBB11107:
 19892              	.LBI11107:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19893              		.loc 5 150 14 is_stmt 1 view .LVU4051
 19894              	.LBB11108:
 19895              	.LBI11108:
 19896              		.loc 9 162 7 view .LVU4052
 19897              	.LBB11109:
 19898              	.LBI11109:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19899              		.loc 7 89 7 view .LVU4053
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19900              		.loc 7 89 7 is_stmt 0 view .LVU4054
 19901              	.LBE11109:
 19902              	.LBE11108:
 19903              	.LBE11107:
 19904              	.LBE11093:
 19905              	.LBE11092:
  55:Brizachord.cpp ****     int i2cBus = 1;
 19906              		.loc 1 55 5 is_stmt 1 view .LVU4055
  56:Brizachord.cpp ****     trill_bar.setup(i2cBus, Trill::BAR);
 19907              		.loc 1 56 5 view .LVU4056
  56:Brizachord.cpp ****     trill_bar.setup(i2cBus, Trill::BAR);
 19908              		.loc 1 56 20 is_stmt 0 view .LVU4057
 19909 0408 0122     		movs	r2, #1
 19910 040a FF23     		movs	r3, #255
 19911 040c 3846     		mov	r0, r7
 19912 040e 1146     		mov	r1, r2
 19913 0410 FFF7FEFF 		bl	_ZN5Trill5setupEjNS_6DeviceEh
 19914              	.LVL864:
  59:Brizachord.cpp **** 	poll_trill_bar();
 19915              		.loc 1 59 2 is_stmt 1 view .LVU4058
  59:Brizachord.cpp **** 	poll_trill_bar();
 19916              		.loc 1 59 16 is_stmt 0 view .LVU4059
 19917 0414 2046     		mov	r0, r4
 19918 0416 FFF7FEFF 		bl	_ZN10Brizachord14poll_trill_barEv
 19919              	.LVL865:
  60:Brizachord.cpp **** 	gpio_state.debounce_all();
 19920              		.loc 1 60 2 is_stmt 1 view .LVU4060
 19921              	.LBB11110:
 19922              	.LBI11110:
  71:GPIOState.h   ****         button_Db.Debounce();
 19923              		.loc 10 71 10 view .LVU4061
 19924              	.LBB11111:
  72:GPIOState.h   ****         button_Eb.Debounce();
 19925              		.loc 10 72 9 view .LVU4062
  72:GPIOState.h   ****         button_Eb.Debounce();
 19926              		.loc 10 72 27 is_stmt 0 view .LVU4063
 19927 041a 04F50A70 		add	r0, r4, #552
 19928 041e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19929              	.LVL866:
  73:GPIOState.h   ****         button_Gb.Debounce();
 19930              		.loc 10 73 9 is_stmt 1 view .LVU4064
  73:GPIOState.h   ****         button_Gb.Debounce();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 813


 19931              		.loc 10 73 27 is_stmt 0 view .LVU4065
 19932 0422 04F51C70 		add	r0, r4, #624
 19933 0426 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19934              	.LVL867:
  74:GPIOState.h   ****         button_Ab.Debounce();
 19935              		.loc 10 74 9 is_stmt 1 view .LVU4066
  74:GPIOState.h   ****         button_Ab.Debounce();
 19936              		.loc 10 74 27 is_stmt 0 view .LVU4067
 19937 042a 04F53770 		add	r0, r4, #732
 19938 042e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19939              	.LVL868:
  75:GPIOState.h   ****         button_Bb.Debounce();
 19940              		.loc 10 75 9 is_stmt 1 view .LVU4068
  75:GPIOState.h   ****         button_Bb.Debounce();
 19941              		.loc 10 75 27 is_stmt 0 view .LVU4069
 19942 0432 04F54970 		add	r0, r4, #804
 19943 0436 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19944              	.LVL869:
  76:GPIOState.h   ****         
 19945              		.loc 10 76 9 is_stmt 1 view .LVU4070
  76:GPIOState.h   ****         
 19946              		.loc 10 76 27 is_stmt 0 view .LVU4071
 19947 043a 04F55B70 		add	r0, r4, #876
 19948 043e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19949              	.LVL870:
  78:GPIOState.h   ****         button_D.Debounce();
 19950              		.loc 10 78 9 is_stmt 1 view .LVU4072
  78:GPIOState.h   ****         button_D.Debounce();
 19951              		.loc 10 78 26 is_stmt 0 view .LVU4073
 19952 0442 04F50170 		add	r0, r4, #516
 19953 0446 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19954              	.LVL871:
  79:GPIOState.h   ****         button_E.Debounce();
 19955              		.loc 10 79 9 is_stmt 1 view .LVU4074
  79:GPIOState.h   ****         button_E.Debounce();
 19956              		.loc 10 79 26 is_stmt 0 view .LVU4075
 19957 044a 04F51370 		add	r0, r4, #588
 19958 044e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19959              	.LVL872:
  80:GPIOState.h   ****         button_F.Debounce();
 19960              		.loc 10 80 9 is_stmt 1 view .LVU4076
  80:GPIOState.h   ****         button_F.Debounce();
 19961              		.loc 10 80 26 is_stmt 0 view .LVU4077
 19962 0452 04F52570 		add	r0, r4, #660
 19963 0456 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19964              	.LVL873:
  81:GPIOState.h   ****         button_G.Debounce();
 19965              		.loc 10 81 9 is_stmt 1 view .LVU4078
  81:GPIOState.h   ****         button_G.Debounce();
 19966              		.loc 10 81 26 is_stmt 0 view .LVU4079
 19967 045a 04F52E70 		add	r0, r4, #696
 19968 045e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19969              	.LVL874:
  82:GPIOState.h   ****         button_A.Debounce();
 19970              		.loc 10 82 9 is_stmt 1 view .LVU4080
  82:GPIOState.h   ****         button_A.Debounce();
 19971              		.loc 10 82 26 is_stmt 0 view .LVU4081
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 814


 19972 0462 04F54070 		add	r0, r4, #768
 19973 0466 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19974              	.LVL875:
  83:GPIOState.h   ****         button_B.Debounce();
 19975              		.loc 10 83 9 is_stmt 1 view .LVU4082
  83:GPIOState.h   ****         button_B.Debounce();
 19976              		.loc 10 83 26 is_stmt 0 view .LVU4083
 19977 046a 04F55270 		add	r0, r4, #840
 19978 046e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19979              	.LVL876:
  84:GPIOState.h   **** 
 19980              		.loc 10 84 9 is_stmt 1 view .LVU4084
  84:GPIOState.h   **** 
 19981              		.loc 10 84 26 is_stmt 0 view .LVU4085
 19982 0472 04F56470 		add	r0, r4, #912
 19983 0476 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19984              	.LVL877:
  86:GPIOState.h   ****         button_6th.Debounce();
 19985              		.loc 10 86 9 is_stmt 1 view .LVU4086
  86:GPIOState.h   ****         button_6th.Debounce();
 19986              		.loc 10 86 30 is_stmt 0 view .LVU4087
 19987 047a 4846     		mov	r0, r9
 19988 047c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19989              	.LVL878:
  87:GPIOState.h   ****         button_7th.Debounce();
 19990              		.loc 10 87 9 is_stmt 1 view .LVU4088
  87:GPIOState.h   ****         button_7th.Debounce();
 19991              		.loc 10 87 28 is_stmt 0 view .LVU4089
 19992 0480 04F1E400 		add	r0, r4, #228
 19993 0484 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19994              	.LVL879:
  88:GPIOState.h   ****         button_9th.Debounce();
 19995              		.loc 10 88 9 is_stmt 1 view .LVU4090
  88:GPIOState.h   ****         button_9th.Debounce();
 19996              		.loc 10 88 28 is_stmt 0 view .LVU4091
 19997 0488 04F58470 		add	r0, r4, #264
 19998 048c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 19999              	.LVL880:
  89:GPIOState.h   ****         button_11th.Debounce();
 20000              		.loc 10 89 9 is_stmt 1 view .LVU4092
  89:GPIOState.h   ****         button_11th.Debounce();
 20001              		.loc 10 89 28 is_stmt 0 view .LVU4093
 20002 0490 04F59670 		add	r0, r4, #300
 20003 0494 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20004              	.LVL881:
  90:GPIOState.h   **** 
 20005              		.loc 10 90 9 is_stmt 1 view .LVU4094
  90:GPIOState.h   **** 
 20006              		.loc 10 90 29 is_stmt 0 view .LVU4095
 20007 0498 04F5A870 		add	r0, r4, #336
 20008 049c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20009              	.LVL882:
  92:GPIOState.h   ****         button_min.Debounce();
 20010              		.loc 10 92 9 is_stmt 1 view .LVU4096
  92:GPIOState.h   ****         button_min.Debounce();
 20011              		.loc 10 92 28 is_stmt 0 view .LVU4097
 20012 04a0 04F5BA70 		add	r0, r4, #372
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 815


 20013 04a4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20014              	.LVL883:
  93:GPIOState.h   ****         button_aug.Debounce();
 20015              		.loc 10 93 9 is_stmt 1 view .LVU4098
  93:GPIOState.h   ****         button_aug.Debounce();
 20016              		.loc 10 93 28 is_stmt 0 view .LVU4099
 20017 04a8 04F5CC70 		add	r0, r4, #408
 20018 04ac FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20019              	.LVL884:
  94:GPIOState.h   ****         button_dim.Debounce();
 20020              		.loc 10 94 9 is_stmt 1 view .LVU4100
  94:GPIOState.h   ****         button_dim.Debounce();
 20021              		.loc 10 94 28 is_stmt 0 view .LVU4101
 20022 04b0 04F5DE70 		add	r0, r4, #444
 20023 04b4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20024              	.LVL885:
  95:GPIOState.h   **** 
 20025              		.loc 10 95 9 is_stmt 1 view .LVU4102
  95:GPIOState.h   **** 
 20026              		.loc 10 95 28 is_stmt 0 view .LVU4103
 20027 04b8 04F5F070 		add	r0, r4, #480
 20028 04bc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20029              	.LVL886:
  97:GPIOState.h   ****         drum_left.Debounce();
 20030              		.loc 10 97 9 is_stmt 1 view .LVU4104
  97:GPIOState.h   ****         drum_left.Debounce();
 20031              		.loc 10 97 24 is_stmt 0 view .LVU4105
 20032 04c0 04F56D70 		add	r0, r4, #948
 20033 04c4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20034              	.LVL887:
  98:GPIOState.h   ****         drum_right.Debounce();
 20035              		.loc 10 98 9 is_stmt 1 view .LVU4106
  98:GPIOState.h   ****         drum_right.Debounce();
 20036              		.loc 10 98 27 is_stmt 0 view .LVU4107
 20037 04c8 04F57670 		add	r0, r4, #984
 20038 04cc FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20039              	.LVL888:
 20040              		.loc 10 99 9 is_stmt 1 view .LVU4108
 20041              		.loc 10 99 28 is_stmt 0 view .LVU4109
 20042 04d0 04F57F70 		add	r0, r4, #1020
 20043 04d4 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 20044              	.LVL889:
 20045              		.loc 10 99 28 view .LVU4110
 20046              	.LBE11111:
 20047              	.LBE11110:
  61:Brizachord.cpp **** 	poll_chord_qual();
 20048              		.loc 1 61 2 is_stmt 1 view .LVU4111
  61:Brizachord.cpp **** 	poll_chord_qual();
 20049              		.loc 1 61 17 is_stmt 0 view .LVU4112
 20050 04d8 2046     		mov	r0, r4
 20051 04da FFF7FEFF 		bl	_ZN10Brizachord15poll_chord_qualEv
 20052              	.LVL890:
  62:Brizachord.cpp **** 	poll_chord_ext();
 20053              		.loc 1 62 2 is_stmt 1 view .LVU4113
  62:Brizachord.cpp **** 	poll_chord_ext();
 20054              		.loc 1 62 16 is_stmt 0 view .LVU4114
 20055 04de 2046     		mov	r0, r4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 816


 20056 04e0 FFF7FEFF 		bl	_ZN10Brizachord14poll_chord_extEv
 20057              	.LVL891:
  63:Brizachord.cpp **** 	poll_chord_root();
 20058              		.loc 1 63 2 is_stmt 1 view .LVU4115
  63:Brizachord.cpp **** 	poll_chord_root();
 20059              		.loc 1 63 17 is_stmt 0 view .LVU4116
 20060 04e4 2046     		mov	r0, r4
 20061 04e6 FFF7FEFF 		bl	_ZN10Brizachord15poll_chord_rootEv
 20062              	.LVL892:
  64:Brizachord.cpp **** 	poll_pots();
 20063              		.loc 1 64 2 is_stmt 1 view .LVU4117
  64:Brizachord.cpp **** 	poll_pots();
 20064              		.loc 1 64 11 is_stmt 0 view .LVU4118
 20065 04ea 2046     		mov	r0, r4
 20066 04ec FFF7FEFF 		bl	_ZN10Brizachord9poll_potsEv
 20067              	.LVL893:
  65:Brizachord.cpp **** 	poll_pattern_controls();
 20068              		.loc 1 65 2 is_stmt 1 view .LVU4119
  65:Brizachord.cpp **** 	poll_pattern_controls();
 20069              		.loc 1 65 23 is_stmt 0 view .LVU4120
 20070 04f0 2046     		mov	r0, r4
 20071 04f2 FFF7FEFF 		bl	_ZN10Brizachord21poll_pattern_controlsEv
 20072              	.LVL894:
  67:Brizachord.cpp **** 	sequencer.set_bpm(instrument_state.bpm);
 20073              		.loc 1 67 2 is_stmt 1 view .LVU4121
 20074              	.LBB11112:
 20075              	.LBI11112:
  17:Sequencer.h   **** 
 20076              		.loc 12 17 10 view .LVU4122
 20077              	.LBB11113:
  17:Sequencer.h   **** 
 20078              		.loc 12 17 37 view .LVU4123
  17:Sequencer.h   **** 
 20079              		.loc 12 17 41 is_stmt 0 view .LVU4124
 20080 04f6 94F8BD30 		ldrb	r3, [r4, #189]	@ zero_extendqisi2
 20081              	.LBE11113:
 20082              	.LBE11112:
  69:Brizachord.cpp **** 	hw.StartAudio(audio_callback);
 20083              		.loc 1 69 15 view .LVU4125
 20084 04fa 3046     		mov	r0, r6
 20085 04fc 1C49     		ldr	r1, .L643
 20086              	.LBB11115:
 20087              	.LBB11114:
  17:Sequencer.h   **** 
 20088              		.loc 12 17 41 view .LVU4126
 20089 04fe 84F8C938 		strb	r3, [r4, #2249]
 20090              	.LVL895:
  17:Sequencer.h   **** 
 20091              		.loc 12 17 41 view .LVU4127
 20092              	.LBE11114:
 20093              	.LBE11115:
  69:Brizachord.cpp **** 	hw.StartAudio(audio_callback);
 20094              		.loc 1 69 2 is_stmt 1 view .LVU4128
  69:Brizachord.cpp **** 	hw.StartAudio(audio_callback);
 20095              		.loc 1 69 15 is_stmt 0 view .LVU4129
 20096 0502 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 20097              	.LVL896:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 817


 20098              	.LBB11116:
 20099              	.LBI11116:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20100              		.loc 14 678 7 is_stmt 1 view .LVU4130
 20101              	.LBB11117:
 20102              	.LBB11118:
 20103              	.LBI11118:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20104              		.loc 14 276 7 view .LVU4131
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20105              		.loc 14 276 7 is_stmt 0 view .LVU4132
 20106              	.LBE11118:
 20107              	.LBB11119:
 20108              	.LBI11119:
 20109              		.loc 6 735 5 is_stmt 1 view .LVU4133
 20110              		.loc 6 735 5 is_stmt 0 view .LVU4134
 20111              	.LBE11119:
 20112              	.LBB11120:
 20113              	.LBI11120:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20114              		.loc 14 333 7 is_stmt 1 view .LVU4135
 20115              	.LBB11121:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 20116              		.loc 14 335 15 is_stmt 0 view .LVU4136
 20117 0506 0998     		ldr	r0, [sp, #36]
 20118              	.LVL897:
 20119              	.LBB11122:
 20120              	.LBI11122:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20121              		.loc 14 350 7 is_stmt 1 view .LVU4137
 20122              	.LBB11123:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 20123              		.loc 14 353 2 is_stmt 0 view .LVU4138
 20124 0508 18B1     		cbz	r0, .L617
 20125              	.LVL898:
 20126              	.LBB11124:
 20127              	.LBI11124:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20128              		.loc 6 491 7 is_stmt 1 view .LVU4139
 20129              	.LBB11125:
 20130              	.LBB11126:
 20131              	.LBI11126:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20132              		.loc 7 120 7 view .LVU4140
 20133              	.LBE11126:
 20134              	.LBE11125:
 20135              	.LBE11124:
 20136              	.LBE11123:
 20137              	.LBE11122:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20138              		.loc 14 336 35 is_stmt 0 view .LVU4141
 20139 050a 0B99     		ldr	r1, [sp, #44]
 20140              	.LBB11132:
 20141              	.LBB11131:
 20142              	.LBB11130:
 20143              	.LBB11129:
 20144              	.LBB11128:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 818


 20145              	.LBB11127:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20146              		.loc 7 133 19 view .LVU4142
 20147 050c 091A     		subs	r1, r1, r0
 20148 050e FFF7FEFF 		bl	_ZdlPvj
 20149              	.LVL899:
 20150              	.L617:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20151              		.loc 7 133 19 view .LVU4143
 20152              	.LBE11127:
 20153              	.LBE11128:
 20154              	.LBE11129:
 20155              	.LBE11130:
 20156              	.LBE11131:
 20157              	.LBE11132:
 20158              	.LBB11133:
 20159              	.LBI11133:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 20160              		.loc 14 128 14 is_stmt 1 view .LVU4144
 20161              	.LBB11134:
 20162              	.LBI11134:
 20163              		.loc 9 162 7 view .LVU4145
 20164              	.LBB11135:
 20165              	.LBI11135:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20166              		.loc 7 89 7 view .LVU4146
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20167              		.loc 7 89 7 is_stmt 0 view .LVU4147
 20168              	.LBE11135:
 20169              	.LBE11134:
 20170              	.LBE11133:
 20171              	.LBE11121:
 20172              	.LBE11120:
 20173              	.LBE11117:
 20174              	.LBE11116:
 20175              	.LBE11144:
 20176              	.LBE11148:
  70:Brizachord.cpp **** }
 20177              		.loc 1 70 1 view .LVU4148
 20178 0512 2046     		mov	r0, r4
 20179 0514 6FB0     		add	sp, sp, #444
 20180              		.cfi_remember_state
 20181              		.cfi_def_cfa_offset 36
 20182              		@ sp needed
 20183 0516 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20184              	.LVL900:
 20185              	.L607:
 20186              		.cfi_restore_state
 20187              	.LBB11149:
 20188              	.LBB11145:
 20189              	.LBB11136:
 20190              	.LBB10949:
 20191              	.LBB10943:
 20192              	.LBB10937:
 20193              	.LBB10931:
 20194              	.LBB10925:
 20195              	.LBB10919:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 819


 20196              	.LBB10915:
 20197              	.LBB10911:
 20198              	.LBB10907:
 20199              	.LBB10903:
 20200              	.LBB10899:
 20201              	.LBB10885:
 20202              	.LBB10865:
 20203              	.LBB10862:
 20204              	.LBB10853:
 20205              	.LBI10853:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20206              		.loc 5 346 7 is_stmt 1 view .LVU4149
 20207              	.LBB10854:
 20208              	.LBI10854:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20209              		.loc 21 387 7 view .LVU4150
 20210              	.LBB10855:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20211              		.loc 21 389 2 view .LVU4151
 20212 051a 15BB     		cbnz	r5, .L638
 20213 051c 5346     		mov	r3, r10
 20214 051e 2EE7     		b	.L608
 20215              	.LVL901:
 20216              	.L614:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20217              		.loc 21 389 2 is_stmt 0 view .LVU4152
 20218              	.LBE10855:
 20219              	.LBE10854:
 20220              	.LBE10853:
 20221              	.LBE10862:
 20222              	.LBE10865:
 20223              	.LBE10885:
 20224              	.LBE10899:
 20225              	.LBE10903:
 20226              	.LBE10907:
 20227              	.LBE10911:
 20228              	.LBE10915:
 20229              	.LBE10919:
 20230              	.LBE10925:
 20231              	.LBE10931:
 20232              	.LBE10937:
 20233              	.LBE10943:
 20234              	.LBE10949:
 20235              	.LBE11136:
 20236              	.LBB11137:
 20237              	.LBB11089:
 20238              	.LBB11086:
 20239              	.LBB11083:
 20240              	.LBB11080:
 20241              	.LBB11077:
 20242              	.LBB11074:
 20243              	.LBB11071:
 20244              	.LBB11068:
 20245              	.LBB11065:
 20246              	.LBB11062:
 20247              	.LBB11059:
 20248              	.LBB11045:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 820


 20249              	.LBB11025:
 20250              	.LBB11022:
 20251              	.LBB11013:
 20252              	.LBI11013:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20253              		.loc 5 346 7 is_stmt 1 view .LVU4153
 20254              	.LBB11014:
 20255              	.LBI11014:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20256              		.loc 21 387 7 view .LVU4154
 20257              	.LBB11015:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20258              		.loc 21 389 2 view .LVU4155
 20259 0520 0DBB     		cbnz	r5, .L639
 20260 0522 5346     		mov	r3, r10
 20261 0524 5EE7     		b	.L615
 20262              	.LVL902:
 20263              	.L637:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20264              		.loc 21 389 2 is_stmt 0 view .LVU4156
 20265              	.LBE11015:
 20266              	.LBE11014:
 20267              	.LBE11013:
 20268              	.LBE11022:
 20269              	.LBE11025:
 20270              	.LBE11045:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20271              		.loc 25 219 13 view .LVU4157
 20272 0526 0022     		movs	r2, #0
 20273 0528 0CA9     		add	r1, sp, #48
 20274 052a 13A8     		add	r0, sp, #76
 20275              	.LVL903:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20276              		.loc 25 219 13 view .LVU4158
 20277 052c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 20278              	.LVL904:
 20279              	.LBB11046:
 20280              	.LBI11046:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 20281              		.loc 5 178 7 is_stmt 1 view .LVU4159
 20282              	.LBE11046:
 20283              	.LBB11048:
 20284              	.LBB11049:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20285              		.loc 5 211 31 is_stmt 0 view .LVU4160
 20286 0530 0C9B     		ldr	r3, [sp, #48]
 20287              	.LBE11049:
 20288              	.LBE11048:
 20289              	.LBB11051:
 20290              	.LBB11047:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20291              		.loc 5 179 26 view .LVU4161
 20292 0532 1390     		str	r0, [sp, #76]
 20293              	.LVL905:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20294              		.loc 5 179 26 view .LVU4162
 20295              	.LBE11047:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 821


 20296              	.LBE11051:
 20297              	.LBB11052:
 20298              	.LBI11048:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20299              		.loc 5 210 7 is_stmt 1 view .LVU4163
 20300              	.LBB11050:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20301              		.loc 5 211 31 is_stmt 0 view .LVU4164
 20302 0534 1593     		str	r3, [sp, #84]
 20303              	.LVL906:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20304              		.loc 5 211 31 view .LVU4165
 20305              	.LBE11050:
 20306              	.LBE11052:
 20307              	.LBB11053:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20308              		.loc 5 186 7 is_stmt 1 view .LVU4166
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20309              		.loc 5 186 7 is_stmt 0 view .LVU4167
 20310              	.LBE11053:
 20311              	.LBB11054:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20312              		.loc 5 392 7 is_stmt 1 view .LVU4168
 20313              	.LBB11026:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20314              		.loc 5 346 7 view .LVU4169
 20315              	.LBB11023:
 20316              	.LBB11020:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20317              		.loc 5 346 7 view .LVU4170
 20318              	.LBB11018:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20319              		.loc 21 387 7 view .LVU4171
 20320              	.LBB11016:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20321              		.loc 21 389 2 view .LVU4172
 20322              	.L613:
 20323              		.loc 21 395 2 view .LVU4173
 20324              		.loc 21 395 49 is_stmt 0 view .LVU4174
 20325 0536 2A46     		mov	r2, r5
 20326 0538 5946     		mov	r1, fp
 20327 053a FFF7FEFF 		bl	memcpy
 20328              	.LVL907:
 20329              		.loc 21 395 49 view .LVU4175
 20330              	.LBE11016:
 20331              	.LBE11018:
 20332              	.LBE11020:
 20333              	.LBE11023:
 20334              	.LBE11026:
 20335              	.LBE11054:
 20336              		.loc 25 232 15 view .LVU4176
 20337 053e 0C9D     		ldr	r5, [sp, #48]
 20338              	.LVL908:
 20339              	.LBB11055:
 20340              	.LBB11043:
 20341              	.LBB11041:
 20342              	.LBB11038:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 822


 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20343              		.loc 5 187 28 view .LVU4177
 20344 0540 139B     		ldr	r3, [sp, #76]
 20345              	.LBE11038:
 20346              	.LBE11041:
 20347              	.LBE11043:
 20348              	.LBE11055:
 20349              	.LBB11056:
 20350              	.LBB11027:
 20351              	.LBB11024:
 20352              	.LBB11021:
 20353              	.LBB11019:
 20354              	.LBB11017:
 20355              		.loc 21 395 66 view .LVU4178
 20356 0542 4FE7     		b	.L615
 20357              	.LVL909:
 20358              	.L636:
 20359              		.loc 21 395 66 view .LVU4179
 20360              	.LBE11017:
 20361              	.LBE11019:
 20362              	.LBE11021:
 20363              	.LBE11024:
 20364              	.LBE11027:
 20365              	.LBE11056:
 20366              	.LBE11059:
 20367              	.LBE11062:
 20368              	.LBE11065:
 20369              	.LBE11068:
 20370              	.LBE11071:
 20371              	.LBE11074:
 20372              	.LBE11077:
 20373              	.LBE11080:
 20374              	.LBE11083:
 20375              	.LBE11086:
 20376              	.LBE11089:
 20377              	.LBE11137:
 20378              	.LBB11138:
 20379              	.LBB10950:
 20380              	.LBB10944:
 20381              	.LBB10938:
 20382              	.LBB10932:
 20383              	.LBB10926:
 20384              	.LBB10920:
 20385              	.LBB10916:
 20386              	.LBB10912:
 20387              	.LBB10908:
 20388              	.LBB10904:
 20389              	.LBB10900:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20390              		.loc 25 219 13 view .LVU4180
 20391 0544 0022     		movs	r2, #0
 20392 0546 13A9     		add	r1, sp, #76
 20393 0548 0CA8     		add	r0, sp, #48
 20394              	.LVL910:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20395              		.loc 25 219 13 view .LVU4181
 20396 054a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 823


 20397              	.LVL911:
 20398              	.LBB10886:
 20399              	.LBI10886:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 20400              		.loc 5 178 7 is_stmt 1 view .LVU4182
 20401              	.LBE10886:
 20402              	.LBB10888:
 20403              	.LBB10889:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20404              		.loc 5 211 31 is_stmt 0 view .LVU4183
 20405 054e 139B     		ldr	r3, [sp, #76]
 20406              	.LBE10889:
 20407              	.LBE10888:
 20408              	.LBB10891:
 20409              	.LBB10887:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20410              		.loc 5 179 26 view .LVU4184
 20411 0550 0C90     		str	r0, [sp, #48]
 20412              	.LVL912:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20413              		.loc 5 179 26 view .LVU4185
 20414              	.LBE10887:
 20415              	.LBE10891:
 20416              	.LBB10892:
 20417              	.LBI10888:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20418              		.loc 5 210 7 is_stmt 1 view .LVU4186
 20419              	.LBB10890:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20420              		.loc 5 211 31 is_stmt 0 view .LVU4187
 20421 0552 0E93     		str	r3, [sp, #56]
 20422              	.LVL913:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20423              		.loc 5 211 31 view .LVU4188
 20424              	.LBE10890:
 20425              	.LBE10892:
 20426              	.LBB10893:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20427              		.loc 5 186 7 is_stmt 1 view .LVU4189
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20428              		.loc 5 186 7 is_stmt 0 view .LVU4190
 20429              	.LBE10893:
 20430              	.LBB10894:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20431              		.loc 5 392 7 is_stmt 1 view .LVU4191
 20432              	.LBB10866:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20433              		.loc 5 346 7 view .LVU4192
 20434              	.LBB10863:
 20435              	.LBB10860:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20436              		.loc 5 346 7 view .LVU4193
 20437              	.LBB10858:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20438              		.loc 21 387 7 view .LVU4194
 20439              	.LBB10856:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 824


 20440              		.loc 21 389 2 view .LVU4195
 20441              	.L606:
 20442              		.loc 21 395 2 view .LVU4196
 20443              		.loc 21 395 49 is_stmt 0 view .LVU4197
 20444 0554 2A46     		mov	r2, r5
 20445 0556 5946     		mov	r1, fp
 20446 0558 FFF7FEFF 		bl	memcpy
 20447              	.LVL914:
 20448              		.loc 21 395 49 view .LVU4198
 20449              	.LBE10856:
 20450              	.LBE10858:
 20451              	.LBE10860:
 20452              	.LBE10863:
 20453              	.LBE10866:
 20454              	.LBE10894:
 20455              		.loc 25 232 15 view .LVU4199
 20456 055c 139D     		ldr	r5, [sp, #76]
 20457              	.LVL915:
 20458              	.LBB10895:
 20459              	.LBB10883:
 20460              	.LBB10881:
 20461              	.LBB10878:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20462              		.loc 5 187 28 view .LVU4200
 20463 055e 0C9B     		ldr	r3, [sp, #48]
 20464              	.LBE10878:
 20465              	.LBE10881:
 20466              	.LBE10883:
 20467              	.LBE10895:
 20468              	.LBB10896:
 20469              	.LBB10867:
 20470              	.LBB10864:
 20471              	.LBB10861:
 20472              	.LBB10859:
 20473              	.LBB10857:
 20474              		.loc 21 395 66 view .LVU4201
 20475 0560 0DE7     		b	.L608
 20476              	.LVL916:
 20477              	.L638:
 20478              		.loc 21 395 66 view .LVU4202
 20479              	.LBE10857:
 20480              	.LBE10859:
 20481              	.LBE10861:
 20482              	.LBE10864:
 20483              	.LBE10867:
 20484              	.LBE10896:
 20485              	.LBB10897:
 20486              	.LBB10847:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20487              		.loc 5 187 28 view .LVU4203
 20488 0562 5046     		mov	r0, r10
 20489 0564 F6E7     		b	.L606
 20490              	.LVL917:
 20491              	.L639:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20492              		.loc 5 187 28 view .LVU4204
 20493              	.LBE10847:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 825


 20494              	.LBE10897:
 20495              	.LBE10900:
 20496              	.LBE10904:
 20497              	.LBE10908:
 20498              	.LBE10912:
 20499              	.LBE10916:
 20500              	.LBE10920:
 20501              	.LBE10926:
 20502              	.LBE10932:
 20503              	.LBE10938:
 20504              	.LBE10944:
 20505              	.LBE10950:
 20506              	.LBE11138:
 20507              	.LBB11139:
 20508              	.LBB11090:
 20509              	.LBB11087:
 20510              	.LBB11084:
 20511              	.LBB11081:
 20512              	.LBB11078:
 20513              	.LBB11075:
 20514              	.LBB11072:
 20515              	.LBB11069:
 20516              	.LBB11066:
 20517              	.LBB11063:
 20518              	.LBB11060:
 20519              	.LBB11057:
 20520              	.LBB11007:
 20521 0566 5046     		mov	r0, r10
 20522 0568 E5E7     		b	.L613
 20523              	.LVL918:
 20524              	.L610:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20525              		.loc 5 187 28 view .LVU4205
 20526              	.LBE11007:
 20527              	.LBE11057:
 20528              	.LBE11060:
 20529              	.LBE11063:
 20530              	.LBE11066:
 20531              	.LBE11069:
 20532              	.LBE11072:
 20533              	.LBE11075:
 20534              	.LBE11078:
 20535              	.LBE11081:
 20536              	.LBE11084:
 20537              	.LBE11087:
 20538              	.LBE11090:
 20539              	.LBE11139:
 20540              	.LBB11140:
 20541              	.LBB10951:
 20542              	.LBB10945:
 20543              	.LBB10939:
 20544              	.LBB10933:
 20545              	.LBB10927:
 20546              	.LBB10921:
 20547              	.LBB10917:
 20548              	.LBB10913:
 20549              	.LBB10909:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 826


 20550              	.LBB10905:
 20551              	.LBB10901:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 20552              		.loc 25 212 28 view .LVU4206
 20553 056a 0248     		ldr	r0, .L643+4
 20554 056c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 20555              	.LVL919:
 20556              	.L644:
 20557              		.align	2
 20558              	.L643:
 20559 0570 00000000 		.word	_ZN10Brizachord14audio_callbackEPKPKfPPfj
 20560 0574 00000000 		.word	.LC1
 20561              	.LBE10901:
 20562              	.LBE10905:
 20563              	.LBE10909:
 20564              	.LBE10913:
 20565              	.LBE10917:
 20566              	.LBE10921:
 20567              	.LBE10927:
 20568              	.LBE10933:
 20569              	.LBE10939:
 20570              	.LBE10945:
 20571              	.LBE10951:
 20572              	.LBE11140:
 20573              	.LBE11145:
 20574              	.LBE11149:
 20575              		.cfi_endproc
 20576              	.LFE5605:
 20578              		.global	_ZN10BrizachordC1Ev
 20579              		.thumb_set _ZN10BrizachordC1Ev,_ZN10BrizachordC2Ev
 20580              		.section	.text._ZN10BrizachordD2Ev,"ax",%progbits
 20581              		.align	1
 20582              		.p2align 2,,3
 20583              		.global	_ZN10BrizachordD2Ev
 20584              		.syntax unified
 20585              		.thumb
 20586              		.thumb_func
 20587              		.fpu fpv5-d16
 20589              	_ZN10BrizachordD2Ev:
 20590              	.LVL920:
 20591              	.LFB5608:
  72:Brizachord.cpp **** Brizachord::~Brizachord(){
 20592              		.loc 1 72 1 is_stmt 1 view -0
 20593              		.cfi_startproc
 20594              		@ args = 0, pretend = 0, frame = 0
 20595              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Brizachord.cpp **** Brizachord::~Brizachord(){
 20596              		.loc 1 72 1 is_stmt 0 view .LVU4208
 20597 0000 10B5     		push	{r4, lr}
 20598              		.cfi_def_cfa_offset 8
 20599              		.cfi_offset 4, -8
 20600              		.cfi_offset 14, -4
  72:Brizachord.cpp **** Brizachord::~Brizachord(){
 20601              		.loc 1 72 1 view .LVU4209
 20602 0002 0446     		mov	r4, r0
 20603              	.LVL921:
 20604              	.LBB11308:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 827


 20605              	.LBB11309:
 20606              	.LBI11309:
   9:Sequencer.h   **** {
 20607              		.loc 12 9 7 is_stmt 1 view .LVU4210
 20608              	.LBB11310:
 20609              	.LBI11310:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20610              		.loc 14 678 7 view .LVU4211
 20611              	.LBB11311:
 20612              	.LBI11311:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20613              		.loc 14 276 7 view .LVU4212
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20614              		.loc 14 276 7 is_stmt 0 view .LVU4213
 20615              	.LBE11311:
 20616              	.LBB11312:
 20617              	.LBI11312:
 20618              		.loc 6 735 5 is_stmt 1 view .LVU4214
 20619              		.loc 6 735 5 is_stmt 0 view .LVU4215
 20620              	.LBE11312:
 20621              	.LBB11313:
 20622              	.LBI11313:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20623              		.loc 14 333 7 is_stmt 1 view .LVU4216
 20624              	.LBB11314:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 20625              		.loc 14 335 15 is_stmt 0 view .LVU4217
 20626 0004 D0F8E008 		ldr	r0, [r0, #2272]
 20627              	.LVL922:
 20628              	.LBB11315:
 20629              	.LBI11315:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20630              		.loc 14 350 7 is_stmt 1 view .LVU4218
 20631              	.LBB11316:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 20632              		.loc 14 353 2 is_stmt 0 view .LVU4219
 20633 0008 20B1     		cbz	r0, .L646
 20634              	.LVL923:
 20635              	.LBB11317:
 20636              	.LBI11317:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20637              		.loc 6 491 7 is_stmt 1 view .LVU4220
 20638              	.LBB11318:
 20639              	.LBB11319:
 20640              	.LBI11319:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20641              		.loc 7 120 7 view .LVU4221
 20642              	.LBE11319:
 20643              	.LBE11318:
 20644              	.LBE11317:
 20645              	.LBE11316:
 20646              	.LBE11315:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20647              		.loc 14 336 35 is_stmt 0 view .LVU4222
 20648 000a D4F8E818 		ldr	r1, [r4, #2280]
 20649              	.LBB11325:
 20650              	.LBB11324:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 828


 20651              	.LBB11323:
 20652              	.LBB11322:
 20653              	.LBB11321:
 20654              	.LBB11320:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20655              		.loc 7 133 19 view .LVU4223
 20656 000e 091A     		subs	r1, r1, r0
 20657 0010 FFF7FEFF 		bl	_ZdlPvj
 20658              	.LVL924:
 20659              	.L646:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20660              		.loc 7 133 19 view .LVU4224
 20661              	.LBE11320:
 20662              	.LBE11321:
 20663              	.LBE11322:
 20664              	.LBE11323:
 20665              	.LBE11324:
 20666              	.LBE11325:
 20667              	.LBB11326:
 20668              	.LBI11326:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 20669              		.loc 14 128 14 is_stmt 1 view .LVU4225
 20670              	.LBB11327:
 20671              	.LBI11327:
 20672              		.loc 9 162 7 view .LVU4226
 20673              	.LBB11328:
 20674              	.LBI11328:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20675              		.loc 7 89 7 view .LVU4227
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20676              		.loc 7 89 7 is_stmt 0 view .LVU4228
 20677              	.LBE11328:
 20678              	.LBE11327:
 20679              	.LBE11326:
 20680              	.LBE11314:
 20681              	.LBE11313:
 20682              	.LBE11310:
 20683              	.LBE11309:
 20684              	.LBB11329:
 20685              	.LBI11329:
   7:StrumSynth.h  **** {
 20686              		.loc 13 7 7 is_stmt 1 view .LVU4229
 20687              	.LBB11330:
 20688              	.LBI11330:
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 20689              		.loc 44 24 5 view .LVU4230
 20690              		.loc 44 24 5 is_stmt 0 view .LVU4231
 20691              	.LBE11330:
 20692              	.LBB11331:
 20693              	.LBI11331:
  30:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 20694              		.loc 45 30 5 is_stmt 1 view .LVU4232
 20695              		.loc 45 30 5 is_stmt 0 view .LVU4233
 20696              	.LBE11331:
 20697              	.LBB11332:
 20698              	.LBI11332:
 20699              		.loc 45 30 5 is_stmt 1 view .LVU4234
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 829


 20700              		.loc 45 30 5 is_stmt 0 view .LVU4235
 20701              	.LBE11332:
 20702              	.LBB11333:
 20703              	.LBI11333:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20704              		.loc 14 678 7 is_stmt 1 view .LVU4236
 20705              	.LBB11334:
 20706              	.LBI11334:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20707              		.loc 14 276 7 view .LVU4237
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20708              		.loc 14 276 7 is_stmt 0 view .LVU4238
 20709              	.LBE11334:
 20710              	.LBB11335:
 20711              	.LBI11335:
 20712              		.loc 6 735 5 is_stmt 1 view .LVU4239
 20713              	.LBB11336:
 20714              	.LBI11336:
 20715              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 830


  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 831


  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 832


 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux<true>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         static void
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 20716              		.loc 46 171 5 view .LVU4240
 20717              	.LBB11337:
 20718              	.LBB11338:
 20719              	.LBI11338:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 20720              		.loc 46 149 2 view .LVU4241
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 20721              		.loc 46 149 2 is_stmt 0 view .LVU4242
 20722              	.LBE11338:
 20723              	.LBE11337:
 20724              	.LBE11336:
 20725              	.LBE11335:
 20726              	.LBE11333:
 20727              	.LBE11329:
 20728              	.LBE11308:
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 20729              		.loc 46 151 19 is_stmt 1 view .LVU4243
 20730              	.LBB11463:
 20731              	.LBB11356:
 20732              	.LBB11355:
 20733              	.LBB11339:
 20734              	.LBI11339:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20735              		.loc 14 333 7 view .LVU4244
 20736              	.LBB11340:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 20737              		.loc 14 335 15 is_stmt 0 view .LVU4245
 20738 0014 D4F8F407 		ldr	r0, [r4, #2036]
 20739              	.LVL925:
 20740              	.LBB11341:
 20741              	.LBI11341:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20742              		.loc 14 350 7 is_stmt 1 view .LVU4246
 20743              	.LBB11342:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 20744              		.loc 14 353 2 is_stmt 0 view .LVU4247
 20745 0018 20B1     		cbz	r0, .L647
 20746              	.LVL926:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 833


 20747              	.LBB11343:
 20748              	.LBI11343:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20749              		.loc 6 491 7 is_stmt 1 view .LVU4248
 20750              	.LBB11344:
 20751              	.LBB11345:
 20752              	.LBI11345:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20753              		.loc 7 120 7 view .LVU4249
 20754              	.LBE11345:
 20755              	.LBE11344:
 20756              	.LBE11343:
 20757              	.LBE11342:
 20758              	.LBE11341:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20759              		.loc 14 336 35 is_stmt 0 view .LVU4250
 20760 001a D4F8FC17 		ldr	r1, [r4, #2044]
 20761              	.LBB11351:
 20762              	.LBB11350:
 20763              	.LBB11349:
 20764              	.LBB11348:
 20765              	.LBB11347:
 20766              	.LBB11346:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20767              		.loc 7 133 19 view .LVU4251
 20768 001e 091A     		subs	r1, r1, r0
 20769 0020 FFF7FEFF 		bl	_ZdlPvj
 20770              	.LVL927:
 20771              	.L647:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20772              		.loc 7 133 19 view .LVU4252
 20773              	.LBE11346:
 20774              	.LBE11347:
 20775              	.LBE11348:
 20776              	.LBE11349:
 20777              	.LBE11350:
 20778              	.LBE11351:
 20779              	.LBB11352:
 20780              	.LBI11352:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 20781              		.loc 14 128 14 is_stmt 1 view .LVU4253
 20782              	.LBB11353:
 20783              	.LBI11353:
 20784              		.loc 9 162 7 view .LVU4254
 20785              	.LBB11354:
 20786              	.LBI11354:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20787              		.loc 7 89 7 view .LVU4255
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20788              		.loc 7 89 7 is_stmt 0 view .LVU4256
 20789              	.LBE11354:
 20790              	.LBE11353:
 20791              	.LBE11352:
 20792              	.LBE11340:
 20793              	.LBE11339:
 20794              	.LBE11355:
 20795              	.LBE11356:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 834


 20796              	.LBB11357:
 20797              	.LBI11357:
   9:ChordSynth.h  **** {
 20798              		.loc 43 9 7 is_stmt 1 view .LVU4257
 20799              	.LBB11358:
 20800              	.LBI11358:
 20801              		.loc 45 30 5 view .LVU4258
 20802              		.loc 45 30 5 is_stmt 0 view .LVU4259
 20803              	.LBE11358:
 20804              	.LBB11359:
 20805              	.LBI11359:
 20806              		.loc 45 30 5 is_stmt 1 view .LVU4260
 20807              		.loc 45 30 5 is_stmt 0 view .LVU4261
 20808              	.LBE11359:
 20809              	.LBB11360:
 20810              	.LBI11360:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20811              		.loc 14 678 7 is_stmt 1 view .LVU4262
 20812              	.LBB11361:
 20813              	.LBI11361:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20814              		.loc 14 276 7 view .LVU4263
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20815              		.loc 14 276 7 is_stmt 0 view .LVU4264
 20816              	.LBE11361:
 20817              	.LBB11362:
 20818              	.LBI11362:
 20819              		.loc 6 735 5 is_stmt 1 view .LVU4265
 20820              	.LBB11363:
 20821              	.LBI11363:
 20822              		.loc 46 171 5 view .LVU4266
 20823              	.LBB11364:
 20824              	.LBB11365:
 20825              	.LBI11365:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 20826              		.loc 46 149 2 view .LVU4267
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 20827              		.loc 46 149 2 is_stmt 0 view .LVU4268
 20828              	.LBE11365:
 20829              	.LBE11364:
 20830              	.LBE11363:
 20831              	.LBE11362:
 20832              	.LBE11360:
 20833              	.LBE11357:
 20834              	.LBE11463:
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 20835              		.loc 46 151 19 is_stmt 1 view .LVU4269
 20836              	.LBB11464:
 20837              	.LBB11384:
 20838              	.LBB11382:
 20839              	.LBB11366:
 20840              	.LBI11366:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20841              		.loc 14 333 7 view .LVU4270
 20842              	.LBB11367:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 20843              		.loc 14 335 15 is_stmt 0 view .LVU4271
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 835


 20844 0024 D4F84C07 		ldr	r0, [r4, #1868]
 20845              	.LVL928:
 20846              	.LBB11368:
 20847              	.LBI11368:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20848              		.loc 14 350 7 is_stmt 1 view .LVU4272
 20849              	.LBB11369:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 20850              		.loc 14 353 2 is_stmt 0 view .LVU4273
 20851 0028 20B1     		cbz	r0, .L648
 20852              	.LVL929:
 20853              	.LBB11370:
 20854              	.LBI11370:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20855              		.loc 6 491 7 is_stmt 1 view .LVU4274
 20856              	.LBB11371:
 20857              	.LBB11372:
 20858              	.LBI11372:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20859              		.loc 7 120 7 view .LVU4275
 20860              	.LBE11372:
 20861              	.LBE11371:
 20862              	.LBE11370:
 20863              	.LBE11369:
 20864              	.LBE11368:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20865              		.loc 14 336 35 is_stmt 0 view .LVU4276
 20866 002a D4F85417 		ldr	r1, [r4, #1876]
 20867              	.LBB11378:
 20868              	.LBB11377:
 20869              	.LBB11376:
 20870              	.LBB11375:
 20871              	.LBB11374:
 20872              	.LBB11373:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20873              		.loc 7 133 19 view .LVU4277
 20874 002e 091A     		subs	r1, r1, r0
 20875 0030 FFF7FEFF 		bl	_ZdlPvj
 20876              	.LVL930:
 20877              	.L648:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 20878              		.loc 7 133 19 view .LVU4278
 20879              	.LBE11373:
 20880              	.LBE11374:
 20881              	.LBE11375:
 20882              	.LBE11376:
 20883              	.LBE11377:
 20884              	.LBE11378:
 20885              	.LBB11379:
 20886              	.LBI11379:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 20887              		.loc 14 128 14 is_stmt 1 view .LVU4279
 20888              	.LBB11380:
 20889              	.LBI11380:
 20890              		.loc 9 162 7 view .LVU4280
 20891              	.LBB11381:
 20892              	.LBI11381:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 836


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20893              		.loc 7 89 7 view .LVU4281
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20894              		.loc 7 89 7 is_stmt 0 view .LVU4282
 20895              	.LBE11381:
 20896              	.LBE11380:
 20897              	.LBE11379:
 20898              	.LBE11367:
 20899              	.LBE11366:
 20900              	.LBE11382:
 20901              	.LBB11383:
 20902              	.LBI11383:
 20903              		.loc 44 24 5 is_stmt 1 view .LVU4283
 20904              		.loc 44 24 5 is_stmt 0 view .LVU4284
 20905              	.LBE11383:
 20906              	.LBE11384:
 20907              	.LBB11385:
 20908              	.LBI11385:
 20909              		.file 47 "DrumSynth.h"
   1:DrumSynth.h   **** #pragma once
   2:DrumSynth.h   **** #include "daisysp.h"
   3:DrumSynth.h   **** using namespace daisysp;
   4:DrumSynth.h   **** 
   5:DrumSynth.h   **** class DrumSynth
 20910              		.loc 47 5 7 is_stmt 1 view .LVU4285
 20911              	.LBB11386:
 20912              	.LBI11386:
 20913              		.loc 45 30 5 view .LVU4286
 20914              		.loc 45 30 5 is_stmt 0 view .LVU4287
 20915              	.LBE11386:
 20916              	.LBB11387:
 20917              	.LBI11387:
 20918              		.loc 45 30 5 is_stmt 1 view .LVU4288
 20919              		.loc 45 30 5 is_stmt 0 view .LVU4289
 20920              	.LBE11387:
 20921              	.LBB11388:
 20922              	.LBI11388:
 20923              		.loc 45 30 5 is_stmt 1 view .LVU4290
 20924              		.loc 45 30 5 is_stmt 0 view .LVU4291
 20925              	.LBE11388:
 20926              	.LBB11389:
 20927              	.LBI11389:
 20928              		.loc 45 30 5 is_stmt 1 view .LVU4292
 20929              		.loc 45 30 5 is_stmt 0 view .LVU4293
 20930              	.LBE11389:
 20931              	.LBB11390:
 20932              	.LBI11390:
 20933              		.loc 44 24 5 is_stmt 1 view .LVU4294
 20934              		.loc 44 24 5 is_stmt 0 view .LVU4295
 20935              	.LBE11390:
 20936              	.LBB11391:
 20937              	.LBI11391:
 20938              		.file 48 "../../DaisySP//Source/Control/adenv.h"
   1:../../DaisySP//Source/Control/adenv.h **** /*
   2:../../DaisySP//Source/Control/adenv.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Control/adenv.h **** 
   4:../../DaisySP//Source/Control/adenv.h **** Use of this source code is governed by an MIT-style
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 837


   5:../../DaisySP//Source/Control/adenv.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Control/adenv.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Control/adenv.h **** */
   8:../../DaisySP//Source/Control/adenv.h **** 
   9:../../DaisySP//Source/Control/adenv.h **** #pragma once
  10:../../DaisySP//Source/Control/adenv.h **** #ifndef ADENV_H
  11:../../DaisySP//Source/Control/adenv.h **** #define ADENV_H
  12:../../DaisySP//Source/Control/adenv.h **** #include <stdint.h>
  13:../../DaisySP//Source/Control/adenv.h **** #ifdef __cplusplus
  14:../../DaisySP//Source/Control/adenv.h **** 
  15:../../DaisySP//Source/Control/adenv.h **** namespace daisysp
  16:../../DaisySP//Source/Control/adenv.h **** {
  17:../../DaisySP//Source/Control/adenv.h **** /** Distinct stages that the phase of the envelope can be located in.
  18:../../DaisySP//Source/Control/adenv.h ****     @see AdEnv
  19:../../DaisySP//Source/Control/adenv.h **** */
  20:../../DaisySP//Source/Control/adenv.h **** enum AdEnvSegment
  21:../../DaisySP//Source/Control/adenv.h **** {
  22:../../DaisySP//Source/Control/adenv.h ****     /** located at phase location 0, and not currently running */
  23:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_IDLE,
  24:../../DaisySP//Source/Control/adenv.h ****     /** First segment of envelope where phase moves from MIN value to MAX value */
  25:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_ATTACK,
  26:../../DaisySP//Source/Control/adenv.h ****     /** Second segment of envelope where phase moves from MAX to MIN value */
  27:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_DECAY,
  28:../../DaisySP//Source/Control/adenv.h ****     /** The final segment of the envelope (currently decay) */
  29:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_LAST,
  30:../../DaisySP//Source/Control/adenv.h **** };
  31:../../DaisySP//Source/Control/adenv.h **** 
  32:../../DaisySP//Source/Control/adenv.h **** /** Trigger-able envelope with adjustable min/max, and independent per-segment time control.
  33:../../DaisySP//Source/Control/adenv.h **** 
  34:../../DaisySP//Source/Control/adenv.h ****     \author shensley
  35:../../DaisySP//Source/Control/adenv.h ****     \todo - Add Cycling
  36:../../DaisySP//Source/Control/adenv.h ****     \todo - Implement Curve (its only linear for now).
  37:../../DaisySP//Source/Control/adenv.h ****     \todo - Maybe make this an ADsr_ that has AD/AR/Asr_ modes.
  38:../../DaisySP//Source/Control/adenv.h ****  */
  39:../../DaisySP//Source/Control/adenv.h **** class AdEnv
  40:../../DaisySP//Source/Control/adenv.h **** {
  41:../../DaisySP//Source/Control/adenv.h ****   public:
  42:../../DaisySP//Source/Control/adenv.h ****     AdEnv() {}
  43:../../DaisySP//Source/Control/adenv.h ****     ~AdEnv() {}
 20939              		.loc 48 43 5 is_stmt 1 view .LVU4296
 20940              		.loc 48 43 5 is_stmt 0 view .LVU4297
 20941              	.LBE11391:
 20942              	.LBB11392:
 20943              	.LBI11392:
 20944              		.loc 48 43 5 is_stmt 1 view .LVU4298
 20945              		.loc 48 43 5 is_stmt 0 view .LVU4299
 20946              	.LBE11392:
 20947              	.LBB11393:
 20948              	.LBI11393:
 20949              		.loc 44 24 5 is_stmt 1 view .LVU4300
 20950              		.loc 44 24 5 is_stmt 0 view .LVU4301
 20951              	.LBE11393:
 20952              	.LBE11385:
  72:Brizachord.cpp **** Brizachord::~Brizachord(){
 20953              		.loc 1 72 25 view .LVU4302
 20954 0034 04F58460 		add	r0, r4, #1056
 20955 0038 FFF7FEFF 		bl	_ZN5TrillD1Ev
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 838


 20956              	.LVL931:
 20957              	.LBB11394:
 20958              	.LBI11394:
   5:GPIOState.h   ****     // Chord extension
 20959              		.loc 10 5 8 is_stmt 1 view .LVU4303
 20960              	.LBB11395:
 20961              	.LBI11395:
  34:../../libDaisy//src/hid/switch.h **** 
 20962              		.loc 11 34 5 view .LVU4304
  34:../../libDaisy//src/hid/switch.h **** 
 20963              		.loc 11 34 5 is_stmt 0 view .LVU4305
 20964              	.LBE11395:
 20965              	.LBB11396:
 20966              	.LBI11396:
  34:../../libDaisy//src/hid/switch.h **** 
 20967              		.loc 11 34 5 is_stmt 1 view .LVU4306
  34:../../libDaisy//src/hid/switch.h **** 
 20968              		.loc 11 34 5 is_stmt 0 view .LVU4307
 20969              	.LBE11396:
 20970              	.LBB11397:
 20971              	.LBI11397:
  34:../../libDaisy//src/hid/switch.h **** 
 20972              		.loc 11 34 5 is_stmt 1 view .LVU4308
  34:../../libDaisy//src/hid/switch.h **** 
 20973              		.loc 11 34 5 is_stmt 0 view .LVU4309
 20974              	.LBE11397:
 20975              	.LBB11398:
 20976              	.LBI11398:
  34:../../libDaisy//src/hid/switch.h **** 
 20977              		.loc 11 34 5 is_stmt 1 view .LVU4310
  34:../../libDaisy//src/hid/switch.h **** 
 20978              		.loc 11 34 5 is_stmt 0 view .LVU4311
 20979              	.LBE11398:
 20980              	.LBB11399:
 20981              	.LBI11399:
  34:../../libDaisy//src/hid/switch.h **** 
 20982              		.loc 11 34 5 is_stmt 1 view .LVU4312
  34:../../libDaisy//src/hid/switch.h **** 
 20983              		.loc 11 34 5 is_stmt 0 view .LVU4313
 20984              	.LBE11399:
 20985              	.LBB11400:
 20986              	.LBI11400:
  34:../../libDaisy//src/hid/switch.h **** 
 20987              		.loc 11 34 5 is_stmt 1 view .LVU4314
  34:../../libDaisy//src/hid/switch.h **** 
 20988              		.loc 11 34 5 is_stmt 0 view .LVU4315
 20989              	.LBE11400:
 20990              	.LBB11401:
 20991              	.LBI11401:
  34:../../libDaisy//src/hid/switch.h **** 
 20992              		.loc 11 34 5 is_stmt 1 view .LVU4316
  34:../../libDaisy//src/hid/switch.h **** 
 20993              		.loc 11 34 5 is_stmt 0 view .LVU4317
 20994              	.LBE11401:
 20995              	.LBB11402:
 20996              	.LBI11402:
  34:../../libDaisy//src/hid/switch.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 839


 20997              		.loc 11 34 5 is_stmt 1 view .LVU4318
  34:../../libDaisy//src/hid/switch.h **** 
 20998              		.loc 11 34 5 is_stmt 0 view .LVU4319
 20999              	.LBE11402:
 21000              	.LBB11403:
 21001              	.LBI11403:
  34:../../libDaisy//src/hid/switch.h **** 
 21002              		.loc 11 34 5 is_stmt 1 view .LVU4320
  34:../../libDaisy//src/hid/switch.h **** 
 21003              		.loc 11 34 5 is_stmt 0 view .LVU4321
 21004              	.LBE11403:
 21005              	.LBB11404:
 21006              	.LBI11404:
  34:../../libDaisy//src/hid/switch.h **** 
 21007              		.loc 11 34 5 is_stmt 1 view .LVU4322
  34:../../libDaisy//src/hid/switch.h **** 
 21008              		.loc 11 34 5 is_stmt 0 view .LVU4323
 21009              	.LBE11404:
 21010              	.LBB11405:
 21011              	.LBI11405:
  34:../../libDaisy//src/hid/switch.h **** 
 21012              		.loc 11 34 5 is_stmt 1 view .LVU4324
  34:../../libDaisy//src/hid/switch.h **** 
 21013              		.loc 11 34 5 is_stmt 0 view .LVU4325
 21014              	.LBE11405:
 21015              	.LBB11406:
 21016              	.LBI11406:
  34:../../libDaisy//src/hid/switch.h **** 
 21017              		.loc 11 34 5 is_stmt 1 view .LVU4326
  34:../../libDaisy//src/hid/switch.h **** 
 21018              		.loc 11 34 5 is_stmt 0 view .LVU4327
 21019              	.LBE11406:
 21020              	.LBB11407:
 21021              	.LBI11407:
  34:../../libDaisy//src/hid/switch.h **** 
 21022              		.loc 11 34 5 is_stmt 1 view .LVU4328
  34:../../libDaisy//src/hid/switch.h **** 
 21023              		.loc 11 34 5 is_stmt 0 view .LVU4329
 21024              	.LBE11407:
 21025              	.LBB11408:
 21026              	.LBI11408:
  34:../../libDaisy//src/hid/switch.h **** 
 21027              		.loc 11 34 5 is_stmt 1 view .LVU4330
  34:../../libDaisy//src/hid/switch.h **** 
 21028              		.loc 11 34 5 is_stmt 0 view .LVU4331
 21029              	.LBE11408:
 21030              	.LBB11409:
 21031              	.LBI11409:
  34:../../libDaisy//src/hid/switch.h **** 
 21032              		.loc 11 34 5 is_stmt 1 view .LVU4332
  34:../../libDaisy//src/hid/switch.h **** 
 21033              		.loc 11 34 5 is_stmt 0 view .LVU4333
 21034              	.LBE11409:
 21035              	.LBB11410:
 21036              	.LBI11410:
  34:../../libDaisy//src/hid/switch.h **** 
 21037              		.loc 11 34 5 is_stmt 1 view .LVU4334
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 840


  34:../../libDaisy//src/hid/switch.h **** 
 21038              		.loc 11 34 5 is_stmt 0 view .LVU4335
 21039              	.LBE11410:
 21040              	.LBB11411:
 21041              	.LBI11411:
  34:../../libDaisy//src/hid/switch.h **** 
 21042              		.loc 11 34 5 is_stmt 1 view .LVU4336
  34:../../libDaisy//src/hid/switch.h **** 
 21043              		.loc 11 34 5 is_stmt 0 view .LVU4337
 21044              	.LBE11411:
 21045              	.LBB11412:
 21046              	.LBI11412:
  34:../../libDaisy//src/hid/switch.h **** 
 21047              		.loc 11 34 5 is_stmt 1 view .LVU4338
  34:../../libDaisy//src/hid/switch.h **** 
 21048              		.loc 11 34 5 is_stmt 0 view .LVU4339
 21049              	.LBE11412:
 21050              	.LBB11413:
 21051              	.LBI11413:
  34:../../libDaisy//src/hid/switch.h **** 
 21052              		.loc 11 34 5 is_stmt 1 view .LVU4340
  34:../../libDaisy//src/hid/switch.h **** 
 21053              		.loc 11 34 5 is_stmt 0 view .LVU4341
 21054              	.LBE11413:
 21055              	.LBB11414:
 21056              	.LBI11414:
  34:../../libDaisy//src/hid/switch.h **** 
 21057              		.loc 11 34 5 is_stmt 1 view .LVU4342
  34:../../libDaisy//src/hid/switch.h **** 
 21058              		.loc 11 34 5 is_stmt 0 view .LVU4343
 21059              	.LBE11414:
 21060              	.LBB11415:
 21061              	.LBI11415:
  34:../../libDaisy//src/hid/switch.h **** 
 21062              		.loc 11 34 5 is_stmt 1 view .LVU4344
  34:../../libDaisy//src/hid/switch.h **** 
 21063              		.loc 11 34 5 is_stmt 0 view .LVU4345
 21064              	.LBE11415:
 21065              	.LBB11416:
 21066              	.LBI11416:
  34:../../libDaisy//src/hid/switch.h **** 
 21067              		.loc 11 34 5 is_stmt 1 view .LVU4346
  34:../../libDaisy//src/hid/switch.h **** 
 21068              		.loc 11 34 5 is_stmt 0 view .LVU4347
 21069              	.LBE11416:
 21070              	.LBB11417:
 21071              	.LBI11417:
  34:../../libDaisy//src/hid/switch.h **** 
 21072              		.loc 11 34 5 is_stmt 1 view .LVU4348
  34:../../libDaisy//src/hid/switch.h **** 
 21073              		.loc 11 34 5 is_stmt 0 view .LVU4349
 21074              	.LBE11417:
 21075              	.LBB11418:
 21076              	.LBI11418:
  34:../../libDaisy//src/hid/switch.h **** 
 21077              		.loc 11 34 5 is_stmt 1 view .LVU4350
  34:../../libDaisy//src/hid/switch.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 841


 21078              		.loc 11 34 5 is_stmt 0 view .LVU4351
 21079              	.LBE11418:
 21080              	.LBE11394:
 21081              	.LBB11419:
 21082              	.LBI11419:
 21083              		.loc 31 31 8 is_stmt 1 view .LVU4352
 21084              	.LBB11420:
 21085              	.LBI11420:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21086              		.loc 5 657 7 view .LVU4353
 21087              	.LBB11421:
 21088              	.LBI11421:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21089              		.loc 5 229 7 view .LVU4354
 21090              	.LBB11422:
 21091              	.LBB11423:
 21092              	.LBI11423:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 21093              		.loc 5 221 7 view .LVU4355
 21094              	.LBB11424:
 21095              	.LBI11424:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21096              		.loc 5 186 7 view .LVU4356
 21097              	.LBB11425:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21098              		.loc 5 187 28 is_stmt 0 view .LVU4357
 21099 003c D4F8A400 		ldr	r0, [r4, #164]
 21100              	.LVL932:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21101              		.loc 5 187 28 view .LVU4358
 21102              	.LBE11425:
 21103              	.LBE11424:
 21104              	.LBB11426:
 21105              	.LBI11426:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21106              		.loc 5 200 7 is_stmt 1 view .LVU4359
 21107              	.LBB11427:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21108              		.loc 5 203 57 is_stmt 0 view .LVU4360
 21109 0040 04F1AC03 		add	r3, r4, #172
 21110              	.LBE11427:
 21111              	.LBE11426:
 21112              	.LBE11423:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21113              		.loc 5 231 2 view .LVU4361
 21114 0044 9842     		cmp	r0, r3
 21115 0046 04D0     		beq	.L649
 21116              	.LVL933:
 21117              	.LBB11428:
 21118              	.LBI11428:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21119              		.loc 5 236 7 is_stmt 1 view .LVU4362
 21120              	.LBB11429:
 21121              	.LBB11430:
 21122              	.LBI11430:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21123              		.loc 6 491 7 view .LVU4363
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 842


 21124              	.LBB11431:
 21125              	.LBI11431:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 21126              		.loc 7 120 7 view .LVU4364
 21127              	.LBE11431:
 21128              	.LBE11430:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21129              		.loc 5 237 34 is_stmt 0 view .LVU4365
 21130 0048 D4F8AC10 		ldr	r1, [r4, #172]
 21131              	.LBB11434:
 21132              	.LBB11433:
 21133              	.LBB11432:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21134              		.loc 7 133 19 view .LVU4366
 21135 004c 0131     		adds	r1, r1, #1
 21136              	.LVL934:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21137              		.loc 7 133 19 view .LVU4367
 21138 004e FFF7FEFF 		bl	_ZdlPvj
 21139              	.LVL935:
 21140              	.L649:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21141              		.loc 7 133 19 view .LVU4368
 21142              	.LBE11432:
 21143              	.LBE11433:
 21144              	.LBE11434:
 21145              	.LBE11429:
 21146              	.LBE11428:
 21147              	.LBE11422:
 21148              	.LBE11421:
 21149              	.LBB11435:
 21150              	.LBI11435:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21151              		.loc 5 150 14 is_stmt 1 view .LVU4369
 21152              	.LBB11436:
 21153              	.LBI11436:
 21154              		.loc 9 162 7 view .LVU4370
 21155              	.LBB11437:
 21156              	.LBI11437:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21157              		.loc 7 89 7 view .LVU4371
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21158              		.loc 7 89 7 is_stmt 0 view .LVU4372
 21159              	.LBE11437:
 21160              	.LBE11436:
 21161              	.LBE11435:
 21162              	.LBE11420:
 21163              	.LBB11438:
 21164              	.LBI11438:
  25:InstrumentState.h ****     std::string root;
 21165              		.loc 31 25 8 is_stmt 1 view .LVU4373
 21166              	.LBB11439:
 21167              	.LBI11439:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21168              		.loc 5 657 7 view .LVU4374
 21169              	.LBB11440:
 21170              	.LBI11440:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 843


 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21171              		.loc 5 229 7 view .LVU4375
 21172              	.LBB11441:
 21173              	.LBB11442:
 21174              	.LBI11442:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 21175              		.loc 5 221 7 view .LVU4376
 21176              	.LBB11443:
 21177              	.LBI11443:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21178              		.loc 5 186 7 view .LVU4377
 21179              	.LBB11444:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21180              		.loc 5 187 28 is_stmt 0 view .LVU4378
 21181 0052 D4F88400 		ldr	r0, [r4, #132]
 21182              	.LVL936:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21183              		.loc 5 187 28 view .LVU4379
 21184              	.LBE11444:
 21185              	.LBE11443:
 21186              	.LBB11445:
 21187              	.LBI11445:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21188              		.loc 5 200 7 is_stmt 1 view .LVU4380
 21189              	.LBB11446:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21190              		.loc 5 203 57 is_stmt 0 view .LVU4381
 21191 0056 04F18C03 		add	r3, r4, #140
 21192              	.LBE11446:
 21193              	.LBE11445:
 21194              	.LBE11442:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21195              		.loc 5 231 2 view .LVU4382
 21196 005a 9842     		cmp	r0, r3
 21197 005c 04D0     		beq	.L650
 21198              	.LVL937:
 21199              	.LBB11447:
 21200              	.LBI11447:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21201              		.loc 5 236 7 is_stmt 1 view .LVU4383
 21202              	.LBB11448:
 21203              	.LBB11449:
 21204              	.LBI11449:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21205              		.loc 6 491 7 view .LVU4384
 21206              	.LBB11450:
 21207              	.LBI11450:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 21208              		.loc 7 120 7 view .LVU4385
 21209              	.LBE11450:
 21210              	.LBE11449:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21211              		.loc 5 237 34 is_stmt 0 view .LVU4386
 21212 005e D4F88C10 		ldr	r1, [r4, #140]
 21213              	.LBB11453:
 21214              	.LBB11452:
 21215              	.LBB11451:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 844


 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21216              		.loc 7 133 19 view .LVU4387
 21217 0062 0131     		adds	r1, r1, #1
 21218              	.LVL938:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21219              		.loc 7 133 19 view .LVU4388
 21220 0064 FFF7FEFF 		bl	_ZdlPvj
 21221              	.LVL939:
 21222              	.L650:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 21223              		.loc 7 133 19 view .LVU4389
 21224              	.LBE11451:
 21225              	.LBE11452:
 21226              	.LBE11453:
 21227              	.LBE11448:
 21228              	.LBE11447:
 21229              	.LBE11441:
 21230              	.LBE11440:
 21231              	.LBB11454:
 21232              	.LBI11454:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21233              		.loc 5 150 14 is_stmt 1 view .LVU4390
 21234              	.LBB11455:
 21235              	.LBI11455:
 21236              		.loc 9 162 7 view .LVU4391
 21237              	.LBB11456:
 21238              	.LBI11456:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21239              		.loc 7 89 7 view .LVU4392
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21240              		.loc 7 89 7 is_stmt 0 view .LVU4393
 21241              	.LBE11456:
 21242              	.LBE11455:
 21243              	.LBE11454:
 21244              	.LBE11439:
 21245              	.LBE11438:
 21246              	.LBE11419:
 21247              	.LBB11457:
 21248              	.LBI11457:
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 21249              		.loc 32 22 5 is_stmt 1 view .LVU4394
 21250              	.LBB11458:
 21251              	.LBI11458:
  21:../../libDaisy//src/dev/codec_ak4556.h ****     ~Ak4556() {}
 21252              		.loc 41 21 5 view .LVU4395
 21253              		.loc 41 21 5 is_stmt 0 view .LVU4396
 21254              	.LBE11458:
 21255              	.LBB11459:
 21256              	.LBI11459:
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 21257              		.loc 40 97 5 is_stmt 1 view .LVU4397
 21258              		.loc 40 97 5 is_stmt 0 view .LVU4398
 21259              	.LBE11459:
 21260              	.LBB11460:
 21261              	.LBI11460:
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 845


 21262              		.loc 38 42 5 is_stmt 1 view .LVU4399
 21263              		.loc 38 42 5 is_stmt 0 view .LVU4400
 21264              	.LBE11460:
 21265              	.LBB11461:
 21266              	.LBI11461:
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 21267              		.loc 36 110 5 is_stmt 1 view .LVU4401
 21268              		.loc 36 110 5 is_stmt 0 view .LVU4402
 21269              	.LBE11461:
 21270              	.LBB11462:
 21271              	.LBI11462:
  88:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 21272              		.loc 35 88 5 is_stmt 1 view .LVU4403
 21273              		.loc 35 88 5 is_stmt 0 view .LVU4404
 21274              	.LBE11462:
 21275              	.LBE11457:
 21276              	.LBE11464:
  74:Brizachord.cpp **** }
 21277              		.loc 1 74 1 view .LVU4405
 21278 0068 2046     		mov	r0, r4
 21279 006a 10BD     		pop	{r4, pc}
  74:Brizachord.cpp **** }
 21280              		.loc 1 74 1 view .LVU4406
 21281              		.cfi_endproc
 21282              	.LFE5608:
 21284              		.global	_ZN10BrizachordD1Ev
 21285              		.thumb_set _ZN10BrizachordD1Ev,_ZN10BrizachordD2Ev
 21286              		.global	_ZN10Brizachord8instanceE
 21287              		.weak	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octa
 21288              		.section	.bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fou
 21289              		.align	2
 21292              	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx
 21293 0000 00000000 		.space	4
 21294              		.weak	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octave
 21295              		.section	.bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourt
 21296              		.align	2
 21299              	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
 21300 0000 00000000 		.space	28
 21300      00000000 
 21300      00000000 
 21300      00000000 
 21300      00000000 
 21301              		.section	.bss._ZN10Brizachord8instanceE,"aw",%nobits
 21302              		.align	2
 21303              		.set	.LANCHOR0,. + 0
 21306              	_ZN10Brizachord8instanceE:
 21307 0000 00000000 		.space	4
 21308              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 21309              		.align	2
 21310              		.set	.LANCHOR1,. + 0
 21313              	_ZN5daisy4seedL2D0E:
 21314 0000 01       		.byte	1
 21315 0001 0C       		.byte	12
 21316              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 21317              		.align	2
 21318              		.set	.LANCHOR2,. + 0
 21321              	_ZN5daisy4seedL2D1E:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 846


 21322 0000 02       		.byte	2
 21323 0001 0B       		.byte	11
 21324              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 21325              		.align	2
 21326              		.set	.LANCHOR3,. + 0
 21329              	_ZN5daisy4seedL2D2E:
 21330 0000 02       		.byte	2
 21331 0001 0A       		.byte	10
 21332              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 21333              		.align	2
 21334              		.set	.LANCHOR4,. + 0
 21337              	_ZN5daisy4seedL2D3E:
 21338 0000 02       		.byte	2
 21339 0001 09       		.byte	9
 21340              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 21341              		.align	2
 21342              		.set	.LANCHOR5,. + 0
 21345              	_ZN5daisy4seedL2D4E:
 21346 0000 02       		.byte	2
 21347 0001 08       		.byte	8
 21348              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 21349              		.align	2
 21350              		.set	.LANCHOR6,. + 0
 21353              	_ZN5daisy4seedL2D5E:
 21354 0000 03       		.byte	3
 21355 0001 02       		.byte	2
 21356              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 21357              		.align	2
 21358              		.set	.LANCHOR7,. + 0
 21361              	_ZN5daisy4seedL2D6E:
 21362 0000 02       		.byte	2
 21363 0001 0C       		.byte	12
 21364              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 21365              		.align	2
 21366              		.set	.LANCHOR8,. + 0
 21369              	_ZN5daisy4seedL2D7E:
 21370 0000 06       		.byte	6
 21371 0001 0A       		.byte	10
 21372              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 21373              		.align	2
 21374              		.set	.LANCHOR9,. + 0
 21377              	_ZN5daisy4seedL2D8E:
 21378 0000 06       		.byte	6
 21379 0001 0B       		.byte	11
 21380              		.section	.rodata._ZN5daisy4seedL2D9E,"a"
 21381              		.align	2
 21382              		.set	.LANCHOR10,. + 0
 21385              	_ZN5daisy4seedL2D9E:
 21386 0000 01       		.byte	1
 21387 0001 04       		.byte	4
 21388              		.section	.rodata._ZN5daisy4seedL3D10E,"a"
 21389              		.align	2
 21390              		.set	.LANCHOR11,. + 0
 21393              	_ZN5daisy4seedL3D10E:
 21394 0000 01       		.byte	1
 21395 0001 05       		.byte	5
 21396              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 847


 21397              		.align	2
 21398              		.set	.LANCHOR12,. + 0
 21401              	_ZN5daisy4seedL3D13E:
 21402 0000 01       		.byte	1
 21403 0001 06       		.byte	6
 21404              		.section	.rodata._ZN5daisy4seedL3D19E,"a"
 21405              		.align	2
 21406              		.set	.LANCHOR16,. + 0
 21409              	_ZN5daisy4seedL3D19E:
 21410 0000 00       		.byte	0
 21411 0001 06       		.byte	6
 21412              		.section	.rodata._ZN5daisy4seedL3D20E,"a"
 21413              		.align	2
 21414              		.set	.LANCHOR15,. + 0
 21417              	_ZN5daisy4seedL3D20E:
 21418 0000 02       		.byte	2
 21419 0001 01       		.byte	1
 21420              		.section	.rodata._ZN5daisy4seedL3D21E,"a"
 21421              		.align	2
 21422              		.set	.LANCHOR14,. + 0
 21425              	_ZN5daisy4seedL3D21E:
 21426 0000 02       		.byte	2
 21427 0001 04       		.byte	4
 21428              		.section	.rodata._ZN5daisy4seedL3D22E,"a"
 21429              		.align	2
 21430              		.set	.LANCHOR13,. + 0
 21433              	_ZN5daisy4seedL3D22E:
 21434 0000 00       		.byte	0
 21435 0001 05       		.byte	5
 21436              		.section	.rodata._ZN5daisy4seedL3D23E,"a"
 21437              		.align	2
 21438              		.set	.LANCHOR22,. + 0
 21441              	_ZN5daisy4seedL3D23E:
 21442 0000 00       		.byte	0
 21443 0001 04       		.byte	4
 21444              		.section	.rodata._ZN5daisy4seedL3D24E,"a"
 21445              		.align	2
 21446              		.set	.LANCHOR23,. + 0
 21449              	_ZN5daisy4seedL3D24E:
 21450 0000 00       		.byte	0
 21451 0001 01       		.byte	1
 21452              		.section	.rodata._ZN5daisy4seedL3D25E,"a"
 21453              		.align	2
 21454              		.set	.LANCHOR24,. + 0
 21457              	_ZN5daisy4seedL3D25E:
 21458 0000 0000     		.space	2
 21459              		.section	.rodata._ZN5daisy4seedL3D26E,"a"
 21460              		.align	2
 21461              		.set	.LANCHOR17,. + 0
 21464              	_ZN5daisy4seedL3D26E:
 21465 0000 03       		.byte	3
 21466 0001 0B       		.byte	11
 21467              		.section	.rodata._ZN5daisy4seedL3D27E,"a"
 21468              		.align	2
 21469              		.set	.LANCHOR18,. + 0
 21472              	_ZN5daisy4seedL3D27E:
 21473 0000 06       		.byte	6
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 848


 21474 0001 09       		.byte	9
 21475              		.section	.rodata._ZN5daisy4seedL3D28E,"a"
 21476              		.align	2
 21477              		.set	.LANCHOR19,. + 0
 21480              	_ZN5daisy4seedL3D28E:
 21481 0000 00       		.byte	0
 21482 0001 02       		.byte	2
 21483              		.section	.rodata._ZN5daisy4seedL3D29E,"a"
 21484              		.align	2
 21485              		.set	.LANCHOR20,. + 0
 21488              	_ZN5daisy4seedL3D29E:
 21489 0000 01       		.byte	1
 21490 0001 0E       		.byte	14
 21491              		.section	.rodata._ZN5daisy4seedL3D30E,"a"
 21492              		.align	2
 21493              		.set	.LANCHOR21,. + 0
 21496              	_ZN5daisy4seedL3D30E:
 21497 0000 01       		.byte	1
 21498 0001 0F       		.byte	15
 21499              		.text
 21500              	.Letext0:
 21501              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 21502              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 21503              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 21504              		.file 52 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 21505              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 21506              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 21507              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 21508              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 21509              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 21510              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 21511              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 21512              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\utility"
 21513              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 21514              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 21515              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 21516              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 21517              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 21518              		.file 66 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 21519              		.file 67 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 21520              		.file 68 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 21521              		.file 69 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 21522              		.file 70 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stringfwd.
 21523              		.file 71 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 21524              		.file 72 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\uses_alloc
 21525              		.file 73 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 21526              		.file 74 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
 21527              		.file 75 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr_traits
 21528              		.file 76 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 21529              		.file 77 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hash_bytes
 21530              		.file 78 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 21531              		.file 79 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\aligned_buf
 21532              		.file 80 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 21533              		.file 81 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 21534              		.file 82 "<built-in>"
 21535              		.file 83 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 21536              		.file 84 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 849


 21537              		.file 85 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 21538              		.file 86 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 21539              		.file 87 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 21540              		.file 88 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 21541              		.file 89 "../../libDaisy//src/per/tim.h"
 21542              		.file 90 "../../libDaisy//src/util/wav_format.h"
 21543              		.file 91 "../../libDaisy//src/dev/sr_595.h"
 21544              		.file 92 "../../libDaisy//src/dev/max11300.h"
 21545              		.file 93 "../../libDaisy//src/dev/sdram.h"
 21546              		.file 94 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 21547              		.file 95 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 21548              		.file 96 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 21549              		.file 97 "../../DaisySP//Source/Control/adsr.h"
 21550              		.file 98 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 21551              		.file 99 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\time.h"
 21552              		.file 100 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 21553              		.file 101 "../../libDaisy//src/dev/trill/Trill.h"
 21554              		.file 102 "Brizachord.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 850


DEFINED SYMBOLS
                            *ABS*:00000000 Brizachord.cpp
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:17     .text._ZN10Brizachord14audio_callbackEPKPKfPPfj:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:26     .text._ZN10Brizachord14audio_callbackEPKPKfPPfj:00000000 _ZN10Brizachord14audio_callbackEPKPKfPPfj
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:185    .text._ZN10Brizachord14audio_callbackEPKPKfPPfj:00000098 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:193    .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:201    .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:201    .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED1Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:569    .text._ZN9GPIOState4initEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:577    .text._ZN9GPIOState4initEv:00000000 _ZN9GPIOState4initEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:875    .text._ZN9GPIOState4initEv:0000021c $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:903    .text._ZN10Brizachord21poll_pattern_controlsEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:911    .text._ZN10Brizachord21poll_pattern_controlsEv:00000000 _ZN10Brizachord21poll_pattern_controlsEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1040   .text._ZN10Brizachord14poll_trill_barEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1048   .text._ZN10Brizachord14poll_trill_barEv:00000000 _ZN10Brizachord14poll_trill_barEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1229   .text._ZN10Brizachord14poll_trill_barEv:00000088 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1235   .text._ZN10Brizachord9poll_potsEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1243   .text._ZN10Brizachord9poll_potsEv:00000000 _ZN10Brizachord9poll_potsEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1620   .text._ZN10Brizachord9poll_potsEv:00000164 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1632   .rodata._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1636   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:1644   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:00000000 _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2157   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:000000cc $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2165   .text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2173   .text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j:00000000 _ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2355   .rodata._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2359   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2367   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:4101   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:0000026c $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:2367   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC1IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:4130   .rodata._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:4134   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:4142   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000 _Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7615   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:000001dc $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21292  .bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 _ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21299  .bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 _ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7628   .text._Z13chord_to_midi5Chord:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7636   .text._Z13chord_to_midi5Chord:00000000 _Z13chord_to_midi5Chord
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7784   .text._Z13chord_to_midi5Chord:00000032 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7788   .text._Z13chord_to_midi5Chord:00000036 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7952   .text._Z13chord_to_midi5Chord:00000076 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:7956   .text._Z13chord_to_midi5Chord:0000007a $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:9167   .rodata._ZN10Brizachord15poll_chord_rootEv.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:9204   .text._ZN10Brizachord15poll_chord_rootEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:9212   .text._ZN10Brizachord15poll_chord_rootEv:00000000 _ZN10Brizachord15poll_chord_rootEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:12101  .text._ZN10Brizachord15poll_chord_rootEv:0000036c $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:12141  .text._ZN10Brizachord15poll_chord_rootEv:000003a0 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:12272  .text._ZN10Brizachord15poll_chord_rootEv:000003c0 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:12293  .text._ZN10Brizachord15poll_chord_qualEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:12301  .text._ZN10Brizachord15poll_chord_qualEv:00000000 _ZN10Brizachord15poll_chord_qualEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:14300  .text._ZN10Brizachord15poll_chord_qualEv:00000264 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:14322  .text._ZN10Brizachord14poll_chord_extEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:14330  .text._ZN10Brizachord14poll_chord_extEv:00000000 _ZN10Brizachord14poll_chord_extEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16386  .text._ZN10Brizachord14poll_chord_extEv:00000298 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16408  .text._ZN10Brizachord9main_loopEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16416  .text._ZN10Brizachord9main_loopEv:00000000 _ZN10Brizachord9main_loopEv
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16689  .text._ZN10BrizachordC2Ev:00000000 $t
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 851


C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16697  .text._ZN10BrizachordC2Ev:00000000 _ZN10BrizachordC2Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:19683  .text._ZN10BrizachordC2Ev:000003c0 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:19689  .text._ZN10BrizachordC2Ev:000003cc $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:20559  .text._ZN10BrizachordC2Ev:00000570 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:16697  .text._ZN10BrizachordC2Ev:00000000 _ZN10BrizachordC1Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:20581  .text._ZN10BrizachordD2Ev:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:20589  .text._ZN10BrizachordD2Ev:00000000 _ZN10BrizachordD2Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:20589  .text._ZN10BrizachordD2Ev:00000000 _ZN10BrizachordD1Ev
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21306  .bss._ZN10Brizachord8instanceE:00000000 _ZN10Brizachord8instanceE
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21289  .bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21296  .bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21302  .bss._ZN10Brizachord8instanceE:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21309  .rodata._ZN5daisy4seedL2D0E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21313  .rodata._ZN5daisy4seedL2D0E:00000000 _ZN5daisy4seedL2D0E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21317  .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21321  .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21325  .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21329  .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21333  .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21337  .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21341  .rodata._ZN5daisy4seedL2D4E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21345  .rodata._ZN5daisy4seedL2D4E:00000000 _ZN5daisy4seedL2D4E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21349  .rodata._ZN5daisy4seedL2D5E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21353  .rodata._ZN5daisy4seedL2D5E:00000000 _ZN5daisy4seedL2D5E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21357  .rodata._ZN5daisy4seedL2D6E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21361  .rodata._ZN5daisy4seedL2D6E:00000000 _ZN5daisy4seedL2D6E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21365  .rodata._ZN5daisy4seedL2D7E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21369  .rodata._ZN5daisy4seedL2D7E:00000000 _ZN5daisy4seedL2D7E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21373  .rodata._ZN5daisy4seedL2D8E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21377  .rodata._ZN5daisy4seedL2D8E:00000000 _ZN5daisy4seedL2D8E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21381  .rodata._ZN5daisy4seedL2D9E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21385  .rodata._ZN5daisy4seedL2D9E:00000000 _ZN5daisy4seedL2D9E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21389  .rodata._ZN5daisy4seedL3D10E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21393  .rodata._ZN5daisy4seedL3D10E:00000000 _ZN5daisy4seedL3D10E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21397  .rodata._ZN5daisy4seedL3D13E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21401  .rodata._ZN5daisy4seedL3D13E:00000000 _ZN5daisy4seedL3D13E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21405  .rodata._ZN5daisy4seedL3D19E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21409  .rodata._ZN5daisy4seedL3D19E:00000000 _ZN5daisy4seedL3D19E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21413  .rodata._ZN5daisy4seedL3D20E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21417  .rodata._ZN5daisy4seedL3D20E:00000000 _ZN5daisy4seedL3D20E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21421  .rodata._ZN5daisy4seedL3D21E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21425  .rodata._ZN5daisy4seedL3D21E:00000000 _ZN5daisy4seedL3D21E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21429  .rodata._ZN5daisy4seedL3D22E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21433  .rodata._ZN5daisy4seedL3D22E:00000000 _ZN5daisy4seedL3D22E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21437  .rodata._ZN5daisy4seedL3D23E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21441  .rodata._ZN5daisy4seedL3D23E:00000000 _ZN5daisy4seedL3D23E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21445  .rodata._ZN5daisy4seedL3D24E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21449  .rodata._ZN5daisy4seedL3D24E:00000000 _ZN5daisy4seedL3D24E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21453  .rodata._ZN5daisy4seedL3D25E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21457  .rodata._ZN5daisy4seedL3D25E:00000000 _ZN5daisy4seedL3D25E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21460  .rodata._ZN5daisy4seedL3D26E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21464  .rodata._ZN5daisy4seedL3D26E:00000000 _ZN5daisy4seedL3D26E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21468  .rodata._ZN5daisy4seedL3D27E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21472  .rodata._ZN5daisy4seedL3D27E:00000000 _ZN5daisy4seedL3D27E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21476  .rodata._ZN5daisy4seedL3D28E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21480  .rodata._ZN5daisy4seedL3D28E:00000000 _ZN5daisy4seedL3D28E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21484  .rodata._ZN5daisy4seedL3D29E:00000000 $d
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 852


C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21488  .rodata._ZN5daisy4seedL3D29E:00000000 _ZN5daisy4seedL3D29E
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21492  .rodata._ZN5daisy4seedL3D30E:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s:21496  .rodata._ZN5daisy4seedL3D30E:00000000 _ZN5daisy4seedL3D30E
                           .group:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED5Ev
                           .group:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC5IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_

UNDEFINED SYMBOLS
_ZN9Sequencer4tickEv
_ZN10ChordSynth7processEv
_ZN9DrumSynth7processEv
_ZN10StrumSynth7processEv
_ZdlPvj
memset
_ZN5daisy6Switch4InitENS_3PinEfNS0_4TypeENS0_8PolarityENS_4GPIO4PullE
_ZN9Sequencer14scroll_patternEb
_ZN5Trill7readI2CEb
_ZN5Trill13getNumTouchesEv
_ZN5Trill13touchLocationEh
_ZN10StrumSynth12trigger_noteEi
_ZN5daisy9DaisySeed6SetLedEb
_ZNK5daisy9AdcHandle8GetFloatEh
log10f
memcpy
memmove
_Znwj
_ZSt20__throw_length_errorPKc
memcmp
_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEj
_ZSt11_Hash_bytesPKvjj
_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZSt17__throw_bad_allocv
_ZSt19__throw_logic_errorPKc
__cxa_guard_acquire
__cxa_guard_release
__aeabi_atexit
_ZSt20__throw_out_of_rangePKc
__dso_handle
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZN10ChordSynth9set_chordE5Chord
_ZN10StrumSynth12set_arpeggioESt6vectorIiSaIiEE
_ZN5daisy6Switch8DebounceEv
_ZN5TrillC1Ev
_ZN9DrumSynthC1Ef
_ZN10StrumSynthC1EfRK15InstrumentState
_ZN9SequencerC1EfR9DrumSynthR10ChordSynth
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleENS_3PinENS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5Trill5setupEjNS_6DeviceEh
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc9EW4wl.s 			page 853


_ZN5TrillD1Ev
